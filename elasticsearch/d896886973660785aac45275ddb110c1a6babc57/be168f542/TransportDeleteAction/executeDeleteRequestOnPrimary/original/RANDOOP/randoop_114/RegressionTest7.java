import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest1.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str17 = deleteRequest16.parent();
        deleteRequest16.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.index("delete {[hi!][null][null]}");
        deleteRequest21.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str28 = deleteRequest21.parent();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.timeout(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        long long22 = deleteRequest3.version();
        java.lang.String str23 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.routing("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str26 = deleteRequest25.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.id("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String str35 = deleteRequest34.toString();
        java.lang.String[] strArray36 = deleteRequest34.indices();
        java.lang.String[] strArray37 = deleteRequest34.indices();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest20.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId38);
        long long40 = deleteRequest20.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest20.validate();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest20.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest16.setRefreshPolicy(refreshPolicy42);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest43.remoteAddress(transportAddress44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[null][null][null]}");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        deleteRequest49.setParentTask(taskId50);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest49.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest43.setRefreshPolicy(refreshPolicy52);
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][][]}" + "'", str35, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-3L) + "'", long40 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException41);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId54);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}]}");
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest10.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel31);
        boolean boolean33 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId41 = null;
        org.elasticsearch.tasks.Task task42 = deleteRequest37.createTask(0L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest44.indicesOptions();
        java.lang.String str47 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str49 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.version((long) (short) 100);
        deleteRequest48.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.parent();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest44.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType62 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest44.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest3.versionType(versionType62);
        deleteRequest3.setParentTask("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", 100L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][][]}" + "'", str47, "delete {[][][]}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        deleteRequest0.primaryTerm(0L);
        boolean boolean13 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str17 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.id("hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest43.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest50.indicesOptions();
        java.lang.String str53 = deleteRequest50.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        deleteRequest54.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str61 = deleteRequest60.parent();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest54.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest38.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest24.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest24.consistencyLevel();
        org.elasticsearch.index.VersionType versionType70 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.versionType(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(actionRequestValidationException36);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest0.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest0.setShardId(shardId30);
        java.lang.String str32 = deleteRequest0.toString();
        long long33 = deleteRequest0.version();
        java.lang.String str34 = deleteRequest0.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[null][null][null]}" + "'", str32, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("delete {[][][null]}");
        java.lang.String str12 = deleteRequest11.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][delete {[null][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest28.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest16.createTask((long) 0, "delete {[null][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task44 = deleteRequest5.createTask(32L, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}", taskId40);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.timeout("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task44);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.indexUUID;
        java.lang.String str16 = shardFailure13.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure13.routing;
        java.lang.String str18 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][null]}" + "'", str15, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str16, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str18, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest4.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest4.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest45.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest50.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest45.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.type("delete {[][][]}");
        java.lang.String str68 = deleteRequest65.routing();
        java.lang.String str69 = deleteRequest65.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str71 = deleteRequest70.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = deleteRequest70.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId73 = deleteRequest70.getParentTask();
        deleteRequest65.setParentTask(taskId73);
        org.elasticsearch.tasks.Task task75 = deleteRequest40.createTask((long) (short) 1, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId73);
        org.elasticsearch.tasks.Task task76 = deleteRequest4.createTask((long) (byte) 1, "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}", taskId73);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(transportAddress72);
        org.junit.Assert.assertNotNull(taskId73);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(task76);
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        long long25 = deleteRequest23.version();
        org.elasticsearch.index.shard.IndexShard indexShard26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult27 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest23, indexShard26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        java.lang.String str15 = deleteRequest13.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest28.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        deleteRequest48.setParentTask("delete {[null][null][delete {[hi!][null][null]}]}", 1L);
        deleteRequest48.setParentTask("delete {[null][null][delete {[hi!][null][null]}]}", 0L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue7);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        long long8 = deleteRequest7.version();
        java.lang.String str9 = deleteRequest7.parent();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][null][null]}", "delete {[][hi!][]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.type("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        deleteRequest29.primaryTerm((long) '4');
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        java.lang.String str11 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        java.lang.String[] strArray13 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest10.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        deleteRequest5.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[delete {[null][null][null]}][][]}");
        java.lang.String str15 = deleteRequest12.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str15, "delete {[delete {[null][null][null]}][null][null]}");
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest2.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest7.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest7.timeout(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        java.lang.String[] strArray20 = deleteRequest17.indices();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest3.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId21);
        long long23 = deleteRequest3.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest3.getRefreshPolicy();
        long long28 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.version((long) (short) 100);
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.setRefreshPolicy("delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        java.lang.String str8 = deleteRequest0.routing();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest0.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest0.indicesOptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(indicesOptions10);
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 1);
        long long7 = deleteRequest6.primaryTerm();
        deleteRequest6.primaryTerm(32L);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest6, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest7.setRefreshPolicy(refreshPolicy23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest3.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        deleteRequest41.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest41.setShardId(shardId46);
        java.lang.String str48 = deleteRequest47.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.parent("hi!");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy53 = deleteRequest49.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setRefreshPolicy(refreshPolicy53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.setRefreshPolicy(refreshPolicy53);
        long long56 = deleteRequest55.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + refreshPolicy23 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy23.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][][]}" + "'", str48, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[null][null][null]}" + "'", str50, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + refreshPolicy53 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy53.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest26.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version(32L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str30 = deleteRequest29.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest5.timeout();
        long long11 = deleteRequest5.version();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest3.shardId();
        java.lang.String str9 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        deleteRequest5.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.index("delete {[hi!][null][null]}");
        deleteRequest10.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str17 = deleteRequest10.parent();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest10.getParentTask();
        deleteRequest1.setParentTask(taskId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest1.remoteAddress(transportAddress20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.setShardId(shardId22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str55 = deleteRequest54.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest54.remoteAddress();
        org.elasticsearch.index.VersionType versionType57 = deleteRequest54.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest50.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest0.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = deleteRequest60.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(transportAddress61);
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("");
        java.lang.String str5 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        java.lang.String str10 = deleteRequest7.index();
        java.lang.String str11 = deleteRequest7.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("hi!");
        boolean boolean9 = deleteRequest8.getShouldPersistResult();
        java.lang.String str10 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        deleteRequest11.setParentTask("delete {[][][hi!]}", (long) '#');
        boolean boolean16 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest11.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest11.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        java.lang.String str31 = deleteRequest30.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest11.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest8.versionType(versionType35);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        java.lang.String str8 = deleteRequest2.type();
        java.lang.String str9 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("delete {[][][hi!]}");
        java.lang.String str39 = deleteRequest38.parent();
        java.lang.String str40 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        java.lang.String str49 = deleteRequest46.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest53.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str64 = deleteRequest63.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.id("hi!");
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        deleteRequest59.setParentTask(taskId68);
        org.elasticsearch.tasks.Task task70 = deleteRequest46.createTask(0L, "", "delete {[null][null][null]}", taskId68);
        deleteRequest35.setParentTask(taskId68);
        org.elasticsearch.tasks.Task task72 = deleteRequest23.createTask((long) '#', "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", taskId68);
        org.elasticsearch.tasks.Task task73 = deleteRequest2.createTask(1L, "delete {[][delete {[][][]}][]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", taskId68);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy74 = deleteRequest2.getRefreshPolicy();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput75 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest2.writeTo(streamOutput75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str40, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str49, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertTrue("'" + refreshPolicy74 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy74.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest11.versionType();
        java.lang.String str20 = deleteRequest11.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest11.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        java.lang.String str27 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest29.index();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        java.lang.String str40 = deleteRequest39.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[null][null][null]}" + "'", str33, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][hi!]}");
        java.lang.String str19 = deleteRequest16.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest25.versionType();
        java.lang.String str34 = deleteRequest25.parent();
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest25.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        java.lang.String str41 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest25.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str50 = deleteRequest49.id();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.setShardId(shardId51);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest49.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str61 = deleteRequest60.id();
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest49.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest45.timeout(timeValue62);
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest45.getParentTask();
        deleteRequest10.setParentTask(taskId65);
        deleteRequest10.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}", (-3L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(taskId65);
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        java.lang.String str5 = deleteRequest3.routing();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest3.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(actionRequestValidationException8);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str8 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = deleteRequest36.indicesOptions();
        java.lang.String str39 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.version((long) (short) 100);
        deleteRequest40.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str47 = deleteRequest46.parent();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest40.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest24.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest21.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest10.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest3.versionType(versionType48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest3.setRefreshPolicy("delete {[][][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[][][hi!]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(actionRequestValidationException22);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][][]}" + "'", str39, "delete {[][][]}");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String[] strArray20 = deleteRequest16.indices();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest16.getParentTask();
        java.lang.String str22 = deleteRequest16.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str22, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest6.index();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str14 = deleteRequest13.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[][][hi!]}");
        java.lang.String str32 = deleteRequest29.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest23.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.setRefreshPolicy(refreshPolicy33);
        long long36 = deleteRequest35.primaryTerm();
        long long37 = deleteRequest35.primaryTerm();
        java.lang.String str38 = deleteRequest35.parent();
        long long39 = deleteRequest35.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest35.indicesOptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str32, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 100L + "'", long39 == 100L);
        org.junit.Assert.assertNotNull(indicesOptions40);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest1.remoteAddress(transportAddress8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest11.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest13.getParentTask();
        java.lang.Class<?> wildcardClass17 = deleteRequest13.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][null]}");
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.getDescription();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}][]}");
        org.elasticsearch.index.shard.IndexShard indexShard50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete51 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest47, indexShard50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[][][]}" + "'", str29, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType70 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.versionType(versionType70);
        java.lang.String str72 = deleteRequest71.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest71.timeout();
        java.lang.String[] strArray74 = deleteRequest71.indices();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[null][null][null]}" + "'", str72, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest10.getParentTask();
        deleteRequest10.primaryTerm((long) (byte) -1);
        long long22 = deleteRequest10.version();
        java.lang.String str23 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.version((long) (byte) 0);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long4 = deleteRequest3.primaryTerm();
        deleteRequest3.primaryTerm(97L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest10.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(actionRequestValidationException16);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        java.lang.String str29 = deleteRequest24.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str35 = deleteRequest34.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("hi!");
        java.lang.String str38 = deleteRequest37.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest37.remoteAddress();
        java.lang.String[] strArray42 = deleteRequest37.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest24.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        java.lang.String str49 = deleteRequest46.routing();
        org.elasticsearch.index.shard.IndexShard indexShard50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult51 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest46, indexShard50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        java.lang.String str21 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][][]}");
        java.lang.String str36 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest42.createTask(0L, "", "", taskId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.setRefreshPolicy("");
        java.lang.String str50 = deleteRequest49.toString();
        java.lang.String[] strArray51 = deleteRequest49.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str62 = deleteRequest61.id();
        java.lang.String str63 = deleteRequest61.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest64.getParentTask();
        deleteRequest61.setParentTask(taskId68);
        deleteRequest57.setParentTask(taskId68);
        deleteRequest53.setParentTask(taskId68);
        deleteRequest38.setParentTask(taskId68);
        deleteRequest28.setParentTask(taskId68);
        org.elasticsearch.tasks.Task task74 = deleteRequest14.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId68);
        deleteRequest10.setParentTask(taskId68);
        org.elasticsearch.tasks.Task task76 = deleteRequest5.createTask(100L, "delete {[][][]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest5.parent("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.setRefreshPolicy("");
        deleteRequest80.setParentTask("delete {[delete {[null][null][null]}][null][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel91 = deleteRequest90.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId92 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest90.setShardId(shardId92);
        java.lang.String str94 = deleteRequest90.index();
        org.elasticsearch.index.shard.ShardId shardId95 = deleteRequest90.shardId();
        org.elasticsearch.tasks.TaskId taskId96 = deleteRequest90.getParentTask();
        org.elasticsearch.tasks.Task task97 = deleteRequest80.createTask((long) (-1), "delete {[null][delete {[null][null][null]}][null]}", "delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}", taskId96);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest80.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[][][]}" + "'", str50, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel91 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel91.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str94, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardId95);
        org.junit.Assert.assertNotNull(taskId96);
        org.junit.Assert.assertNotNull(task97);
        org.junit.Assert.assertNotNull(deleteRequest99);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.timeout(timeValue5);
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str10 = deleteRequest1.parent();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long17 = deleteRequest16.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest19.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest1.setRefreshPolicy(refreshPolicy20);
        boolean boolean22 = deleteRequest1.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId49 = null;
        org.elasticsearch.tasks.Task task50 = deleteRequest45.createTask(0L, "", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest45.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest52.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId55 = null;
        deleteRequest52.setParentTask(taskId55);
        deleteRequest52.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest52.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType61 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.versionType(versionType61);
        long long63 = deleteRequest40.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-3L) + "'", long63 == (-3L));
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.String str12 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure4.routing;
        java.lang.String str14 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][hi!]}" + "'", str14, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        long long5 = deleteRequest2.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "");
        java.lang.String str14 = shardFailure13.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        java.lang.String str16 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][][]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        java.lang.String str6 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(shardRouting7);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest14.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest14.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.versionType(versionType32);
        java.lang.String str34 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.setRefreshPolicy("");
        java.lang.String[] strArray46 = deleteRequest45.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest61.remoteAddress(transportAddress63);
        org.elasticsearch.common.unit.TimeValue timeValue65 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest61.timeout(timeValue65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest45.timeout(timeValue65);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest67.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest26.setRefreshPolicy(refreshPolicy68);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy70 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest3.setRefreshPolicy(refreshPolicy70);
        org.elasticsearch.common.io.stream.StreamInput streamInput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest71.readFrom(streamInput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + refreshPolicy70 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy70.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest14.remoteAddress(transportAddress37);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        long long19 = deleteRequest18.version();
        java.lang.String str20 = deleteRequest18.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        java.lang.String[] strArray8 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.version(10L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest7.indicesOptions();
        deleteRequest7.primaryTerm(100L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.setRefreshPolicy("delete {[delete {[hi!][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][null][null]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        java.lang.String str19 = deleteRequest17.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.consistencyLevel(writeConsistencyLevel20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[null][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        java.lang.String str19 = deleteRequest18.id();
        long long20 = deleteRequest18.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        java.lang.String[] strArray21 = deleteRequest13.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.timeout("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[delete {[null][null][null]}][][]}");
        deleteRequest3.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        java.lang.String[] strArray20 = deleteRequest17.indices();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest3.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId21);
        java.lang.String str23 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][null][null]}" + "'", str23, "delete {[][null][null]}");
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) (byte) 0);
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        long long17 = deleteRequest12.version();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest17.validate();
        deleteRequest17.primaryTerm((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.timeout(timeValue31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest27.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest45.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy56 = deleteRequest50.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest45.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.setRefreshPolicy(refreshPolicy56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest27.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest17.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.parent("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest64.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException75 = deleteRequest64.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertTrue("'" + refreshPolicy56 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy56.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(actionRequestValidationException75);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        java.lang.String str6 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest7.remoteAddress();
        long long14 = deleteRequest7.version();
        java.lang.String str15 = deleteRequest7.routing();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest7.getParentTask();
        deleteRequest0.setParentTask(taskId16);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest0.versionType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType18);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest5.id("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str26 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest5.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest5.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest5.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][hi!]}" + "'", str26, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(indicesOptions29);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", "delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String str13 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest5.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.parent("delete {[][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.id("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[][][hi!]}");
        java.lang.String str14 = deleteRequest13.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long19 = deleteRequest13.primaryTerm();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) 1, "delete {[null][delete {[null][null][null]}][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId20);
        java.lang.String str22 = deleteRequest3.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        deleteRequest20.primaryTerm((long) (short) 10);
        long long25 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task62 = deleteRequest20.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId58);
        org.elasticsearch.tasks.Task task63 = deleteRequest3.createTask((long) (byte) 100, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId58);
        long long64 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        long long67 = deleteRequest3.version();
        java.lang.String str68 = deleteRequest3.index();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-3L) + "'", long64 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-3L) + "'", long67 == (-3L));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[null][null][null]}" + "'", str68, "delete {[null][null][null]}");
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest6.parent();
        java.lang.String str8 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy21 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.setRefreshPolicy(refreshPolicy21);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.timeout(timeValue23);
        java.lang.Class<?> wildcardClass25 = timeValue23.getClass();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + refreshPolicy21 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy21.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        java.lang.String str6 = deleteRequest1.toString();
        deleteRequest1.primaryTerm((long) '4');
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][null][null]}" + "'", str6, "delete {[][null][null]}");
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][][]}");
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        java.lang.String str31 = deleteRequest24.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[][hi!][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[][delete {[null][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version(100L);
        deleteRequest10.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest18.versionType();
        java.lang.String str27 = deleteRequest18.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.version((long) (short) 100);
        java.lang.String str34 = deleteRequest30.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest36.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest36.remoteAddress(transportAddress38);
        java.lang.String str40 = deleteRequest36.index();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest18.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest10.versionType(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[null][null][null]}" + "'", str40, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(indicesOptions8);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][hi!][]}", "delete {[][delete {[null][null][null]}][]}");
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.routing("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.id("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.setShardId(shardId45);
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        deleteRequest33.setParentTask(taskId47);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        boolean boolean10 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.setRefreshPolicy("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        deleteRequest27.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest32.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.index("delete {[hi!][null][null]}");
        java.lang.String str36 = deleteRequest35.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.index("delete {[][][hi!]}");
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest35.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId44);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest26.timeout(timeValue46);
        long long48 = deleteRequest26.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy68 = deleteRequest62.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest52.setRefreshPolicy(refreshPolicy68);
        java.lang.String str70 = deleteRequest52.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest52.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest52.consistencyLevel();
        deleteRequest52.primaryTerm((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId83 = null;
        org.elasticsearch.tasks.Task task84 = deleteRequest79.createTask(0L, "", "", taskId83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest79.setRefreshPolicy("");
        java.lang.String str87 = deleteRequest86.toString();
        java.lang.String[] strArray88 = deleteRequest86.indices();
        deleteRequest86.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest86.routing("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue93 = deleteRequest92.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest92.type("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String[] strArray96 = deleteRequest92.indices();
        org.elasticsearch.tasks.TaskId taskId97 = deleteRequest92.getParentTask();
        deleteRequest52.setParentTask(taskId97);
        deleteRequest26.setParentTask(taskId97);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(actionRequestValidationException33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-3L) + "'", long48 == (-3L));
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + refreshPolicy68 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy68.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[][][]}" + "'", str70, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "delete {[][][]}" + "'", str87, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(timeValue93);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(taskId97);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.index();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        java.lang.String[] strArray17 = deleteRequest0.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.setRefreshPolicy("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String[] strArray13 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        deleteRequest5.primaryTerm((long) (short) 0);
        java.lang.String str18 = deleteRequest5.index();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}" + "'", str18, "delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest31.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest27.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest39.writeTo(streamOutput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(transportAddress32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest5.timeout();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest5.versionType();
        deleteRequest5.setParentTask("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.index("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str15 = deleteRequest5.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][hi!]}" + "'", str15, "delete {[][][hi!]}");
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest36.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest40.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.versionType(versionType47);
        long long50 = deleteRequest49.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.version((long) 100);
        org.elasticsearch.action.support.IndicesOptions indicesOptions53 = deleteRequest49.indicesOptions();
        java.lang.String str54 = deleteRequest49.type();
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.VersionType versionType60 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest49.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest49.setShardId(shardId66);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.setRefreshPolicy("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(indicesOptions53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest10.timeout();
        java.lang.String str28 = deleteRequest10.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[null][null][null]}][delete {[null][null][null]}]}", "delete {[][hi!][hi!]}", "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String str35 = deleteRequest27.index();
        java.lang.String str36 = deleteRequest27.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest38.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest23.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        java.lang.String[] strArray58 = deleteRequest57.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest57.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = null;
        deleteRequest73.remoteAddress(transportAddress75);
        org.elasticsearch.common.unit.TimeValue timeValue77 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest73.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest57.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel86 = deleteRequest85.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest81.consistencyLevel(writeConsistencyLevel86);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel88 = deleteRequest81.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest46.consistencyLevel(writeConsistencyLevel88);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel86 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel86.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel88 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel88.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest89);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest8.indicesOptions();
        java.lang.String str11 = deleteRequest8.routing();
        deleteRequest8.setParentTask("delete {[delete {[][][]}][null][null]}", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest25.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId28 = null;
        deleteRequest25.setParentTask(taskId28);
        deleteRequest25.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str34 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest8.timeout(timeValue39);
        java.lang.String str41 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.index("delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest43.remoteAddress();
        org.elasticsearch.index.shard.IndexShard indexShard45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete46 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest43, indexShard45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.setParentTask("delete {[hi!][null][null]}", (long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.timeout("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest10.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest10.remoteAddress();
        long long18 = deleteRequest10.version();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.Throwable throwable11 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNull(throwable11);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest1.consistencyLevel();
        boolean boolean4 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest1.indicesOptions();
        java.lang.String str6 = deleteRequest1.toString();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][null][null]}" + "'", str6, "delete {[][null][null]}");
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = deleteRequest0.remoteAddress();
        java.lang.String str4 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(transportAddress3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][hi!]}" + "'", str4, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][null][null]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("hi!", 1L);
        java.lang.String str16 = deleteRequest12.index();
        long long17 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.setRefreshPolicy(refreshPolicy24);
        deleteRequest25.setParentTask("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", 10L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest30.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest3.createTask((long) (byte) 1, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][][]}", taskId25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(timeValue27);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str15 = deleteRequest14.id();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str18 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        deleteRequest14.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest14.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest5.createTask(32L, "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}", "delete {[hi!][null][null]}", taskId27);
        java.lang.String str29 = deleteRequest5.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest5.timeout("delete {[null][null][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.version();
        org.elasticsearch.common.unit.TimeValue timeValue15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest16, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.versionType(versionType12);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest3.consistencyLevel();
        java.lang.String str15 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.setRefreshPolicy(refreshPolicy33);
        java.lang.String str35 = deleteRequest22.index();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest22.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("delete {[][][]}");
        java.lang.String str46 = deleteRequest43.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str50 = deleteRequest49.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.setShardId(shardId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        deleteRequest48.setParentTask(taskId57);
        deleteRequest39.setParentTask(taskId57);
        org.elasticsearch.tasks.Task task60 = deleteRequest3.createTask((long) 'a', "delete {[][delete {[null][null][null]}][]}", "delete {[][][delete {[][null][null]}]}", taskId57);
        java.lang.String str61 = deleteRequest3.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[][][]}" + "'", str46, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[null][null][null]}" + "'", str50, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        java.lang.String str21 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest10.parent("delete {[][][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        deleteRequest16.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = deleteRequest40.remoteAddress();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest16.versionType(versionType43);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest9.consistencyLevel(writeConsistencyLevel45);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(transportAddress42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest3.remoteAddress(transportAddress16);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.reason;
        java.lang.String str16 = shardFailure13.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure13.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure13.routing;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str15, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str16, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertNull(shardRouting18);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy34 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str39 = deleteRequest38.id();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.setShardId(shardId40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.setShardId(shardId42);
        java.lang.String str44 = deleteRequest43.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest48.versionType();
        java.lang.String str57 = deleteRequest48.parent();
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest48.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest43.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest30.consistencyLevel(writeConsistencyLevel59);
        java.lang.String[] strArray62 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest30.id("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.timeout("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(refreshPolicy34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long46 = deleteRequest45.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        deleteRequest45.setParentTask(taskId55);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest42.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest31.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("delete {[][][]}");
        java.lang.String str66 = deleteRequest63.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.type("delete {[][][]}");
        java.lang.String str77 = deleteRequest74.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest74.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest70.timeout(timeValue84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest31.timeout(timeValue84);
        java.lang.String str87 = deleteRequest86.type();
        long long88 = deleteRequest86.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[][][]}" + "'", str66, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[][][]}" + "'", str77, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        deleteRequest14.setParentTask("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest14.id("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        boolean boolean44 = deleteRequest43.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[][null][null]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setRefreshPolicy(refreshPolicy13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        java.lang.String[] strArray16 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest14, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest30.remoteAddress(transportAddress36);
        deleteRequest30.primaryTerm((long) (short) -1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest48.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.setShardId(shardId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = deleteRequest53.remoteAddress();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest36.versionType(versionType55);
        boolean boolean58 = deleteRequest57.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(transportAddress54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest9, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String[] strArray16 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.consistencyLevel(writeConsistencyLevel28);
        deleteRequest29.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.versionType(versionType33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest34.remoteAddress();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest34.validate();
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNull(actionRequestValidationException36);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.Class<?> wildcardClass3 = deleteRequest0.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][null]}", "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.timeout("delete {[][][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        deleteRequest0.primaryTerm((long) (byte) 1);
        java.lang.String str11 = deleteRequest0.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest0.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest0.remoteAddress(transportAddress13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest6.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str8, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNull(transportAddress9);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        java.lang.String str26 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.routing("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.id("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest36.id("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest28.timeout(timeValue46);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.id();
        java.lang.String str28 = deleteRequest24.parent();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str27, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.index("");
        java.lang.String[] strArray7 = deleteRequest6.indices();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        java.lang.String str14 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        java.lang.String str31 = deleteRequest28.routing();
        java.lang.String str32 = deleteRequest28.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str34 = deleteRequest33.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest33.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        deleteRequest28.setParentTask(taskId36);
        deleteRequest24.setParentTask(taskId36);
        deleteRequest6.setParentTask(taskId36);
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest6.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest6.index("delete {[null][delete {[null][null][delete {[][][hi!]}]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str8, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest0.validate();
        deleteRequest0.primaryTerm((long) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][]}");
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest16.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str28 = deleteRequest27.index();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest16.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest0.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][]}" + "'", str14, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertTrue("'" + refreshPolicy23 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy23.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure4.routing;
        java.lang.Throwable throwable9 = shardFailure4.cause;
        java.lang.String str10 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure4.routing;
        java.lang.String str13 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure4.routing;
        java.lang.String str15 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][]}" + "'", str7, "delete {[][][]}");
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNull(throwable9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        java.lang.String str6 = deleteRequest2.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy12 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + refreshPolicy12 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy12.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(transportAddress13);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        long long6 = deleteRequest3.version();
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest3.validate();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        long long28 = deleteRequest24.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long39 = deleteRequest38.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest31.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.timeout(timeValue40);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest28.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete52 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest50, indexShard51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "delete {[delete {[null][null][null]}][][]}", "delete {[delete {[][][hi!]}][delete {[null][null][null]}][]}");
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        long long11 = deleteRequest10.version();
        java.lang.String str12 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest16.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId63 = null;
        org.elasticsearch.tasks.Task task64 = deleteRequest59.createTask(0L, "", "", taskId63);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy65 = deleteRequest59.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask(0L, "", "", taskId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest69.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest59.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest55.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest55.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest79.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest79.remoteAddress(transportAddress83);
        org.elasticsearch.index.VersionType versionType85 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest50.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest16.versionType(versionType85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest10.versionType(versionType85);
        org.elasticsearch.common.transport.TransportAddress transportAddress89 = deleteRequest10.remoteAddress();
        java.lang.String str90 = deleteRequest10.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertTrue("'" + refreshPolicy65 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy65.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNull(transportAddress89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str90, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", "delete {[null][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(timeValue4);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        java.lang.String str12 = deleteRequest9.getDescription();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][null][]}" + "'", str12, "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][null][]}");
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String[] strArray13 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(indicesOptions17);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.parent("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.setRefreshPolicy("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.routing();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest0.timeout();
        deleteRequest0.setParentTask("delete {[delete {[null][null][null]}][][]}", (long) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue8);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        long long10 = deleteRequest3.primaryTerm();
        java.lang.String str11 = deleteRequest3.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.setShardId(shardId26);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest24.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) (byte) 0);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][null][null]}][hi!]}", "delete {[null][null][delete {[][][hi!]}]}", "delete {[null][null][delete {[][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("");
        long long6 = deleteRequest3.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest5.versionType();
        java.lang.String str14 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest5.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest21.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.parent();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest21.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType30);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.setShardId(shardId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        java.lang.String str46 = deleteRequest45.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest50.versionType();
        java.lang.String str59 = deleteRequest50.parent();
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest50.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest45.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest32.consistencyLevel(writeConsistencyLevel61);
        java.lang.String str64 = deleteRequest32.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][hi!][]}", deleteRequest32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(refreshPolicy36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest3.remoteAddress();
        java.lang.String str19 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        java.lang.String str22 = deleteRequest21.routing();
        java.lang.String str23 = deleteRequest21.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}" + "'", str23, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("");
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        java.lang.String str45 = deleteRequest0.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest0.timeout("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[hi!][][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        java.lang.String str8 = deleteRequest5.toString();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) (-1));
        java.lang.String str12 = deleteRequest11.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.timeout("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest32.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest40.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest32.consistencyLevel(writeConsistencyLevel49);
        deleteRequest32.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest32.type("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy55 = deleteRequest54.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest25.setRefreshPolicy(refreshPolicy55);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + refreshPolicy55 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy55.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest1.validate();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        java.lang.String[] strArray13 = deleteRequest11.indices();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest22.indicesOptions();
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        deleteRequest26.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest7.versionType(versionType34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest7.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest51.consistencyLevel();
        java.lang.String str53 = deleteRequest51.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest7.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest7.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue58);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        boolean boolean9 = deleteRequest7.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long7 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.index("");
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.timeout(timeValue13);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setRefreshPolicy("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[][null][null]}][delete {[][hi!][delete {[null][null][null]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}", "delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}" + "'", str4, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.id("");
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest28, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId15 = null;
        deleteRequest12.setParentTask(taskId15);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[hi!][null][null]}][hi!]}", deleteRequest20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest0.getRefreshPolicy();
        java.lang.String str4 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        java.lang.String str21 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest22.getParentTask();
        deleteRequest19.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        java.lang.String str44 = deleteRequest42.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest15.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str48 = deleteRequest15.type();
        long long49 = deleteRequest15.version();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-3L) + "'", long49 == (-3L));
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.setParentTask("hi!", (long) (short) 1);
        long long11 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.setShardId(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.timeout(timeValue30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest7.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.routing("delete {[][delete {[][][]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.parent("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy4 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String[] strArray16 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.consistencyLevel(writeConsistencyLevel28);
        deleteRequest29.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.versionType(versionType33);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest3.validate();
        java.lang.String str36 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.id("delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy4 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy4.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(actionRequestValidationException35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        java.lang.String str13 = deleteRequest12.toString();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}][null][null]}");
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest9, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version(0L);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest7.versionType();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        deleteRequest14.setParentTask(taskId39);
        long long41 = deleteRequest14.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-3L) + "'", long41 == (-3L));
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        deleteRequest10.primaryTerm((long) 0);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest10.timeout();
        java.lang.String str17 = deleteRequest10.toString();
        java.lang.String[] strArray18 = deleteRequest10.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        java.lang.String str31 = deleteRequest28.id();
        java.lang.String str32 = deleteRequest28.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest28.validate();
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest10.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest40.remoteAddress(transportAddress42);
        java.lang.String str44 = deleteRequest40.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str50 = deleteRequest49.id();
        java.lang.String str51 = deleteRequest49.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.type("delete {[][][]}");
        java.lang.String str54 = deleteRequest53.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest40.validate();
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task61 = deleteRequest10.createTask(0L, "delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[][delete {[null][null][null]}][]}", taskId60);
        deleteRequest10.setParentTask("delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", (long) (byte) 1);
        long long65 = deleteRequest10.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str32, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[null][null][null]}" + "'", str44, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[][][]}" + "'", str54, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-3L) + "'", long65 == (-3L));
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.setRefreshPolicy(refreshPolicy44);
        long long47 = deleteRequest29.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.setShardId(shardId48);
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId58 = null;
        org.elasticsearch.tasks.Task task59 = deleteRequest54.createTask(0L, "", "", taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest54.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType62 = deleteRequest54.versionType();
        java.lang.String str63 = deleteRequest54.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId71 = null;
        org.elasticsearch.tasks.Task task72 = deleteRequest67.createTask(0L, "", "", taskId71);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy73 = deleteRequest67.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest54.setRefreshPolicy(refreshPolicy73);
        java.lang.String[] strArray75 = deleteRequest74.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest79.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy92 = deleteRequest89.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest79.setRefreshPolicy(refreshPolicy92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest74.setRefreshPolicy(refreshPolicy92);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel95 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest49.consistencyLevel(writeConsistencyLevel95);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][]}" + "'", str63, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertTrue("'" + refreshPolicy73 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy73.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertTrue("'" + refreshPolicy92 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy92.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel95 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel95.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest96);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy13 = deleteRequest10.getRefreshPolicy();
        java.lang.String str14 = deleteRequest10.routing();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + refreshPolicy13 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy13.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.setShardId(shardId3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest17.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest0.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest31.getRefreshPolicy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.setRefreshPolicy("delete {[][][delete {[][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        java.lang.String str8 = deleteRequest1.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest1.validate();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.version((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.timeout(timeValue19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest20.shardId();
        boolean boolean24 = deleteRequest20.getShouldPersistResult();
        long long25 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.parent("delete {[delete {[][null][null]}][][]}");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str16 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        deleteRequest11.setParentTask(taskId20);
        deleteRequest1.setParentTask(taskId20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest1.validate();
        java.lang.Class<?> wildcardClass24 = deleteRequest1.getClass();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        long long8 = deleteRequest2.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest2.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.id("hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        deleteRequest32.setParentTask(taskId41);
        deleteRequest22.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task44 = deleteRequest2.createTask(97L, "", "delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId52 = null;
        org.elasticsearch.tasks.Task task53 = deleteRequest48.createTask(0L, "", "", taskId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest48.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest2.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean63 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest62.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.setShardId(shardId72);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest70.setShardId(shardId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType79 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.versionType(versionType79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest62.timeout(timeValue83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest58.timeout(timeValue83);
        org.elasticsearch.index.shard.IndexShard indexShard86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult87 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest58, indexShard86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(versionType79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest13.setParentTask(taskId23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        deleteRequest37.primaryTerm(1L);
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        java.lang.String str41 = deleteRequest37.id();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.versionType(versionType42);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest10.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest10.validate();
        deleteRequest10.primaryTerm((long) (byte) 0);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNull(actionRequestValidationException45);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}", "delete {[hi!][null][null]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", "delete {[][delete {[null][null][null]}][null]}", "delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) (byte) 10, "delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", "delete {[][][hi!]}", taskId7);
        org.junit.Assert.assertNotNull(task8);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy22 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.setRefreshPolicy(refreshPolicy22);
        java.lang.String[] strArray24 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.setRefreshPolicy(refreshPolicy41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest23.setRefreshPolicy(refreshPolicy41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest23.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest23.timeout("delete {[][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + refreshPolicy22 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy22.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.index("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        long long9 = deleteRequest8.primaryTerm();
        java.lang.String str10 = deleteRequest8.getDescription();
        java.lang.String str11 = deleteRequest8.index();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}" + "'", str10, "delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}" + "'", str11, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest13.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        java.lang.String str17 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.setRefreshPolicy(refreshPolicy30);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest7.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.timeout("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][][delete {[][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}][null][null]}");
        long long24 = deleteRequest21.primaryTerm();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][null][null]}][hi!]}", "delete {[][null][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", "delete {[][delete {[][][]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[null][delete {[null][null][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[null][null][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest6.versionType(versionType42);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest6.setRefreshPolicy("delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version(1L);
        java.lang.String str11 = deleteRequest10.type();
        java.lang.String str12 = deleteRequest10.parent();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        java.lang.String str16 = deleteRequest10.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest10.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][hi!]}" + "'", str13, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertNotNull(indicesOptions17);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.versionType(versionType14);
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("delete {[][][null]}");
        long long12 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest9.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}" + "'", str6, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        java.lang.String str6 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest7.remoteAddress();
        long long14 = deleteRequest7.version();
        java.lang.String str15 = deleteRequest7.routing();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest7.getParentTask();
        deleteRequest0.setParentTask(taskId16);
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        deleteRequest2.setParentTask("delete {[][delete {[][][]}][delete {[][][]}]}", (long) 1);
        long long11 = deleteRequest2.primaryTerm();
        java.lang.String str12 = deleteRequest2.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest1.getRefreshPolicy();
        java.lang.String str7 = deleteRequest1.type();
        long long8 = deleteRequest1.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", throwable2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        java.lang.String str11 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str5, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str6, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str7, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str11, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[null][null][null]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.String str6 = shardFailure4.reason;
        java.lang.String str7 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.index("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str20 = deleteRequest19.id();
        java.lang.String str21 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str23 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest22.getParentTask();
        deleteRequest19.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        java.lang.String str44 = deleteRequest42.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest15.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.index.shard.IndexShard indexShard48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete49 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest47, indexShard48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy2 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest1.validate();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + refreshPolicy2 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy2.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str6 = deleteRequest5.id();
        java.lang.String str7 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        long long13 = deleteRequest9.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest9.remoteAddress(transportAddress14);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][null]}", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        java.lang.String str8 = deleteRequest7.routing();
        java.lang.String str9 = deleteRequest7.getDescription();
        long long10 = deleteRequest7.version();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest7.shardId();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][null][null]}" + "'", str9, "delete {[][null][null]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        java.lang.String str27 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[][][hi!]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask(0L, "", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest39.versionType();
        java.lang.String str48 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest39.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy50 = deleteRequest39.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        java.lang.String str55 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        java.lang.String str61 = deleteRequest57.index();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest39.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest35.versionType(versionType62);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest26.setRefreshPolicy(refreshPolicy66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        long long72 = deleteRequest71.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest71.setShardId(shardId73);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest74.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest26.setRefreshPolicy(refreshPolicy75);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest26.setShardId(shardId77);
        org.elasticsearch.index.shard.ShardId shardId79 = deleteRequest78.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest78.timeout("delete {[delete {[hi!][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertTrue("'" + refreshPolicy50 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy50.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(shardId79);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest3.getDescription();
        java.lang.String str9 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest3.indicesOptions();
        java.lang.String str12 = deleteRequest3.type();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(versionType13);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest2.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.parent("delete {[][][]}");
        java.lang.String str37 = deleteRequest34.id();
        java.lang.String[] strArray38 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str40 = deleteRequest39.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest39.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId42);
        deleteRequest32.setParentTask(taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy45 = deleteRequest32.getRefreshPolicy();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + refreshPolicy45 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy45.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][]}");
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId40 = null;
        org.elasticsearch.tasks.Task task41 = deleteRequest36.createTask(0L, "", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.setRefreshPolicy("");
        java.lang.String str44 = deleteRequest43.toString();
        java.lang.String[] strArray45 = deleteRequest43.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str56 = deleteRequest55.id();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str59 = deleteRequest58.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest58.getParentTask();
        deleteRequest55.setParentTask(taskId62);
        deleteRequest51.setParentTask(taskId62);
        deleteRequest47.setParentTask(taskId62);
        deleteRequest32.setParentTask(taskId62);
        deleteRequest22.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task68 = deleteRequest15.createTask((long) (short) -1, "delete {[hi!][null][null]}", "hi!", taskId62);
        java.lang.String str69 = deleteRequest15.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest15.timeout();
        java.lang.String str71 = deleteRequest15.toString();
        java.lang.String str72 = deleteRequest15.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[][][]}" + "'", str69, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][][]}" + "'", str71, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[][][]}" + "'", str72, "delete {[][][]}");
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        deleteRequest10.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest10.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = deleteRequest58.indicesOptions();
        java.lang.String str61 = deleteRequest58.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.version((long) (short) 100);
        deleteRequest62.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str69 = deleteRequest68.parent();
        org.elasticsearch.index.VersionType versionType70 = deleteRequest68.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest58.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest46.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest44.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress77 = null;
        deleteRequest76.remoteAddress(transportAddress77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.index("delete {[][][hi!]}");
        java.lang.String str82 = deleteRequest81.parent();
        java.lang.String str83 = deleteRequest81.type();
        long long84 = deleteRequest81.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue85 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest76.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest10.timeout(timeValue85);
        java.lang.Class<?> wildcardClass88 = deleteRequest10.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][][]}" + "'", str61, "delete {[][][]}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.index("delete {[][][hi!]}");
        java.lang.String str5 = deleteRequest4.parent();
        java.lang.String str6 = deleteRequest4.type();
        long long7 = deleteRequest4.primaryTerm();
        long long8 = deleteRequest4.version();
        java.lang.String str9 = deleteRequest4.type();
        deleteRequest4.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest4.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str14 = deleteRequest13.toString();
        java.lang.String str15 = deleteRequest13.getDescription();
        long long16 = deleteRequest13.version();
        org.elasticsearch.common.unit.TimeValue timeValue17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.timeout(timeValue17);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest1.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest1.validate();
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str14, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        java.lang.Class<?> wildcardClass19 = deleteRequest17.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        java.lang.String[] strArray30 = deleteRequest29.indices();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.setShardId(shardId31);
        long long33 = deleteRequest29.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest29.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest15.createTask((long) (byte) -1, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[][null][null]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest15.type("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete44 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest42, indexShard43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[null][null][null]}" + "'", str35, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest23.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest49.remoteAddress(transportAddress50);
        java.lang.String str52 = deleteRequest49.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[][][hi!]}" + "'", str52, "delete {[][][hi!]}");
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy19 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setRefreshPolicy(refreshPolicy19);
        java.lang.String str21 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("hi!");
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest23.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertTrue("'" + refreshPolicy19 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy19.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException28);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][delete {[null][null][null]}][]}][delete {[][][]}]}", "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}", "delete {[][delete {[][][hi!]}][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}]}");
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest5.remoteAddress(transportAddress7);
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[][][]}][delete {[][delete {[][][]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure14.routing;
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        long long27 = deleteRequest26.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.timeout(timeValue32);
        deleteRequest33.setParentTask("hi!", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.type("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest42.createTask(0L, "", "", taskId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.setRefreshPolicy("");
        deleteRequest49.primaryTerm(1L);
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        java.lang.String str53 = deleteRequest49.id();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest33.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest26.versionType(versionType54);
        org.elasticsearch.common.io.stream.StreamInput streamInput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest26.readFrom(streamInput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 100L + "'", long27 == 100L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        deleteRequest10.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask(0L, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        java.lang.String str28 = deleteRequest19.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest19.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest19.setRefreshPolicy(refreshPolicy30);
        long long32 = deleteRequest19.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest10.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.timeout(timeValue33);
        java.lang.Class<?> wildcardClass36 = timeValue33.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest28.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        deleteRequest48.setParentTask("delete {[null][null][delete {[hi!][null][null]}]}", 1L);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest48.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId52);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest31.setParentTask("hi!", (long) (short) 1);
        long long35 = deleteRequest31.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][]}");
        java.lang.String str42 = deleteRequest39.id();
        java.lang.String str43 = deleteRequest39.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest39.validate();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest0.timeout(timeValue45);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str43, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][][]}", (java.lang.Throwable) actionRequestValidationException14, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = shardFailure26.routing;
        java.lang.String str28 = shardFailure26.reason;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNull(shardRouting27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str28, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest40.setParentTask("", (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest2.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][null][null]}]}", "", "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][]}");
        java.lang.String str5 = shardFailure4.reason;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        boolean boolean36 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.routing("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        deleteRequest14.setParentTask(taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.consistencyLevel(writeConsistencyLevel47);
        deleteRequest48.primaryTerm((long) (byte) 1);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        java.lang.String str15 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest19.remoteAddress(transportAddress21);
        java.lang.String str23 = deleteRequest19.index();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest10.versionType(versionType24);
        boolean boolean26 = deleteRequest10.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("delete {[][][hi!]}");
        java.lang.String str40 = deleteRequest37.getDescription();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.setRefreshPolicy(refreshPolicy41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.setRefreshPolicy(refreshPolicy41);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.timeout("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str40, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.id("hi!");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest12.createTask((long) '4', "", "delete {[][][]}", taskId25);
        org.elasticsearch.tasks.Task task27 = deleteRequest0.createTask((long) (byte) 10, "delete {[][null][null]}", "", taskId25);
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest0.shardId();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest0.getRefreshPolicy();
        deleteRequest0.setParentTask("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", (long) '4');
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest0.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.timeout("delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][hi!]}" + "'", str13, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId33);
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.index("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.id("delete {[delete {[delete {[][null][null]}][][delete {[][][hi!]}]}][delete {[][null][null]}][delete {[null][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest8.setShardId(shardId19);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.timeout("delete {[null][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        java.lang.String str5 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException4, "delete {[][][]}");
        java.lang.Throwable throwable7 = shardFailure6.cause;
        java.lang.String str8 = shardFailure6.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure6.routing;
        java.lang.Throwable throwable10 = shardFailure6.cause;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest1.versionType();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest1.getParentTask();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId7);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setShardId(shardId6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.version((long) 10);
        java.lang.String str17 = deleteRequest16.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.routing("delete {[][][hi!]}");
        java.lang.String str17 = deleteRequest16.index();
        long long18 = deleteRequest16.primaryTerm();
        long long19 = deleteRequest16.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.type("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(transportAddress5);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[][][]}");
        java.lang.String str12 = deleteRequest9.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest27.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest43.remoteAddress(transportAddress45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest16.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest5.timeout(timeValue47);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest51.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest51.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.setShardId(shardId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest57.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest57.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str65 = deleteRequest64.parent();
        org.elasticsearch.index.VersionType versionType66 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest57.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest51.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy73 = deleteRequest72.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest51.setRefreshPolicy(refreshPolicy73);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][][]}", deleteRequest74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + refreshPolicy73 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy73.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String[] strArray25 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId42 = null;
        org.elasticsearch.tasks.Task task43 = deleteRequest38.createTask(0L, "", "", taskId42);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy44 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.setRefreshPolicy(refreshPolicy44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.setRefreshPolicy(refreshPolicy44);
        boolean boolean47 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.VersionType versionType50 = deleteRequest29.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest29.timeout("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[][][hi!]}][null][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][][]}" + "'", str24, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + refreshPolicy44 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy44.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(versionType50);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        boolean boolean12 = deleteRequest11.getShouldPersistResult();
        java.lang.String str13 = deleteRequest11.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str13, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][delete {[][][]}]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str37 = deleteRequest36.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest36.getParentTask();
        deleteRequest33.setParentTask(taskId40);
        deleteRequest29.setParentTask(taskId40);
        deleteRequest25.setParentTask(taskId40);
        deleteRequest10.setParentTask(taskId40);
        deleteRequest10.setParentTask("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", 32L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest10.routing("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        java.lang.String str11 = deleteRequest3.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest17.versionType();
        java.lang.String str26 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        java.lang.String str38 = deleteRequest37.toString();
        java.lang.String[] strArray39 = deleteRequest37.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.index("");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = deleteRequest47.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest43.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest3.timeout(timeValue61);
        org.elasticsearch.index.shard.IndexShard indexShard63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult64 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest62, indexShard63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress48);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        deleteRequest10.primaryTerm(1L);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.parent();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        java.lang.String str21 = deleteRequest12.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.setRefreshPolicy(refreshPolicy23);
        long long25 = deleteRequest12.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest28.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str36 = deleteRequest35.parent();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest12.versionType(versionType37);
        java.lang.String str40 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.setShardId(shardId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str49 = deleteRequest48.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.id("hi!");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest62.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId66 = deleteRequest65.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask(0L, "", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest77.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions79 = deleteRequest77.indicesOptions();
        java.lang.String str80 = deleteRequest77.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str82 = deleteRequest81.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest81.version((long) (short) 100);
        deleteRequest81.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str88 = deleteRequest87.parent();
        org.elasticsearch.index.VersionType versionType89 = deleteRequest87.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest81.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest77.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest65.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest62.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest51.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest44.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest3.versionType(versionType89);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(actionRequestValidationException63);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "delete {[][][]}" + "'", str80, "delete {[][][]}");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(versionType89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        java.lang.String str4 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        java.lang.String str15 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest14.createTask((long) '4', "", "delete {[][][]}", taskId27);
        org.elasticsearch.tasks.Task task29 = deleteRequest2.createTask((long) (byte) 10, "delete {[][null][null]}", "", taskId27);
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest2.shardId();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest2.getRefreshPolicy();
        deleteRequest2.setParentTask("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", (long) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][hi!]}" + "'", str15, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest7.createTask(0L, "", "", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("");
        java.lang.String str15 = deleteRequest7.index();
        java.lang.String str16 = deleteRequest7.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest18.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.timeout(timeValue23);
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest3.setParentTask(taskId29);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.index.VersionType versionType70 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.versionType(versionType70);
        org.elasticsearch.action.support.IndicesOptions indicesOptions72 = deleteRequest71.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest71.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest71.version((long) 0);
        java.lang.String str76 = deleteRequest75.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(indicesOptions72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[null][null][null]}" + "'", str76, "delete {[null][null][null]}");
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        java.lang.String str13 = deleteRequest11.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest19.remoteAddress(transportAddress20);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest9.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.timeout(timeValue14);
        java.lang.String str16 = deleteRequest9.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException17, "");
        java.lang.String str22 = shardFailure21.indexUUID;
        java.lang.String str23 = shardFailure21.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure21.routing;
        java.lang.String str25 = shardFailure21.indexUUID;
        java.lang.Throwable throwable26 = shardFailure21.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable26, "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}", throwable26, "delete {[][hi!][]}");
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(shardRouting24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable26.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}", "delete {[][][delete {[][delete {[][][hi!]}][delete {[][][]}]}]}", "delete {[delete {[][][hi!]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest34.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest34.consistencyLevel();
        java.lang.String str38 = deleteRequest34.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest34.consistencyLevel();
        org.elasticsearch.index.shard.IndexShard indexShard41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete42 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest34, indexShard41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNull(actionRequestValidationException36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.parent();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        java.lang.String str23 = deleteRequest14.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest14.setRefreshPolicy(refreshPolicy25);
        long long27 = deleteRequest14.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest30.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str38 = deleteRequest37.parent();
        org.elasticsearch.index.VersionType versionType39 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest30.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest14.versionType(versionType39);
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest3.timeout(timeValue42);
        java.lang.Class<?> wildcardClass45 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.id("delete {[null][null][null]}");
        java.lang.String str25 = deleteRequest24.parent();
        java.lang.Class<?> wildcardClass26 = deleteRequest24.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.routing("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", deleteRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.id();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str6 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest5.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest5.getParentTask();
        deleteRequest0.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        deleteRequest20.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str29 = deleteRequest28.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest28.timeout();
        long long31 = deleteRequest28.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.index("");
        java.lang.String str34 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.parent("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest28.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        java.lang.String str44 = deleteRequest39.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest48.remoteAddress(transportAddress50);
        java.lang.String str52 = deleteRequest48.index();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest46.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest28.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest0.versionType(versionType53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest0.getParentTask();
        java.lang.String str60 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[][][]}" + "'", str60, "delete {[][][]}");
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[][][]}");
        java.lang.String str10 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String[] strArray26 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest25.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.timeout(timeValue45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = deleteRequest49.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest49.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest55.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest55.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.parent();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest49.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy71 = deleteRequest70.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest49.setRefreshPolicy(refreshPolicy71);
        java.lang.String str73 = deleteRequest72.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.routing("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput76 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest72.readFrom(streamInput76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + refreshPolicy71 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy71.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 10);
        java.lang.String str17 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        long long22 = deleteRequest21.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest7.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.parent();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest7.versionType(versionType16);
        long long18 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        java.lang.String str31 = deleteRequest29.index();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest29.timeout();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        deleteRequest29.setParentTask("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("delete {[][][hi!]}");
        java.lang.String str40 = deleteRequest39.parent();
        java.lang.String str41 = deleteRequest39.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = deleteRequest47.validate();
        java.lang.String str51 = deleteRequest47.index();
        java.lang.String str52 = deleteRequest47.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest47.setShardId(shardId53);
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest29.timeout(timeValue55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest20.timeout(timeValue55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.timeout(timeValue55);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][null]}" + "'", str21, "delete {[][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str41, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}" + "'", str51, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}" + "'", str52, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        java.lang.String str5 = deleteRequest3.type();
        deleteRequest3.primaryTerm((long) 0);
        java.lang.String str8 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][][hi!]}");
        boolean boolean15 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest23.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.timeout(timeValue28);
        java.lang.String str30 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str38 = deleteRequest37.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[][][]}");
        java.lang.String str45 = deleteRequest42.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.setRefreshPolicy("");
        java.lang.String str59 = deleteRequest58.toString();
        java.lang.String[] strArray60 = deleteRequest58.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        java.lang.String str72 = deleteRequest70.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str74 = deleteRequest73.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest73.getParentTask();
        deleteRequest70.setParentTask(taskId77);
        deleteRequest66.setParentTask(taskId77);
        deleteRequest62.setParentTask(taskId77);
        deleteRequest47.setParentTask(taskId77);
        deleteRequest37.setParentTask(taskId77);
        org.elasticsearch.tasks.Task task83 = deleteRequest23.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId77);
        deleteRequest19.setParentTask(taskId77);
        org.elasticsearch.tasks.Task task85 = deleteRequest14.createTask(100L, "delete {[][][]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", taskId77);
        deleteRequest3.setParentTask(taskId77);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy87 = deleteRequest3.getRefreshPolicy();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[][][]}" + "'", str45, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[][][]}" + "'", str59, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertTrue("'" + refreshPolicy87 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy87.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("delete {[delete {[hi!][][delete {[][][]}]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest3.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.parent("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest3.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(actionRequestValidationException12);
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        java.lang.String str6 = deleteRequest0.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][null]}][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest10.timeout();
        java.lang.String str13 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.getDescription();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.versionType(versionType19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest10.consistencyLevel();
        java.lang.String str22 = deleteRequest10.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest29.setRefreshPolicy(refreshPolicy40);
        java.lang.String str42 = deleteRequest29.index();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.setShardId(shardId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("delete {[][][]}");
        java.lang.String str53 = deleteRequest50.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str57 = deleteRequest56.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.setShardId(shardId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest63.getParentTask();
        deleteRequest55.setParentTask(taskId64);
        deleteRequest46.setParentTask(taskId64);
        org.elasticsearch.tasks.Task task67 = deleteRequest10.createTask((long) 'a', "delete {[][delete {[null][null][null]}][]}", "delete {[][][delete {[][null][null]}]}", taskId64);
        org.elasticsearch.tasks.Task task68 = deleteRequest3.createTask((long) (byte) 100, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}", "delete {[][hi!][hi!]}", taskId64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[][][]}" + "'", str53, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[null][null][null]}" + "'", str57, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(task68);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.reason;
        java.lang.String str16 = shardFailure13.reason;
        java.lang.String str17 = shardFailure13.reason;
        java.lang.String str18 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][null][null]}" + "'", str14, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str15, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str16, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str17, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str18, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", "delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}");
        deleteRequest3.primaryTerm((long) '#');
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.timeout("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String str25 = deleteRequest24.toString();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.index("");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[][][]}");
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        java.lang.String str58 = deleteRequest57.toString();
        java.lang.String[] strArray59 = deleteRequest57.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str70 = deleteRequest69.id();
        java.lang.String str71 = deleteRequest69.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str73 = deleteRequest72.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest72.getParentTask();
        deleteRequest69.setParentTask(taskId76);
        deleteRequest65.setParentTask(taskId76);
        deleteRequest61.setParentTask(taskId76);
        deleteRequest46.setParentTask(taskId76);
        deleteRequest36.setParentTask(taskId76);
        org.elasticsearch.tasks.Task task82 = deleteRequest28.createTask((long) (short) -1, "", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId76);
        org.elasticsearch.tasks.Task task83 = deleteRequest6.createTask((long) (short) 0, "delete {[][][hi!]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", taskId76);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest0.consistencyLevel(writeConsistencyLevel84);
        java.lang.String[] strArray86 = deleteRequest0.indices();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[][][]}" + "'", str58, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[][][]}");
        java.lang.String str24 = deleteRequest21.id();
        java.lang.String[] strArray25 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest26.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest21.setParentTask(taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest21.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.parent("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy32 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest13.setRefreshPolicy(refreshPolicy32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest9.setRefreshPolicy(refreshPolicy32);
        java.lang.String str35 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest9.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        boolean boolean38 = deleteRequest37.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + refreshPolicy32 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy32.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str35, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.consistencyLevel(writeConsistencyLevel21);
        java.lang.String str23 = deleteRequest13.getDescription();
        java.lang.String str24 = deleteRequest13.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][][]}" + "'", str23, "delete {[][][]}");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long14 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.index("");
        boolean boolean17 = deleteRequest13.getShouldPersistResult();
        deleteRequest13.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest11.remoteAddress(transportAddress22);
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        long long8 = deleteRequest6.version();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest8, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.setRefreshPolicy("");
        java.lang.String[] strArray25 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest24.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest40.remoteAddress(transportAddress42);
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest24.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setShardId(shardId47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest9.createTask((long) (byte) 100, "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.parent();
        deleteRequest51.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("delete {[null][null][null]}");
        java.lang.String str59 = deleteRequest56.parent();
        boolean boolean60 = deleteRequest56.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest9.timeout(timeValue61);
        java.lang.Class<?> wildcardClass63 = deleteRequest62.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.parent();
        deleteRequest10.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str16 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.setShardId(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str36 = deleteRequest35.id();
        java.lang.String str37 = deleteRequest35.index();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest35.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest41.remoteAddress(transportAddress43);
        org.elasticsearch.common.unit.TimeValue timeValue45 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest35.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest35.version((long) ' ');
        long long50 = deleteRequest49.primaryTerm();
        java.lang.String str51 = deleteRequest49.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest49.remoteAddress(transportAddress52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest49.parent("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest49.validate();
        deleteRequest49.primaryTerm((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str60 = deleteRequest59.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest62.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest59.timeout(timeValue63);
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest59.remoteAddress(transportAddress65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType73 = deleteRequest72.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress78 = deleteRequest77.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId86 = null;
        org.elasticsearch.tasks.Task task87 = deleteRequest82.createTask(0L, "", "", taskId86);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy88 = deleteRequest82.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest77.setRefreshPolicy(refreshPolicy88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest72.setRefreshPolicy(refreshPolicy88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel92 = deleteRequest91.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel93 = deleteRequest91.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest72.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest59.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest49.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest31.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest9.consistencyLevel(writeConsistencyLevel93);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNull(actionRequestValidationException39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(actionRequestValidationException56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNull(transportAddress78);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertTrue("'" + refreshPolicy88 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy88.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel92 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel92.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel93 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel93.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        deleteRequest2.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.setRefreshPolicy(refreshPolicy8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest16.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest24.createTask(0L, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest24.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 1);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest45.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId54 = null;
        org.elasticsearch.tasks.Task task55 = deleteRequest50.createTask(0L, "", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.setRefreshPolicy("");
        java.lang.String[] strArray58 = deleteRequest57.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest57.consistencyLevel(writeConsistencyLevel70);
        deleteRequest71.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest71.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest45.versionType(versionType75);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException77 = deleteRequest45.validate();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest37.createTask((long) (short) 0, "delete {[][hi!][delete {[null][null][null]}]}", "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", taskId78);
        deleteRequest9.setParentTask(taskId78);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(actionRequestValidationException77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.setShardId(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.versionType(versionType22);
        deleteRequest23.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy28 = deleteRequest26.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.setRefreshPolicy(refreshPolicy28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.consistencyLevel(writeConsistencyLevel30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy28 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy28.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) ' ');
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", 35L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(taskId18);
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest50.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray54 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest56.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest56.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.timeout(timeValue61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.consistencyLevel(writeConsistencyLevel64);
        java.lang.String str66 = deleteRequest3.index();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str66, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask(0L, "", "", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.consistencyLevel(writeConsistencyLevel30);
        deleteRequest31.setParentTask("hi!", (long) (short) 100);
        java.lang.String str35 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        java.lang.String str43 = deleteRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.timeout(timeValue44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest3.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest50.setParentTask("hi!", (long) (short) 1);
        java.lang.String[] strArray54 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest56.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest56.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.timeout(timeValue61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.consistencyLevel(writeConsistencyLevel64);
        java.lang.String str66 = deleteRequest3.id();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}", "delete {[hi!][][delete {[hi!][null][null]}]}", "delete {[][][delete {[delete {[][null][null]}][][]}]}");
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        deleteRequest23.primaryTerm(1L);
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str31 = deleteRequest30.parent();
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long40 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.type("delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest28.index("delete {[][delete {[null][null][null]}][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.setRefreshPolicy("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest16.getRefreshPolicy();
        long long21 = deleteRequest16.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.version((long) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        deleteRequest7.setParentTask(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId25);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable2, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure4.routing;
        java.lang.String str11 = shardFailure4.reason;
        java.lang.String str12 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure4.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure4.routing;
        java.lang.Throwable throwable15 = shardFailure4.cause;
        org.junit.Assert.assertNull(shardRouting5);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][][hi!]}" + "'", str7, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNull(throwable15);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        java.lang.String str24 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId29);
        deleteRequest18.setParentTask(taskId29);
        deleteRequest14.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest14.indicesOptions();
        long long36 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        deleteRequest11.primaryTerm((long) (short) 10);
        long long16 = deleteRequest11.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.setRefreshPolicy("");
        java.lang.String str31 = deleteRequest30.toString();
        java.lang.String[] strArray32 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.id();
        java.lang.String str44 = deleteRequest42.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest45.getParentTask();
        deleteRequest42.setParentTask(taskId49);
        deleteRequest38.setParentTask(taskId49);
        deleteRequest34.setParentTask(taskId49);
        org.elasticsearch.tasks.Task task53 = deleteRequest11.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest11.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str60 = deleteRequest59.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.id("hi!");
        java.lang.String str63 = deleteRequest62.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str71 = deleteRequest70.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.id("hi!");
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task76 = deleteRequest62.createTask((long) '4', "", "delete {[][][]}", taskId75);
        deleteRequest11.setParentTask(taskId75);
        deleteRequest10.setParentTask(taskId75);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][]}" + "'", str31, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[][][hi!]}" + "'", str63, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task76);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("");
        java.lang.String str28 = deleteRequest27.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][][]}" + "'", str25, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[][][]}" + "'", str28, "delete {[][][]}");
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.Throwable throwable11 = shardFailure10.cause;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        java.lang.String str13 = shardFailure10.reason;
        java.lang.String str14 = shardFailure10.reason;
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str13, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}" + "'", str14, "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", "hi!", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest6.consistencyLevel();
        deleteRequest6.primaryTerm((long) (short) 10);
        long long11 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str38 = deleteRequest37.id();
        java.lang.String str39 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest40.getParentTask();
        deleteRequest37.setParentTask(taskId44);
        deleteRequest33.setParentTask(taskId44);
        deleteRequest29.setParentTask(taskId44);
        org.elasticsearch.tasks.Task task48 = deleteRequest6.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest6.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest50.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest3.setRefreshPolicy(refreshPolicy52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("delete {[][hi!][]}");
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest53.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest53.remoteAddress(transportAddress57);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest4.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.setShardId(shardId6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest4.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId20 = null;
        org.elasticsearch.tasks.Task task21 = deleteRequest16.createTask(0L, "", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest16.versionType();
        java.lang.String str25 = deleteRequest16.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.setRefreshPolicy("");
        java.lang.String str37 = deleteRequest36.toString();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest16.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest46.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest51.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest46.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest42.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest64.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = null;
        deleteRequest64.remoteAddress(transportAddress66);
        java.lang.String str68 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest64.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        org.elasticsearch.tasks.Task task72 = deleteRequest59.createTask((long) '4', "", "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", taskId71);
        org.elasticsearch.tasks.Task task73 = deleteRequest4.createTask((-1L), "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}", "delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][delete {[hi!][null][null]}][hi!]}]}", taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str78 = deleteRequest77.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest77.timeout(timeValue81);
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = deleteRequest77.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId84 = deleteRequest77.getParentTask();
        org.elasticsearch.tasks.Task task85 = deleteRequest4.createTask((long) (-1), "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}", "delete {[delete {[][][hi!]}][null][delete {[][][]}]}", taskId84);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[null][null][null]}" + "'", str68, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNull(transportAddress83);
        org.junit.Assert.assertNotNull(taskId84);
        org.junit.Assert.assertNotNull(task85);
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[][][]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest19.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy49 = deleteRequest43.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest28.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest22.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest15.setRefreshPolicy(refreshPolicy49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][][]}", deleteRequest53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + refreshPolicy49 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy49.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(actionRequestValidationException54);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest9.type();
        java.lang.String str11 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.routing("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        java.lang.String str20 = deleteRequest17.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.consistencyLevel(writeConsistencyLevel25);
        deleteRequest26.setParentTask("hi!", 1L);
        java.lang.String str30 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str33 = deleteRequest26.getDescription();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest26.getParentTask();
        deleteRequest9.setParentTask(taskId34);
        org.elasticsearch.index.VersionType versionType36 = deleteRequest9.versionType();
        java.lang.String str37 = deleteRequest9.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}" + "'", str33, "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(10L);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.setShardId(shardId5);
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        java.lang.String str21 = deleteRequest20.toString();
        java.lang.String[] strArray22 = deleteRequest20.indices();
        deleteRequest20.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy57 = deleteRequest51.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest41.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest37.setRefreshPolicy(refreshPolicy57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest37.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest61.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest61.remoteAddress(transportAddress65);
        org.elasticsearch.index.VersionType versionType67 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest32.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest28.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest6.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest1.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.id("delete {[null][delete {[null][null][null]}][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress74 = deleteRequest73.remoteAddress();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + refreshPolicy57 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy57.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(transportAddress74);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        java.lang.String str31 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.type("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.setShardId(shardId34);
        org.elasticsearch.action.support.IndicesOptions indicesOptions36 = deleteRequest35.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(indicesOptions36);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[][][hi!]}");
        java.lang.String[] strArray7 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("hi!");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((-1L), "", "hi!", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long39 = deleteRequest38.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        deleteRequest38.setParentTask(taskId48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest35.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest11.consistencyLevel(writeConsistencyLevel50);
        long long53 = deleteRequest52.version();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest0.timeout(timeValue54);
        deleteRequest0.setParentTask("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][]}", (long) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-3L) + "'", long53 == (-3L));
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str15 = deleteRequest14.routing();
        java.lang.String str16 = deleteRequest14.parent();
        java.lang.String str17 = deleteRequest14.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest14.validate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][delete {[null][null][null]}][null]}" + "'", str17, "delete {[null][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        deleteRequest21.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.setShardId(shardId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest42.createTask(0L, "", "", taskId46);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest42.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest38.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest38.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest62.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = null;
        deleteRequest62.remoteAddress(transportAddress66);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest33.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest29.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest5.versionType(versionType68);
        java.lang.String str72 = deleteRequest5.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest5.timeout("delete {[hi!][][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[][][hi!]}" + "'", str72, "delete {[][][hi!]}");
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        deleteRequest12.setParentTask("delete {[][delete {[][][]}][delete {[][][]}]}", (-1L));
        org.elasticsearch.index.VersionType versionType16 = deleteRequest12.versionType();
        long long17 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[][][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.index("delete {[][][hi!]}");
        java.lang.String str34 = deleteRequest33.parent();
        java.lang.String str35 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest33.parent("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str43 = deleteRequest42.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = deleteRequest47.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str53 = deleteRequest52.id();
        java.lang.String str54 = deleteRequest52.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest55.getParentTask();
        deleteRequest52.setParentTask(taskId59);
        deleteRequest47.setParentTask(taskId59);
        deleteRequest39.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task63 = deleteRequest24.createTask((long) (byte) 1, "delete {[delete {[][null][null]}][][]}", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy66 = deleteRequest65.getRefreshPolicy();
        org.elasticsearch.index.VersionType versionType67 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest24.versionType(versionType67);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str35, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(transportAddress48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertTrue("'" + refreshPolicy66 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy66.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(versionType67);
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete29 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest24, indexShard28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String[] strArray22 = deleteRequest3.indices();
        deleteRequest3.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.routing("delete {[delete {[][null][null]}][][]}");
        java.lang.String str28 = deleteRequest27.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        java.lang.String str21 = deleteRequest10.getDescription();
        java.lang.String[] strArray22 = deleteRequest10.indices();
        java.lang.String str23 = deleteRequest10.routing();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][][]}" + "'", str21, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.timeout(timeValue12);
        java.lang.String str14 = deleteRequest6.index();
        java.lang.String[] strArray15 = deleteRequest6.indices();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str14, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest34.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest29.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest18.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest3.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException45, "delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((long) ' ');
        long long18 = deleteRequest17.primaryTerm();
        java.lang.String str19 = deleteRequest17.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.setRefreshPolicy("");
        java.lang.String str35 = deleteRequest27.index();
        java.lang.String str36 = deleteRequest27.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest38.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest23.timeout(timeValue43);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.setRefreshPolicy("delete {[null][null][delete {[hi!][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][delete {[hi!][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[][delete {[][][]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException9, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.parent();
        long long33 = deleteRequest29.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.timeout(timeValue6);
        long long8 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId21 = null;
        org.elasticsearch.tasks.Task task22 = deleteRequest17.createTask(0L, "", "", taskId21);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy23 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        org.elasticsearch.tasks.Task task32 = deleteRequest27.createTask(0L, "", "", taskId31);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy33 = deleteRequest27.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest17.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.setRefreshPolicy(refreshPolicy33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest1.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest1.routing("delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}");
        boolean boolean40 = deleteRequest1.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + refreshPolicy23 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy23.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + refreshPolicy33 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy33.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        deleteRequest10.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest10.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = deleteRequest58.indicesOptions();
        java.lang.String str61 = deleteRequest58.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str63 = deleteRequest62.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.version((long) (short) 100);
        deleteRequest62.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str69 = deleteRequest68.parent();
        org.elasticsearch.index.VersionType versionType70 = deleteRequest68.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest58.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest46.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest44.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress77 = null;
        deleteRequest76.remoteAddress(transportAddress77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.index("delete {[][][hi!]}");
        java.lang.String str82 = deleteRequest81.parent();
        java.lang.String str83 = deleteRequest81.type();
        long long84 = deleteRequest81.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue85 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest76.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest10.timeout(timeValue85);
        org.elasticsearch.index.shard.IndexShard indexShard88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete89 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest87, indexShard88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[][][]}" + "'", str61, "delete {[][][]}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest5.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        java.lang.String str12 = deleteRequest5.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure17.routing;
        java.lang.String str19 = shardFailure17.indexUUID;
        java.lang.String str20 = shardFailure17.reason;
        java.lang.String str21 = shardFailure17.indexUUID;
        java.lang.Throwable throwable22 = shardFailure17.cause;
        java.lang.String str23 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str19, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str20, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str21, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][delete {[][][hi!]}][delete {[][][]}]}" + "'", str23, "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("delete {[][delete {[null][null][null]}][null]}");
        java.lang.String str9 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.id("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][][hi!]}" + "'", str9, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (short) 100);
        deleteRequest14.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str27 = deleteRequest24.parent();
        long long28 = deleteRequest24.primaryTerm();
        java.lang.String str29 = deleteRequest24.id();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.setShardId(shardId30);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str29, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.setRefreshPolicy("delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        java.lang.String str16 = deleteRequest14.getDescription();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest10.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = deleteRequest17.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.setRefreshPolicy(refreshPolicy20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest5.setRefreshPolicy(refreshPolicy20);
        java.lang.String str23 = deleteRequest22.routing();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + refreshPolicy20 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy20.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[][][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((-1L), "", "hi!", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        deleteRequest20.primaryTerm((long) (short) 10);
        long long25 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task62 = deleteRequest20.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId58);
        org.elasticsearch.tasks.Task task63 = deleteRequest3.createTask((long) (byte) 100, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId58);
        java.lang.String[] strArray64 = deleteRequest3.indices();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest35.timeout();
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue38);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.version((long) (short) 100);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long13 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str15 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        java.lang.String str41 = deleteRequest40.toString();
        java.lang.String[] strArray42 = deleteRequest40.indices();
        deleteRequest40.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest40.routing("delete {[null][null][null]}");
        java.lang.String str47 = deleteRequest46.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId55 = null;
        org.elasticsearch.tasks.Task task56 = deleteRequest51.createTask(0L, "", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.setRefreshPolicy("");
        deleteRequest58.primaryTerm(1L);
        deleteRequest58.primaryTerm((long) 0);
        java.lang.String str63 = deleteRequest58.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy64 = deleteRequest58.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest46.setRefreshPolicy(refreshPolicy64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest0.setRefreshPolicy(refreshPolicy64);
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest0.timeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][][]}" + "'", str41, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy64 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy64.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(timeValue67);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.consistencyLevel(writeConsistencyLevel39);
        boolean boolean41 = deleteRequest34.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest34.id("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest34.shardId();
        deleteRequest34.setParentTask("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", (long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.setRefreshPolicy("");
        deleteRequest59.primaryTerm(1L);
        boolean boolean62 = deleteRequest59.getShouldPersistResult();
        java.lang.String str63 = deleteRequest59.id();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest34.versionType(versionType64);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = deleteRequest34.remoteAddress();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(actionRequestValidationException42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(transportAddress66);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        long long7 = deleteRequest0.version();
        java.lang.String str8 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest18.setParentTask(taskId28);
        org.elasticsearch.tasks.Task task30 = deleteRequest12.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId28);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.consistencyLevel(writeConsistencyLevel31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.version(0L);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.setShardId(shardId12);
        boolean boolean14 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest25.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest25.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest20.setRefreshPolicy(refreshPolicy36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest20.consistencyLevel(writeConsistencyLevel41);
        boolean boolean43 = deleteRequest42.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest14.timeout(timeValue44);
        deleteRequest14.setParentTask("delete {[delete {[null][null][null]}][null][null]}", (long) (short) 100);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy7 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        java.lang.Class<?> wildcardClass10 = deleteRequest6.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + refreshPolicy7 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy7.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy10 = deleteRequest6.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.consistencyLevel(writeConsistencyLevel23);
        long long25 = deleteRequest24.version();
        java.lang.String[] strArray26 = deleteRequest24.indices();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest24.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest24.remoteAddress(transportAddress29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.routing("delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + refreshPolicy10 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy10.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest8.parent("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest8.versionType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        java.lang.String str18 = deleteRequest9.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.setRefreshPolicy(refreshPolicy20);
        long long22 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.parent("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.timeout("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[null][null][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException6, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str9 = shardFailure8.reason;
        java.lang.Throwable throwable10 = shardFailure8.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][hi!]}][null][null]}][delete {[][][]}][]}", throwable10, "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][hi!]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str9, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest13.indicesOptions();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (short) -1);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        java.lang.String str14 = deleteRequest13.routing();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][hi!]}" + "'", str14, "delete {[][][hi!]}");
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.index("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest14.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest21.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest31.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy42 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str44 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.version((long) (short) 100);
        java.lang.String str47 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest49.remoteAddress(transportAddress51);
        java.lang.String str53 = deleteRequest49.index();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest43.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest31.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest26.versionType(versionType54);
        java.lang.String str58 = deleteRequest57.toString();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(transportAddress41);
        org.junit.Assert.assertTrue("'" + refreshPolicy42 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy42.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[null][null][null]}" + "'", str53, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str58, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.parent();
        deleteRequest4.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException10, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("");
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}", (java.lang.Throwable) actionRequestValidationException12, "");
        java.lang.String str17 = shardFailure16.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure16.routing;
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(shardRouting18);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        long long2 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.setRefreshPolicy("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][][hi!]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.setRefreshPolicy("");
        java.lang.String str19 = deleteRequest18.toString();
        java.lang.String[] strArray20 = deleteRequest18.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.index("");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        deleteRequest22.setParentTask("hi!", (long) 100);
        java.lang.String[] strArray27 = deleteRequest22.indices();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest7.versionType(versionType28);
        java.lang.String str30 = deleteRequest7.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str30, "delete {[][delete {[][][]}][delete {[][][]}]}");
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[hi!][][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setRefreshPolicy("");
        long long33 = deleteRequest28.version();
        java.lang.String str34 = deleteRequest28.getDescription();
        java.lang.String str35 = deleteRequest28.parent();
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}" + "'", str34, "delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setRefreshPolicy("");
        java.lang.String str26 = deleteRequest25.toString();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        deleteRequest25.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy52 = deleteRequest46.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId60 = null;
        org.elasticsearch.tasks.Task task61 = deleteRequest56.createTask(0L, "", "", taskId60);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy62 = deleteRequest56.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest42.setRefreshPolicy(refreshPolicy62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest42.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest66.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = null;
        deleteRequest66.remoteAddress(transportAddress70);
        org.elasticsearch.index.VersionType versionType72 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest37.versionType(versionType72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest33.versionType(versionType72);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy75 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest14.timeout(timeValue76);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput78 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.writeTo(streamOutput78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertTrue("'" + refreshPolicy52 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy52.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + refreshPolicy62 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy62.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + refreshPolicy75 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy75.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.routing("delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest37.indicesOptions();
        java.lang.String str40 = deleteRequest37.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str42 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.version((long) (short) 100);
        deleteRequest41.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str48 = deleteRequest47.parent();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest41.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest26.versionType(versionType49);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.setRefreshPolicy("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[hi!][null][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.type("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.parent("delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][null][]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        java.lang.String str22 = deleteRequest21.toString();
        java.lang.String[] strArray23 = deleteRequest21.indices();
        deleteRequest21.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.setShardId(shardId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest42.createTask(0L, "", "", taskId46);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest42.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId56 = null;
        org.elasticsearch.tasks.Task task57 = deleteRequest52.createTask(0L, "", "", taskId56);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy58 = deleteRequest52.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest42.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest38.setRefreshPolicy(refreshPolicy58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest38.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest62.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = null;
        deleteRequest62.remoteAddress(transportAddress66);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest33.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest29.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest5.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest5.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        deleteRequest5.setParentTask("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", 32L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + refreshPolicy58 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy58.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId34 = null;
        org.elasticsearch.tasks.Task task35 = deleteRequest30.createTask(0L, "", "", taskId34);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy36 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy46 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest26.setRefreshPolicy(refreshPolicy46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest26.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest50.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest50.remoteAddress(transportAddress54);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest21.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.versionType(versionType56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str60 = deleteRequest59.parent();
        deleteRequest59.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest59.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '#');
        java.lang.String str69 = deleteRequest66.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId77 = null;
        org.elasticsearch.tasks.Task task78 = deleteRequest73.createTask(0L, "", "", taskId77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest73.setRefreshPolicy("");
        deleteRequest80.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest80.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel86 = deleteRequest85.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy87 = deleteRequest85.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest84.setRefreshPolicy(refreshPolicy87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest66.setRefreshPolicy(refreshPolicy87);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest89.getParentTask();
        deleteRequest58.setParentTask(taskId90);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertTrue("'" + refreshPolicy36 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy36.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + refreshPolicy46 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy46.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[null][delete {[null][null][null]}][null]}" + "'", str69, "delete {[null][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel86 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel86.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy87 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy87.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        deleteRequest0.setParentTask("delete {[][][hi!]}", (long) '#');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.primaryTerm();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.timeout(timeValue13);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest0.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.index("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str20 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str34 = deleteRequest33.id();
        java.lang.String str35 = deleteRequest33.index();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest16.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest7.timeout(timeValue43);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy48 = deleteRequest47.getRefreshPolicy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + refreshPolicy48 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy48.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        java.lang.String str8 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest41.indicesOptions();
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str46 = deleteRequest45.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.version((long) (short) 100);
        deleteRequest45.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.parent();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest45.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest29.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest26.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest15.versionType(versionType53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy59 = deleteRequest15.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest5.setRefreshPolicy(refreshPolicy59);
        java.lang.String str61 = deleteRequest5.parent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(actionRequestValidationException27);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[][][]}" + "'", str44, "delete {[][][]}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + refreshPolicy59 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy59.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][delete {[delete {[][null][null]}][][]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        deleteRequest6.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str10 = deleteRequest9.parent();
        deleteRequest9.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        deleteRequest6.setParentTask("delete {[][][]}", (long) (byte) 1);
        java.lang.String str22 = deleteRequest6.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest4.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest9.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy39 = deleteRequest33.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest28.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest4.setRefreshPolicy(refreshPolicy39);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertTrue("'" + refreshPolicy39 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy39.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        deleteRequest10.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest31.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId45 = null;
        org.elasticsearch.tasks.Task task46 = deleteRequest41.createTask(0L, "", "", taskId45);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy47 = deleteRequest41.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest31.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.setRefreshPolicy(refreshPolicy47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest27.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        deleteRequest51.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest51.remoteAddress(transportAddress55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest22.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest18.versionType(versionType57);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy60 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest18.timeout();
        long long62 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest18.consistencyLevel(writeConsistencyLevel67);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + refreshPolicy47 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy47.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + refreshPolicy60 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy60.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-3L) + "'", long62 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[hi!][][delete {[][][]}]}][null]}");
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[null][null][null]}");
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId29 = null;
        org.elasticsearch.tasks.Task task30 = deleteRequest25.createTask(0L, "", "", taskId29);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest25.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest10.setRefreshPolicy(refreshPolicy31);
        deleteRequest33.primaryTerm((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.timeout(timeValue36);
        long long38 = deleteRequest37.version();
        java.lang.String str39 = deleteRequest37.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy("delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[delete {[][][hi!]}][null][delete {[][][]}]}][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-3L) + "'", long38 == (-3L));
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("hi!");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest3.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.parent("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        long long21 = deleteRequest20.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][]}" + "'", str12, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        deleteRequest32.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.setRefreshPolicy(refreshPolicy38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest31.validate();
        long long41 = deleteRequest31.primaryTerm();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + refreshPolicy38 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy38.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        java.lang.String str23 = deleteRequest21.id();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest21.shardId();
        long long25 = deleteRequest21.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}" + "'", str23, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.setShardId(shardId17);
        java.lang.Class<?> wildcardClass19 = deleteRequest18.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel21);
        java.lang.String str24 = deleteRequest5.parent();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str5 = deleteRequest4.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][]}");
        java.lang.Throwable throwable9 = shardFailure8.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable9, "delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) (-1));
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask(0L, "", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setRefreshPolicy("");
        java.lang.String[] strArray29 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId37 = null;
        org.elasticsearch.tasks.Task task38 = deleteRequest33.createTask(0L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest44.remoteAddress(transportAddress46);
        org.elasticsearch.common.unit.TimeValue timeValue48 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest28.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.parent("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest10.timeout(timeValue53);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.timeout("delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(taskId55);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str7 = deleteRequest6.getDescription();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest6.getParentTask();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}" + "'", str7, "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        java.lang.String str3 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[][][hi!]}");
        java.lang.String str7 = deleteRequest6.parent();
        java.lang.String str8 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId33 = null;
        org.elasticsearch.tasks.Task task34 = deleteRequest29.createTask(0L, "", "", taskId33);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy35 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest14.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest6.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest0.setRefreshPolicy(refreshPolicy35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str44 = deleteRequest43.id();
        java.lang.String str45 = deleteRequest43.index();
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest43.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest43.validate();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest0.versionType(versionType48);
        java.lang.String str50 = deleteRequest49.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "delete {[null][null][null]}" + "'", str3, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str8, "delete {[delete {[][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertTrue("'" + refreshPolicy35 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy35.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest13.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.setRefreshPolicy(refreshPolicy16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest3.remoteAddress();
        java.lang.String str19 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}");
        java.lang.String str22 = deleteRequest21.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        java.lang.String str16 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest3.consistencyLevel();
        deleteRequest3.primaryTerm(32L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest21.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][]}" + "'", str16, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest5.getParentTask();
        java.lang.String[] strArray14 = deleteRequest5.indices();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.setShardId(shardId15);
        org.elasticsearch.index.shard.IndexShard indexShard17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete18 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest16, indexShard17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        deleteRequest5.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[][][]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest29.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.setRefreshPolicy(refreshPolicy31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str45 = deleteRequest44.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        deleteRequest42.setParentTask(taskId52);
        org.elasticsearch.tasks.Task task54 = deleteRequest36.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId52);
        deleteRequest26.setParentTask(taskId52);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest10.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest57.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy31 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy31.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][][]}" + "'", str37, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest8.remoteAddress();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult12 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest8, indexShard11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        deleteRequest3.primaryTerm(35L);
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("hi!");
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId30 = null;
        org.elasticsearch.tasks.Task task31 = deleteRequest26.createTask(0L, "", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.setRefreshPolicy("");
        deleteRequest33.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy40 = deleteRequest38.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.setRefreshPolicy(refreshPolicy40);
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest42.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.parent("delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str46 = deleteRequest42.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy40 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy40.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        deleteRequest2.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId17 = null;
        org.elasticsearch.tasks.Task task18 = deleteRequest13.createTask(0L, "", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        java.lang.String str22 = deleteRequest13.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.setRefreshPolicy(refreshPolicy24);
        long long26 = deleteRequest13.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest9.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str30 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[][][hi!]}");
        java.lang.String str37 = deleteRequest34.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str42 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.id("hi!");
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest44.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.id("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest55.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId67 = null;
        org.elasticsearch.tasks.Task task68 = deleteRequest63.createTask(0L, "", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions72 = deleteRequest70.indicesOptions();
        java.lang.String str73 = deleteRequest70.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str75 = deleteRequest74.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest74.version((long) (short) 100);
        deleteRequest74.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str81 = deleteRequest80.parent();
        org.elasticsearch.index.VersionType versionType82 = deleteRequest80.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest74.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest70.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest58.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest55.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest44.versionType(versionType82);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy88 = deleteRequest44.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest34.setRefreshPolicy(refreshPolicy88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest9.setRefreshPolicy(refreshPolicy88);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(actionRequestValidationException56);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[][][]}" + "'", str73, "delete {[][][]}");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertTrue("'" + refreshPolicy88 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy88.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(10L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setRefreshPolicy("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[][delete {[][][hi!]}][delete {[][][]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        java.lang.String str27 = deleteRequest26.toString();
        java.lang.String str28 = deleteRequest26.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.id("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}" + "'", str27, "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}" + "'", str28, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask(0L, "", "", taskId22);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy24 = deleteRequest18.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.setRefreshPolicy(refreshPolicy24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest26.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + refreshPolicy24 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy24.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(indicesOptions27);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        java.lang.String str18 = deleteRequest9.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.setRefreshPolicy(refreshPolicy20);
        long long22 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[][hi!][delete {[][][]}]}");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest5.versionType();
        java.lang.String str14 = deleteRequest5.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.setRefreshPolicy(refreshPolicy16);
        long long18 = deleteRequest5.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest5.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        java.lang.String str20 = deleteRequest19.parent();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest19.versionType();
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest19.shardId();
        boolean boolean23 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        java.lang.String str27 = deleteRequest26.toString();
        java.lang.String str28 = deleteRequest26.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.type("delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}");
        java.lang.String str31 = deleteRequest30.parent();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}" + "'", str27, "delete {[][delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}" + "'", str28, "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        java.lang.Class<?> wildcardClass12 = writeConsistencyLevel11.getClass();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        java.lang.String str30 = deleteRequest29.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.parent("delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}");
        java.lang.String str33 = deleteRequest29.toString();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][][]}" + "'", str33, "delete {[][][]}");
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[null][null][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}]}", "delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setRefreshPolicy("delete {[null][delete {[hi!][null][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][delete {[hi!][null][null]}][null]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "delete {[][][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.type("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long21 = deleteRequest20.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.index("");
        boolean boolean24 = deleteRequest20.getShouldPersistResult();
        deleteRequest20.primaryTerm((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest18.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.timeout("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}][delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        boolean boolean10 = deleteRequest9.getShouldPersistResult();
        java.lang.String str11 = deleteRequest9.routing();
        java.lang.String str12 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.routing("");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        boolean boolean5 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest1.validate();
        java.lang.String str9 = deleteRequest1.routing();
        java.lang.String str10 = deleteRequest1.getDescription();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest6, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        deleteRequest5.setParentTask("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", 10L);
        java.lang.String str12 = deleteRequest5.parent();
        java.lang.String str13 = deleteRequest5.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str13, "delete {[delete {[hi!][null][null]}][null][null]}");
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str21 = deleteRequest20.parent();
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("delete {[null][null][null]}");
        java.lang.String str28 = deleteRequest25.parent();
        boolean boolean29 = deleteRequest25.getShouldPersistResult();
        java.lang.String[] strArray30 = deleteRequest25.indices();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.setShardId(shardId31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.timeout(timeValue33);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest1.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy11 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setRefreshPolicy(refreshPolicy11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][][]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        java.lang.String str29 = deleteRequest26.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest26.readFrom(streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + refreshPolicy11 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy11.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][][]}" + "'", str19, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId27 = null;
        org.elasticsearch.tasks.Task task28 = deleteRequest23.createTask(0L, "", "", taskId27);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest23.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setRefreshPolicy(refreshPolicy29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str41 = deleteRequest40.id();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.setShardId(shardId42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str55 = deleteRequest54.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest54.remoteAddress();
        org.elasticsearch.index.VersionType versionType57 = deleteRequest54.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest50.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest0.consistencyLevel(writeConsistencyLevel58);
        java.lang.String str61 = deleteRequest0.getDescription();
        java.lang.String str62 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest0.id("delete {[][delete {[][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[null][null][null]}" + "'", str61, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest3.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str24 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.id("hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy30 = deleteRequest26.getRefreshPolicy();
        long long31 = deleteRequest26.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.id("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel34);
        java.lang.String str36 = deleteRequest35.getDescription();
        java.lang.String str37 = deleteRequest35.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + refreshPolicy30 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy30.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}" + "'", str36, "delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.version((long) (short) 100);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest7.versionType();
        java.lang.String[] strArray12 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][null][null]}");
        boolean boolean18 = deleteRequest17.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        deleteRequest3.setParentTask(taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][hi!]}][null][null]}");
        deleteRequest3.setParentTask("delete {[delete {[][null][null]}][][]}", (long) (byte) 1);
        java.lang.String str21 = deleteRequest3.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str21, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.routing();
        java.lang.String str8 = deleteRequest3.toString();
        deleteRequest3.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        deleteRequest3.setParentTask("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][delete {[][delete {[null][null][null]}][]}][null]}", 1L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str8, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest2.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest2.shardId();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setRefreshPolicy(refreshPolicy6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest7.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][][]}][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException8, "");
        java.lang.String str15 = shardFailure14.reason;
        java.lang.String str16 = shardFailure14.indexUUID;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][delete {[][][]}][delete {[][][]}]}" + "'", str15, "delete {[][delete {[][][]}][delete {[][][]}]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.toString();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest2, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][hi!]}][null][null]}" + "'", str4, "delete {[delete {[][][hi!]}][null][null]}");
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest17.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.setRefreshPolicy(refreshPolicy27);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest12.createTask(1L, "", "delete {[null][null][null]}", taskId29);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        java.lang.String str18 = deleteRequest17.toString();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest24.getRefreshPolicy();
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest24.remoteAddress(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][][]}" + "'", str6, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][]}" + "'", str18, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest4.consistencyLevel();
        org.elasticsearch.index.shard.IndexShard indexShard6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult7 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest4, indexShard6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}", "delete {[][null][null]}", "delete {[null][null][delete {[][][hi!]}]}");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.parent("delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.routing("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.parent("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy27 = deleteRequest26.getRefreshPolicy();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + refreshPolicy27 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy27.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[][][]}]}", throwable2, "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException2 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest4.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.timeout(timeValue9);
        java.lang.String str11 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str19 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][][]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId36 = null;
        org.elasticsearch.tasks.Task task37 = deleteRequest32.createTask(0L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.setRefreshPolicy("");
        java.lang.String str40 = deleteRequest39.toString();
        java.lang.String[] strArray41 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str52 = deleteRequest51.id();
        java.lang.String str53 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str55 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest54.getParentTask();
        deleteRequest51.setParentTask(taskId58);
        deleteRequest47.setParentTask(taskId58);
        deleteRequest43.setParentTask(taskId58);
        deleteRequest28.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task64 = deleteRequest4.createTask((long) 100, "delete {[][][hi!]}", "hi!", taskId58);
        deleteRequest0.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest0.setShardId(shardId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest0.type("delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.type("delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}");
        java.lang.String str72 = deleteRequest71.getDescription();
        java.lang.Class<?> wildcardClass73 = deleteRequest71.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException2);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][]}" + "'", str26, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][][]}" + "'", str40, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}" + "'", str72, "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.common.io.stream.StreamInput streamInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.id("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.index("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        java.lang.String[] strArray23 = deleteRequest15.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}", deleteRequest15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][null][null]}][null][null]}", "delete {[null][delete {[hi!][null][null]}][null]}", "delete {[][][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        java.lang.String str7 = deleteRequest2.type();
        deleteRequest2.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.primaryTerm();
        java.lang.String str15 = deleteRequest11.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str12, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest1.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str15 = deleteRequest14.parent();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][null]}", throwable2, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}" + "'", str5, "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        java.lang.String str5 = deleteRequest1.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str11 = deleteRequest10.id();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[][][]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest9.setParentTask(taskId19);
        org.elasticsearch.tasks.Task task21 = deleteRequest3.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId19);
        java.lang.String str22 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest3.timeout();
        deleteRequest3.primaryTerm((long) (byte) 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][][]}" + "'", str4, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][]}" + "'", str22, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue23);
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[delete {[][delete {[delete {[][][]}][null][null]}][delete {[][][]}]}][null][null]}");
        java.lang.String str12 = deleteRequest9.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest3.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(versionType18);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy9 = deleteRequest6.getRefreshPolicy();
        java.lang.String str10 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask(0L, "", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest14.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest14.getParentTask();
        deleteRequest6.setParentTask(taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId44 = null;
        org.elasticsearch.tasks.Task task45 = deleteRequest40.createTask(0L, "", "", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest40.versionType();
        java.lang.String str49 = deleteRequest40.parent();
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.index("");
        java.lang.String str56 = deleteRequest51.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest40.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str65 = deleteRequest64.id();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.setShardId(shardId66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.setShardId(shardId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.setRefreshPolicy("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str76 = deleteRequest75.id();
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest75.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest64.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest60.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest6.timeout(timeValue77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][null][null]}", "hi!", "hi!");
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.setShardId(shardId85);
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest84.getParentTask();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy88 = deleteRequest84.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest80.setRefreshPolicy(refreshPolicy88);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + refreshPolicy9 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy9.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str10, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertTrue("'" + refreshPolicy88 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy88.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest89);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[][][hi!]}");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.parent();
        long long15 = deleteRequest10.version();
        long long16 = deleteRequest10.primaryTerm();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][null][null]}", throwable2, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str5, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str6, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}" + "'", str7, "delete {[delete {[][][hi!]}][delete {[][][hi!]}][null]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((long) (-1));
        java.lang.String[] strArray13 = deleteRequest12.indices();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.versionType(versionType30);
        java.lang.String str32 = deleteRequest31.type();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String str42 = deleteRequest41.toString();
        java.lang.String[] strArray43 = deleteRequest41.indices();
        java.lang.String[] strArray44 = deleteRequest41.indices();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest27.createTask((long) 100, "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str51 = deleteRequest50.id();
        java.lang.String str52 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str54 = deleteRequest53.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        deleteRequest50.setParentTask(taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.type("delete {[delete {[][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        deleteRequest27.setParentTask(taskId67);
        org.elasticsearch.tasks.Task task69 = deleteRequest20.createTask(32L, "delete {[][delete {[][][hi!]}][delete {[][][]}]}", "delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}", taskId67);
        java.lang.String str70 = deleteRequest20.index();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][][]}" + "'", str42, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.routing("hi!");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest36.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("delete {[][][hi!]}");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest40.versionType(versionType47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.versionType(versionType47);
        java.lang.String str50 = deleteRequest49.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = deleteRequest49.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId66 = null;
        org.elasticsearch.tasks.Task task67 = deleteRequest62.createTask(0L, "", "", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions71 = deleteRequest69.indicesOptions();
        java.lang.String str72 = deleteRequest69.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str74 = deleteRequest73.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.version((long) (short) 100);
        deleteRequest73.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str80 = deleteRequest79.parent();
        org.elasticsearch.index.VersionType versionType81 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest73.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest69.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest57.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest55.versionType(versionType81);
        java.lang.String[] strArray86 = deleteRequest85.indices();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy87 = deleteRequest85.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest49.setRefreshPolicy(refreshPolicy87);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(transportAddress51);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[][][]}" + "'", str72, "delete {[][][]}");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(versionType81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + refreshPolicy87 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy87.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest88);
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId9 = null;
        org.elasticsearch.tasks.Task task10 = deleteRequest5.createTask(0L, "", "", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.setRefreshPolicy("");
        java.lang.String str13 = deleteRequest5.index();
        java.lang.String str14 = deleteRequest5.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest16.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.timeout(timeValue21);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[][][]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}]}", deleteRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        java.lang.String str4 = deleteRequest2.type();
        long long5 = deleteRequest2.primaryTerm();
        long long6 = deleteRequest2.version();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.setShardId(shardId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest2.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy6 = deleteRequest3.getRefreshPolicy();
        deleteRequest3.primaryTerm(100L);
        java.lang.String str9 = deleteRequest3.index();
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + refreshPolicy6 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy6.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout("delete {[delete {[][null][null]}][][delete {[][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][][delete {[][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.setShardId(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.versionType(versionType31);
        deleteRequest32.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long49 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.timeout(timeValue54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest57.getParentTask();
        deleteRequest48.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task60 = deleteRequest42.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId58);
        deleteRequest32.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.action.support.IndicesOptions indicesOptions63 = deleteRequest18.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.id("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("delete {[][hi!][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.setRefreshPolicy("delete {[null][null][delete {[hi!][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unknown value for refresh: [delete {[null][null][delete {[hi!][null][null]}]}].");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(indicesOptions63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(indicesOptions2);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (short) 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setRefreshPolicy("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str9 = deleteRequest8.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) (-1), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[hi!][null][null]}", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest8.parent("delete {[delete {[][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest8.index("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest8.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest27.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setShardId(shardId31);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str35 = deleteRequest34.id();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version((long) (short) 100);
        java.lang.String str4 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest6.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest6.index();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.versionType(versionType11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest12.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.version((long) '4');
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy26 = deleteRequest23.getRefreshPolicy();
        java.lang.String str27 = deleteRequest23.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId35 = null;
        org.elasticsearch.tasks.Task task36 = deleteRequest31.createTask(0L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str47 = deleteRequest46.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.id("hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest31.createTask(10L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId50);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest31.getParentTask();
        deleteRequest23.setParentTask(taskId52);
        org.elasticsearch.tasks.Task task54 = deleteRequest12.createTask((-3L), "delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}", "delete {[delete {[][delete {[hi!][delete {[hi!][null][null]}][delete {[delete {[][][hi!]}][null][null]}]}][delete {[][][]}]}][][]}", taskId52);
        java.lang.String str55 = deleteRequest12.type();
        boolean boolean56 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId57 = deleteRequest12.shardId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + refreshPolicy26 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy26.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[][delete {[null][null][null]}][null]}" + "'", str27, "delete {[][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(shardId57);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        boolean boolean8 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest6.shardId();
        boolean boolean10 = deleteRequest6.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[delete {[][null][null]}][][]}][delete {[null][delete {[null][null][null]}][null]}]}", "delete {[null][null][delete {[delete {[][][hi!]}][null][null]}]}");
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy3 = deleteRequest1.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest1.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest1, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + refreshPolicy3 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy3.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][hi!]}][null][null]}", (long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest9.createTask(0L, "", "", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest9.versionType();
        java.lang.String str18 = deleteRequest9.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.setRefreshPolicy(refreshPolicy20);
        long long22 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}");
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId38 = null;
        org.elasticsearch.tasks.Task task39 = deleteRequest34.createTask(0L, "", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.setRefreshPolicy("");
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId50 = null;
        org.elasticsearch.tasks.Task task51 = deleteRequest46.createTask(0L, "", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest57.remoteAddress(transportAddress59);
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest41.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.parent("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest26.createTask(100L, "delete {[hi!][null][null]}", "delete {[delete {[][][hi!]}][null][null]}", taskId66);
        boolean boolean68 = deleteRequest26.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamInput streamInput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest26.readFrom(streamInput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.index("delete {[][][hi!]}");
        java.lang.String str3 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.id("delete {[][][]}");
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest2.getParentTask();
        java.lang.String[] strArray8 = deleteRequest2.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        java.lang.String str14 = deleteRequest3.parent();
        java.lang.String str15 = deleteRequest3.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][][]}" + "'", str15, "delete {[][][]}");
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest3.index();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        java.lang.String[] strArray15 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.id("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest14.versionType();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(versionType20);
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String str11 = deleteRequest10.toString();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((-1L));
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        java.lang.String str24 = deleteRequest22.parent();
        java.lang.String str25 = deleteRequest22.id();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][]}" + "'", str11, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][null][null]}" + "'", str25, "delete {[null][null][null]}");
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        java.lang.String str12 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        long long16 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("");
        deleteRequest19.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest19.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType28);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy31 = deleteRequest30.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest30.indicesOptions();
        long long33 = deleteRequest30.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportWriteAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult35 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest30, indexShard34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(refreshPolicy31);
        org.junit.Assert.assertNotNull(indicesOptions32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        java.lang.String str19 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.timeout(timeValue22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest28.remoteAddress(transportAddress29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("delete {[][delete {[][][]}][delete {[][][]}]}");
        boolean boolean33 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}", "delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.index("delete {[][][hi!]}");
        java.lang.String str41 = deleteRequest40.parent();
        java.lang.String str42 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.version((long) (short) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId53 = null;
        org.elasticsearch.tasks.Task task54 = deleteRequest49.createTask(0L, "", "", taskId53);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy55 = deleteRequest49.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest44.setRefreshPolicy(refreshPolicy55);
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest37.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest32.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest62.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.setShardId(shardId66);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest32.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest69.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest23.consistencyLevel(writeConsistencyLevel72);
        boolean boolean75 = deleteRequest23.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertTrue("'" + refreshPolicy55 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy55.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str18 = deleteRequest17.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.tasks.TaskId taskId28 = null;
        org.elasticsearch.tasks.Task task29 = deleteRequest22.createTask((long) (byte) -1, "delete {[null][delete {[delete {[][delete {[delete {[][][hi!]}][null][null]}][]}][null][null]}][null]}", "delete {[delete {[][delete {[][delete {[][][hi!]}][delete {[][][]}]}][delete {[][][]}]}][null][]}", taskId28);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(task29);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", "delete {[null][null][null]}", "delete {[][delete {[null][null][null]}][]}");
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        java.lang.String str6 = deleteRequest3.type();
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask(0L, "", "", taskId12);
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy14 = deleteRequest8.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.setRefreshPolicy(refreshPolicy14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[][][]}");
        deleteRequest19.primaryTerm((long) (byte) 10);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + refreshPolicy14 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy14.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        java.lang.String[] strArray15 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId32 = null;
        org.elasticsearch.tasks.Task task33 = deleteRequest28.createTask(0L, "", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.setRefreshPolicy("");
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId47 = null;
        org.elasticsearch.tasks.Task task48 = deleteRequest43.createTask(0L, "", "", taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest43.setRefreshPolicy("");
        java.lang.String[] strArray51 = deleteRequest50.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long54 = deleteRequest53.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest55.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest62.getParentTask();
        deleteRequest53.setParentTask(taskId63);
        deleteRequest50.setParentTask(taskId63);
        org.elasticsearch.tasks.Task task66 = deleteRequest35.createTask((long) (short) 1, "delete {[delete {[][null][null]}][][]}", "delete {[][][hi!]}", taskId63);
        org.elasticsearch.tasks.Task task67 = deleteRequest19.createTask(52L, "", "delete {[][null][null]}", taskId63);
        deleteRequest10.setParentTask(taskId63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest10.validate();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNull(actionRequestValidationException69);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest23.getParentTask();
        deleteRequest20.setParentTask(taskId27);
        deleteRequest15.setParentTask(taskId27);
        deleteRequest3.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.versionType(versionType36);
        long long38 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.consistencyLevel(writeConsistencyLevel44);
        java.lang.String str46 = deleteRequest3.index();
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][delete {[delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][null][null]}][delete {[null][delete {[][delete {[hi!][null][null]}][hi!]}][delete {[][][hi!]}]}]}", (long) (short) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        java.lang.String str13 = deleteRequest11.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest23.remoteAddress();
        org.elasticsearch.index.VersionType versionType25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[][delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}][delete {[][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId39 = null;
        org.elasticsearch.tasks.Task task40 = deleteRequest35.createTask(0L, "", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.setRefreshPolicy("");
        java.lang.String str43 = deleteRequest42.toString();
        java.lang.String[] strArray44 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.index("");
        java.lang.String str47 = deleteRequest42.parent();
        java.lang.String[] strArray48 = deleteRequest42.indices();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest26.createTask(0L, "delete {[][][hi!]}", "delete {[delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}][delete {[hi!][null][null]}][hi!]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long53 = deleteRequest52.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest52.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str61 = deleteRequest60.parent();
        org.elasticsearch.index.VersionType versionType62 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("delete {[][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest60.timeout(timeValue69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest57.timeout(timeValue69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest26.timeout(timeValue69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest19.timeout(timeValue69);
        java.lang.String str74 = deleteRequest19.type();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str3 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.timeout(timeValue6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest2.remoteAddress();
        long long9 = deleteRequest2.version();
        java.lang.String str10 = deleteRequest2.routing();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.routing("delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}][]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][delete {[][null][null]}][delete {[][][]}]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        long long14 = deleteRequest10.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        long long21 = deleteRequest10.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long2 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId15 = null;
        org.elasticsearch.tasks.Task task16 = deleteRequest11.createTask(0L, "", "", taskId15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest1.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (short) 1);
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.index("delete {[][delete {[delete {[][][hi!]}][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId24 = null;
        org.elasticsearch.tasks.Task task25 = deleteRequest20.createTask(0L, "", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.setRefreshPolicy("");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.setShardId(shardId29);
        long long31 = deleteRequest27.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest27.setParentTask(taskId36);
        java.lang.String str38 = deleteRequest27.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest27.id("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][delete {[][][]}][delete {[][][]}]}");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy41 = deleteRequest40.getRefreshPolicy();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest13.createTask(1L, "", "delete {[][delete {[][][]}][delete {[delete {[hi!][null][null]}][null][delete {[][][hi!]}]}]}", taskId42);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[null][null][null]}" + "'", str33, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][][]}" + "'", str38, "delete {[][][]}");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + refreshPolicy41 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy41.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        deleteRequest10.setParentTask(taskId13);
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy16 = deleteRequest10.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.version((-1L));
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        boolean boolean20 = deleteRequest18.getShouldPersistResult();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + refreshPolicy16 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy16.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId14 = null;
        org.elasticsearch.tasks.Task task15 = deleteRequest10.createTask(0L, "", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest17.indicesOptions();
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.version((long) (short) 100);
        deleteRequest21.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("delete {[][delete {[][][hi!]}][delete {[][][]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.timeout("delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][][hi!]}][delete {[hi!][null][null]}][delete {[null][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) 1);
        java.lang.String str15 = deleteRequest14.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.version((long) 1);
        java.lang.String str18 = deleteRequest17.index();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        java.lang.String str11 = deleteRequest9.index();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest0.createTask((-1L), "delete {[][][hi!]}", "delete {[][delete {[][][]}][delete {[][][]}]}", taskId12);
        java.lang.Class<?> wildcardClass14 = task13.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = null;
        deleteRequest3.setParentTask(taskId9);
        java.lang.String str11 = deleteRequest3.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setShardId(shardId13);
        java.lang.String[] strArray15 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[delete {[][][]}][delete {[][][hi!]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.setShardId(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.versionType(versionType31);
        deleteRequest32.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy37 = deleteRequest35.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.setRefreshPolicy(refreshPolicy37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str43 = deleteRequest42.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("");
        long long49 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.timeout(timeValue54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.id("delete {[][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest57.getParentTask();
        deleteRequest48.setParentTask(taskId58);
        org.elasticsearch.tasks.Task task60 = deleteRequest42.createTask((long) ' ', "delete {[][][hi!]}", "delete {[][][]}", taskId58);
        deleteRequest32.setParentTask(taskId58);
        deleteRequest18.setParentTask(taskId58);
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest18.remoteAddress(transportAddress63);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + refreshPolicy37 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy37.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][][]}" + "'", str43, "delete {[][][]}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task60);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) 10);
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask(0L, "", "", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.setRefreshPolicy("");
        java.lang.String str20 = deleteRequest19.toString();
        java.lang.String[] strArray21 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str32 = deleteRequest31.id();
        java.lang.String str33 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str35 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version((long) (short) 100);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest31.setParentTask(taskId38);
        deleteRequest27.setParentTask(taskId38);
        deleteRequest23.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((-1L), "delete {[][delete {[][][]}][delete {[][][]}]}", "delete {[][][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.parent("");
        long long45 = deleteRequest44.version();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][][]}" + "'", str20, "delete {[][][]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-3L) + "'", long45 == (-3L));
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel1 = deleteRequest0.consistencyLevel();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.id("hi!");
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        java.lang.String str21 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest12.createTask((long) '4', "", "delete {[][][]}", taskId25);
        org.elasticsearch.tasks.Task task27 = deleteRequest0.createTask((long) (byte) 10, "delete {[][null][null]}", "", taskId25);
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest0.shardId();
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy29 = deleteRequest0.getRefreshPolicy();
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest0.indicesOptions();
        java.lang.String str31 = deleteRequest0.getDescription();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel1 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel1.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][hi!]}" + "'", str13, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertTrue("'" + refreshPolicy29 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE + "'", refreshPolicy29.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.NONE));
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][null]}" + "'", str31, "delete {[null][null][null]}");
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.type("delete {[delete {[delete {[][][hi!]}][delete {[][][hi!]}][]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask(0L, "", "", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setRefreshPolicy("");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "");
        org.elasticsearch.tasks.TaskId taskId19 = null;
        org.elasticsearch.tasks.Task task20 = deleteRequest15.createTask(0L, "", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.setRefreshPolicy("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.consistencyLevel(writeConsistencyLevel23);
        deleteRequest24.setParentTask("hi!", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str33 = deleteRequest32.parent();
        deleteRequest32.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setRefreshPolicy("");
        org.elasticsearch.action.support.WriteRequest.RefreshPolicy refreshPolicy38 = deleteRequest37.getRefreshPolicy();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.setRefreshPolicy(refreshPolicy38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest42.remoteAddress(transportAddress44);
        java.lang.String str46 = deleteRequest42.index();
        org.elasticsearch.index.VersionType versionType47 = deleteRequest42.versionType();
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest42.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest42.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str52 = deleteRequest51.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.routing("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = deleteRequest56.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.setShardId(shardId60);
        java.lang.String[] strArray62 = deleteRequest56.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][delete {[][][]}][delete {[][][]}]}][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.index("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest71.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest66.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest56.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest50.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest31.consistencyLevel(writeConsistencyLevel72);
        deleteRequest31.primaryTerm((long) 100);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + refreshPolicy38 + "' != '" + org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE + "'", refreshPolicy38.equals(org.elasticsearch.action.support.WriteRequest.RefreshPolicy.IMMEDIATE));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[null][null][null]}" + "'", str46, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(transportAddress57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }
}

