/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 06 05:00:58 GMT 2021
 */

package org.elasticsearch.index.engine;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class InternalEngine_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.index.engine.InternalEngine"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/elasticsearch/d896886973660785aac45275ddb110c1a6babc57/evosuite_70"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InternalEngine_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.lucene.index.MultiReader",
      "org.apache.lucene.index.ParallelLeafReader",
      "org.apache.lucene.index.CompositeReader",
      "org.apache.lucene.index.Term",
      "org.apache.lucene.store.AlreadyClosedException",
      "org.elasticsearch.common.lucene.index.ElasticsearchDirectoryReader",
      "org.elasticsearch.index.engine.EngineSearcherFactory",
      "org.elasticsearch.index.engine.SnapshotFailedEngineException",
      "org.apache.lucene.codecs.FilterCodec",
      "org.apache.lucene.store.RawDirectoryWrapper",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.apache.lucene.index.MergePolicy",
      "org.apache.log4j.Level",
      "org.apache.lucene.search.QueryCache",
      "org.elasticsearch.index.shard.ElasticsearchMergePolicy",
      "org.elasticsearch.common.logging.ESLogger",
      "org.apache.lucene.store.IOContext",
      "org.elasticsearch.action.ActionRequest",
      "org.apache.lucene.index.AssertingLeafReader",
      "org.elasticsearch.index.translog.Translog$Operation",
      "org.elasticsearch.index.engine.Engine$EventListener",
      "org.apache.lucene.util.NamedSPILoader$NamedSPI",
      "org.apache.lucene.index.RandomPostingsTester$TestThread",
      "org.apache.lucene.index.MergePolicy$MergeException",
      "org.elasticsearch.index.engine.DeleteFailedEngineException",
      "org.apache.lucene.util.InfoStream",
      "org.apache.lucene.document.SortedDocValuesField",
      "org.elasticsearch.action.ActionRequestValidationException",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.apache.lucene.util.Accountable",
      "org.apache.lucene.store.NRTCachingDirectory",
      "org.elasticsearch.tasks.Task",
      "org.apache.lucene.codecs.PostingsFormat",
      "org.apache.lucene.util.AttributeReflector",
      "org.elasticsearch.index.shard.IndexShardClosedException",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.lucene.LoggerInfoStream",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.apache.lucene.store.LockObtainFailedException",
      "org.apache.lucene.index.LogDocMergePolicy",
      "org.elasticsearch.index.MergePolicyConfig",
      "org.apache.log4j.Hierarchy",
      "org.elasticsearch.index.shard.IndexShardComponent",
      "org.elasticsearch.index.translog.TranslogCorruptedException",
      "org.apache.lucene.search.AssertingIndexSearcher",
      "org.apache.lucene.index.FilterDirectoryReader",
      "org.elasticsearch.index.translog.Translog$TranslogGeneration",
      "org.elasticsearch.index.store.Store",
      "org.apache.lucene.index.FilterLeafReader",
      "org.elasticsearch.index.engine.ElasticsearchConcurrentMergeScheduler",
      "org.elasticsearch.test.ESTestCase",
      "org.elasticsearch.index.engine.VersionConflictEngineException",
      "org.apache.lucene.store.FSDirectory",
      "org.elasticsearch.index.engine.EngineException",
      "org.apache.lucene.index.TieredMergePolicy",
      "org.apache.lucene.util.LuceneTestCase$4",
      "org.elasticsearch.index.engine.Engine$Warmer",
      "org.elasticsearch.common.util.concurrent.ReleasableLock",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.index.engine.Segment",
      "org.elasticsearch.action.support.replication.ReplicationResponse",
      "org.elasticsearch.index.engine.Engine$Searcher",
      "org.apache.lucene.index.SerialMergeScheduler",
      "org.apache.lucene.index.RandomPostingsTester$SeedPostings",
      "org.apache.lucene.search.ReferenceManager$RefreshListener",
      "org.apache.lucene.store.LockFactory",
      "org.elasticsearch.action.support.replication.ReplicationOperation",
      "org.apache.lucene.util.RamUsageEstimator$1",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.lucene.search.SearcherManager",
      "org.apache.lucene.index.SimpleMergedSegmentWarmer",
      "org.apache.lucene.codecs.blockterms.LuceneFixedGap",
      "org.apache.lucene.codecs.blocktreeords.BlockTreeOrdsPostingsFormat",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv$ThreadNameFixingPrintStreamInfoStream",
      "org.apache.lucene.index.MockRandomMergePolicy",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.index.engine.LiveVersionMap",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.apache.log4j.or.ObjectRenderer",
      "org.elasticsearch.index.MergeSchedulerConfig",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.apache.lucene.util.AttributeSource",
      "org.elasticsearch.common.ValidationException",
      "org.elasticsearch.index.engine.IndexFailedEngineException",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.elasticsearch.common.lease.Releasable",
      "org.apache.lucene.index.LogMergePolicy",
      "org.apache.log4j.Category",
      "org.elasticsearch.search.SearchHit",
      "org.apache.lucene.codecs.lucene60.Lucene60Codec",
      "org.apache.lucene.index.Terms",
      "org.apache.lucene.index.MismatchedLeafReader",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.common.util.concurrent.KeyedLock",
      "org.apache.lucene.document.BinaryDocValuesField",
      "org.apache.lucene.index.RandomPostingsTester$ThreadState",
      "org.elasticsearch.action.support.replication.TransportReplicationAction",
      "org.elasticsearch.index.engine.Engine",
      "org.apache.lucene.index.AlcoholicMergePolicy",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.lucene.index.RandomPostingsTester$SeedFields",
      "org.elasticsearch.Version",
      "org.apache.lucene.util.TestUtil$1",
      "org.elasticsearch.index.engine.Engine$Operation",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.apache.lucene.index.LeafReader",
      "org.apache.lucene.index.RandomPostingsTester$SeedTerms",
      "org.apache.lucene.util.LuceneTestCase",
      "com.carrotsearch.randomizedtesting.generators.RandomInts",
      "org.apache.lucene.util.TestUtil$2",
      "org.apache.lucene.index.LogByteSizeMergePolicy",
      "org.apache.lucene.util.LuceneTestCase$ThrowingRunnable",
      "org.apache.lucene.index.IndexReader",
      "org.elasticsearch.index.engine.EngineSearcher",
      "org.apache.lucene.search.IndexSearcher",
      "org.elasticsearch.index.engine.FlushNotAllowedEngineException",
      "org.elasticsearch.index.engine.CommitStats",
      "org.apache.lucene.util.TestUtil",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.index.translog.Translog$Durability",
      "org.elasticsearch.common.xcontent.FromXContentBuilder",
      "org.apache.lucene.store.BaseDirectoryWrapper",
      "org.elasticsearch.common.unit.TimeValue",
      "org.elasticsearch.index.IndexSettings",
      "org.apache.lucene.index.PostingsEnum",
      "org.apache.lucene.codecs.asserting.AssertingCodec",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "org.elasticsearch.index.engine.FlushFailedEngineException",
      "org.apache.lucene.search.SearcherFactory",
      "org.apache.lucene.util.Constants",
      "org.apache.log4j.Priority",
      "org.apache.lucene.document.Field",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.apache.lucene.codecs.Codec",
      "org.elasticsearch.index.translog.Translog",
      "org.elasticsearch.index.shard.TranslogRecoveryPerformer",
      "org.apache.log4j.LogManager",
      "org.apache.lucene.index.IndexOptions",
      "org.elasticsearch.index.shard.ShardId",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.apache.lucene.index.IndexFormatTooNewException",
      "org.apache.lucene.document.BinaryPoint",
      "org.elasticsearch.action.IndicesRequest",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.elasticsearch.index.engine.Engine$SyncedFlushResult",
      "org.apache.lucene.codecs.lucene54.Lucene54DocValuesFormat",
      "org.apache.lucene.search.ReferenceManager",
      "org.apache.log4j.or.RendererMap",
      "org.apache.lucene.index.AssertingDirectoryReader",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.elasticsearch.action.support.TransportAction",
      "org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat",
      "org.apache.lucene.index.TermsEnum",
      "org.apache.lucene.search.QueryCachingPolicy",
      "org.elasticsearch.index.engine.EngineConfig$OpenMode",
      "org.elasticsearch.common.util.concurrent.RefCounted",
      "org.elasticsearch.index.merge.MergeStats",
      "org.apache.lucene.document.NumericDocValuesField",
      "org.elasticsearch.search.internal.InternalSearchHit",
      "org.elasticsearch.index.engine.Engine$GetResult",
      "org.elasticsearch.index.engine.InternalEngine$SearchFactory",
      "org.elasticsearch.index.translog.Translog$Location",
      "org.elasticsearch.common.xcontent.XContentLocation",
      "org.apache.lucene.util.ThreadInterruptedException",
      "org.apache.lucene.index.IndexCommit",
      "org.apache.lucene.index.LiveIndexWriterConfig",
      "org.apache.lucene.util.BytesRefBuilder",
      "org.apache.lucene.store.FSLockFactory",
      "org.elasticsearch.index.engine.Engine$Index",
      "org.elasticsearch.index.engine.SegmentsStats",
      "org.apache.log4j.helpers.Loader",
      "org.apache.lucene.index.ConcurrentMergeScheduler",
      "org.elasticsearch.index.engine.InternalEngine$EngineMergeScheduler",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$NoopReplicationOperation",
      "org.elasticsearch.transport.TransportResponse",
      "org.apache.lucene.codecs.DocValuesFormat",
      "org.apache.lucene.search.DocIdSetIterator",
      "org.apache.lucene.index.RandomPostingsTester$SeedTermsEnum",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$Request",
      "org.apache.lucene.index.RandomPostingsTester$FieldAndTerm",
      "org.apache.log4j.spi.RootLogger",
      "org.elasticsearch.action.ActionResponse",
      "org.apache.lucene.analysis.Analyzer",
      "org.apache.lucene.search.QueryUtils$FCInvisibleMultiReader",
      "org.apache.log4j.spi.RendererSupport",
      "org.elasticsearch.index.engine.InternalEngine",
      "org.elasticsearch.index.shard.DocsStats",
      "org.apache.lucene.index.BaseCompositeReader",
      "org.apache.lucene.index.IndexReader$ReaderClosedListener",
      "org.apache.lucene.store.BaseDirectory",
      "org.elasticsearch.ElasticsearchException",
      "org.apache.lucene.document.FieldType",
      "org.apache.lucene.index.IndexableField",
      "org.apache.lucene.index.Fields",
      "org.elasticsearch.search.fetch.FetchSubPhase$ContextFactory",
      "org.apache.lucene.index.CodecReader",
      "org.apache.lucene.index.CorruptIndexException",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$Response",
      "org.apache.lucene.index.IndexWriter$IndexReaderWarmer",
      "org.apache.log4j.Logger",
      "org.apache.lucene.index.MergeScheduler",
      "org.apache.lucene.store.Directory",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.apache.lucene.index.LeafReaderContext",
      "org.elasticsearch.index.engine.Engine$IndexThrottle",
      "org.elasticsearch.index.engine.Engine$Delete",
      "org.apache.log4j.helpers.LogLog",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.apache.lucene.index.RandomPostingsTester$SeedAndOrd",
      "org.elasticsearch.common.settings.Setting",
      "org.elasticsearch.index.engine.RefreshFailedEngineException",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$Action",
      "org.apache.lucene.util.BytesRef",
      "org.apache.lucene.index.DirectoryReader",
      "org.elasticsearch.index.engine.LiveVersionMap$Maps",
      "org.elasticsearch.index.shard.IllegalIndexShardStateException",
      "org.elasticsearch.common.bytes.BytesReference",
      "org.apache.lucene.index.MismatchedDirectoryReader",
      "org.apache.log4j.spi.RepositorySelector",
      "org.apache.lucene.util.LuceneTestCase$LiveIWCFlushMode",
      "org.apache.lucene.index.SegmentInfos",
      "org.apache.lucene.analysis.MockAnalyzer",
      "org.apache.lucene.index.IndexWriter",
      "org.elasticsearch.index.engine.EngineCreationFailureException",
      "org.elasticsearch.common.transport.TransportAddress",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.lucene.store.MockDirectoryWrapper",
      "org.apache.lucene.index.IndexWriterConfig",
      "org.apache.lucene.index.RandomPostingsTester",
      "org.apache.lucene.index.NumericDocValues",
      "org.elasticsearch.index.engine.Engine$CommitId",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.lucene.index.PointValues$IntersectVisitor",
      "org.apache.log4j.PropertyConfigurator",
      "org.elasticsearch.tasks.TaskId",
      "org.elasticsearch.search.fetch.FetchSubPhase",
      "org.apache.log4j.spi.ThrowableRenderer",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.elasticsearch.index.engine.DeleteVersionValue",
      "org.apache.log4j.Appender",
      "org.apache.lucene.index.IndexableFieldType",
      "org.apache.lucene.index.IndexDeletionPolicy",
      "org.apache.lucene.index.SegmentReader",
      "org.elasticsearch.index.engine.VersionValue",
      "org.apache.lucene.index.ParallelCompositeReader",
      "org.apache.lucene.index.TwoPhaseCommit",
      "org.elasticsearch.common.util.concurrent.ConcurrentMapLong",
      "org.apache.lucene.document.Field$Store",
      "org.apache.log4j.spi.HierarchyEventListener",
      "org.elasticsearch.index.engine.Engine$Get",
      "org.elasticsearch.cluster.Diffable",
      "org.apache.lucene.index.SnapshotDeletionPolicy",
      "org.apache.lucene.search.DocIdSetIterator$1",
      "org.apache.lucene.search.DocIdSetIterator$2",
      "org.elasticsearch.index.engine.EngineClosedException",
      "org.apache.lucene.index.IndexFormatTooOldException",
      "org.apache.lucene.util.PrintStreamInfoStream",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.apache.lucene.util.BytesRefIterator",
      "org.apache.lucene.util.StringHelper",
      "org.apache.lucene.store.FilterDirectory",
      "org.elasticsearch.search.fetch.FetchSubPhase$HitContext",
      "org.apache.log4j.spi.LoggerRepository",
      "org.elasticsearch.common.io.stream.Writeable",
      "org.apache.lucene.index.IndexReaderContext",
      "org.elasticsearch.action.support.replication.ReplicationTask"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InternalEngine_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.index.engine.Engine",
      "org.elasticsearch.index.engine.InternalEngine",
      "org.apache.lucene.index.MergeScheduler",
      "org.apache.lucene.index.ConcurrentMergeScheduler",
      "org.elasticsearch.index.engine.ElasticsearchConcurrentMergeScheduler",
      "org.elasticsearch.index.engine.InternalEngine$EngineMergeScheduler",
      "org.apache.lucene.search.SearcherFactory",
      "org.elasticsearch.index.engine.EngineSearcherFactory",
      "org.elasticsearch.index.engine.InternalEngine$SearchFactory",
      "org.elasticsearch.index.engine.EngineConfig$OpenMode",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.logging.ESLoggerFactory$LogLevel",
      "org.elasticsearch.common.settings.Setting$Property",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.common.settings.Setting$SimpleKey",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.common.settings.Setting$AffixKey",
      "org.elasticsearch.common.settings.Setting$4",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.elasticsearch.common.logging.ESLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.settings.Setting",
      "org.elasticsearch.index.engine.Engine$GetResult",
      "org.elasticsearch.index.engine.Engine$Operation$Origin",
      "org.elasticsearch.index.engine.Engine$SyncedFlushResult",
      "org.apache.lucene.util.NamedSPILoader",
      "org.apache.lucene.codecs.PostingsFormat",
      "org.apache.lucene.search.suggest.document.CompletionPostingsFormat",
      "org.apache.lucene.search.suggest.document.Completion50PostingsFormat",
      "org.elasticsearch.search.suggest.completion2x.Completion090PostingsFormat$CompletionLookupProvider",
      "org.elasticsearch.search.suggest.completion2x.AnalyzingCompletionLookupProvider",
      "org.apache.lucene.search.suggest.Lookup$CharSequenceComparator",
      "org.apache.lucene.search.suggest.Lookup",
      "org.apache.lucene.search.suggest.analyzing.XAnalyzingSuggester$2",
      "org.apache.lucene.search.suggest.analyzing.XAnalyzingSuggester",
      "org.elasticsearch.search.suggest.completion2x.Completion090PostingsFormat",
      "org.apache.lucene.codecs.PostingsFormat$Holder",
      "org.elasticsearch.common.lucene.Lucene",
      "org.apache.lucene.codecs.DocValuesFormat$Holder",
      "org.elasticsearch.index.analysis.AnalyzerScope",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.elasticsearch.common.lucene.uid.Versions$1",
      "org.elasticsearch.common.lucene.uid.Versions",
      "org.apache.lucene.index.IndexWriterConfig$OpenMode",
      "org.apache.lucene.util.InfoStream$NoOutput",
      "org.apache.lucene.util.InfoStream",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope$Scope",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakGroup$Group",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakAction$Action",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakZombies$Consequence",
      "org.elasticsearch.test.ESIntegTestCase$Scope",
      "org.elasticsearch.common.util.concurrent.ReleasableLock",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.metadata.AutoExpandReplicas",
      "org.elasticsearch.common.settings.Setting$3",
      "org.elasticsearch.common.settings.Setting$GroupKey",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Settings$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "com.carrotsearch.hppc.Containers",
      "com.carrotsearch.hppc.Containers$1",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap$Builder",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.Version",
      "org.elasticsearch.common.xcontent.AbstractObjectParser",
      "org.elasticsearch.common.xcontent.ObjectParser",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.common.util.set.Sets",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.elasticsearch.common.xcontent.ObjectParser$ValueType",
      "org.elasticsearch.common.xcontent.ObjectParser$FieldParser",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.elasticsearch.gateway.MetaDataStateFormat",
      "org.elasticsearch.cluster.metadata.IndexMetaData$1",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.apache.lucene.util.CharsRefBuilder",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "org.apache.lucene.util.CharsRef",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry",
      "org.elasticsearch.common.io.stream.FilterStreamInput",
      "org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput",
      "org.apache.lucene.util.Constants",
      "org.apache.lucene.util.RamUsageEstimator$1",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.lucene.util.ArrayUtil",
      "com.carrotsearch.randomizedtesting.RandomizedTest$5",
      "com.carrotsearch.randomizedtesting.RandomizedTest",
      "org.apache.lucene.store.MockDirectoryWrapper$Throttling",
      "org.apache.lucene.util.LuceneTestCase$1",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures",
      "org.apache.lucene.util.TestRuleDelegate",
      "com.carrotsearch.randomizedtesting.rules.TestRuleAdapter",
      "org.apache.lucene.util.TestRuleLimitSysouts$DelegateStream",
      "org.apache.lucene.util.TestRuleLimitSysouts",
      "org.apache.lucene.util.TestRuleIgnoreTestSuites",
      "org.apache.lucene.util.TestRuleMarkFailure",
      "org.apache.lucene.util.TestRuleAssertionsRequired",
      "org.apache.lucene.util.TestRuleTemporaryFilesCleanup",
      "com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule",
      "org.apache.lucene.util.LuceneTestCase$3",
      "com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule",
      "com.carrotsearch.randomizedtesting.rules.NoClassHooksShadowingRule",
      "com.carrotsearch.randomizedtesting.rules.NoInstanceHooksOverridesRule",
      "org.apache.lucene.util.LuceneTestCase$2",
      "org.apache.lucene.util.TestRuleStoreClassName",
      "org.apache.lucene.util.TestRuleRestoreSystemProperties",
      "org.apache.lucene.util.AbstractBeforeAfterRule",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv",
      "org.apache.lucene.search.similarities.Similarity",
      "org.apache.lucene.search.IndexSearcher$1",
      "org.apache.lucene.search.UsageTrackingQueryCachingPolicy",
      "org.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer$IntBag",
      "org.apache.lucene.search.LRUQueryCache",
      "org.apache.lucene.util.SmallFloat",
      "org.apache.lucene.search.similarities.BM25Similarity",
      "org.apache.lucene.search.IndexSearcher",
      "org.apache.lucene.util.LuceneTestCase",
      "org.elasticsearch.common.io.PathUtils",
      "org.elasticsearch.bootstrap.Security",
      "org.elasticsearch.bootstrap.Bootstrap",
      "org.elasticsearch.bootstrap.Natives",
      "org.elasticsearch.bootstrap.BootstrapForTesting",
      "org.elasticsearch.test.ESTestCase",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone",
      "org.elasticsearch.cluster.metadata.IndexGraveyard",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Builder",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "com.carrotsearch.hppc.AbstractIterator",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.cluster.AbstractDiffable",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.ingest.PipelineConfiguration",
      "org.elasticsearch.ingest.IngestMetadata",
      "org.elasticsearch.script.ScriptMetaData",
      "org.apache.lucene.store.StoreRateLimiting$Type",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.index.store.IndexStoreConfig",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.common.unit.TimeValue",
      "org.joda.time.format.PeriodFormat",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.joda.time.format.PeriodFormatter",
      "org.joda.time.PeriodType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.indices.recovery.RecoverySettings",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.indices.ttl.IndicesTTLService",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider",
      "org.elasticsearch.cluster.InternalClusterInfoService",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.cluster.service.ClusterService",
      "org.elasticsearch.cluster.metadata.MetaData$2",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.cluster.routing.allocation.decider.AwarenessAllocationDecider",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.elasticsearch.client.transport.TransportClientNodesService",
      "org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider$ClusterRebalanceType",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.ConcurrentRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Allocation",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Rebalance",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.FilterAllocationDecider",
      "org.elasticsearch.repositories.blobstore.BlobStoreRepository",
      "org.elasticsearch.repositories.fs.FsRepository",
      "org.elasticsearch.indices.IndicesQueryCache",
      "org.elasticsearch.cluster.action.index.MappingUpdatedAction",
      "org.elasticsearch.cluster.routing.allocation.decider.ThrottlingAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.SnapshotInProgressAllocationDecider",
      "org.elasticsearch.action.support.DestructiveOperations",
      "org.elasticsearch.gateway.GatewayService",
      "org.elasticsearch.common.inject.AbstractModule",
      "org.elasticsearch.common.network.NetworkModule",
      "org.elasticsearch.common.settings.Setting$2",
      "org.elasticsearch.common.settings.Setting$ListKey",
      "org.elasticsearch.http.HttpTransportSettings",
      "org.elasticsearch.common.netty.NettyUtils$EsThreadNameDeterminer",
      "org.jboss.netty.logging.JdkLoggerFactory",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.elasticsearch.transport.netty.NettyInternalESLoggerFactory",
      "org.elasticsearch.common.netty.NettyUtils$1",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "org.elasticsearch.transport.netty.NettyInternalESLogger",
      "org.jboss.netty.util.ThreadNameDeterminer$1",
      "org.jboss.netty.util.ThreadNameDeterminer$2",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "org.elasticsearch.common.netty.NettyUtils",
      "org.elasticsearch.common.network.NetworkUtils$2",
      "org.elasticsearch.common.network.NetworkUtils",
      "org.elasticsearch.common.network.NetworkService$TcpSettings",
      "org.elasticsearch.http.netty.NettyHttpServerTransport",
      "org.elasticsearch.indices.breaker.CircuitBreakerService",
      "org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService",
      "org.elasticsearch.search.SearchService",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService",
      "org.elasticsearch.action.support.TransportAction",
      "org.elasticsearch.action.support.HandledTransportAction",
      "org.elasticsearch.action.search.TransportSearchAction",
      "org.elasticsearch.transport.TransportService",
      "org.elasticsearch.action.support.master.TransportMasterNodeAction",
      "org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction",
      "org.elasticsearch.cluster.routing.allocation.decider.ShardsLimitAllocationDecider",
      "org.elasticsearch.cluster.NodeConnectionsService",
      "org.elasticsearch.transport.Transport",
      "org.elasticsearch.transport.TransportSettings",
      "org.elasticsearch.transport.netty.NettyTransport",
      "org.elasticsearch.common.network.NetworkService",
      "org.elasticsearch.index.IndexSettings",
      "org.elasticsearch.gateway.PrimaryShardAllocator",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.indices.IndicesService",
      "org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache",
      "org.elasticsearch.indices.IndicesRequestCache",
      "org.elasticsearch.indices.analysis.HunspellService",
      "org.elasticsearch.index.shard.IndexShardState",
      "org.elasticsearch.indices.store.IndicesStore",
      "org.elasticsearch.env.Environment",
      "org.elasticsearch.cluster.node.DiscoveryNodeService",
      "org.elasticsearch.discovery.DiscoveryModule",
      "org.elasticsearch.discovery.zen.fd.FaultDetection",
      "org.elasticsearch.discovery.zen.ZenDiscovery",
      "org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing",
      "org.elasticsearch.node.Node",
      "org.elasticsearch.repositories.uri.URLRepository",
      "org.elasticsearch.action.support.master.TransportMasterNodeReadAction",
      "org.elasticsearch.action.support.AutoCreateIndex",
      "org.elasticsearch.rest.BaseRestHandler",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.client.Client",
      "org.elasticsearch.cluster.ClusterModule",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "org.elasticsearch.common.util.concurrent.ThreadContext$ThreadContextStruct",
      "org.elasticsearch.common.util.concurrent.ThreadContext",
      "org.elasticsearch.tribe.TribeService",
      "org.elasticsearch.env.NodeEnvironment",
      "org.elasticsearch.monitor.os.OsService",
      "org.elasticsearch.monitor.process.ProcessService",
      "org.elasticsearch.monitor.jvm.JvmService",
      "org.elasticsearch.monitor.fs.FsService",
      "org.elasticsearch.monitor.jvm.JvmGcMonitorService",
      "org.elasticsearch.common.util.PageCacheRecycler$Type",
      "org.elasticsearch.common.util.PageCacheRecycler",
      "org.elasticsearch.plugins.PluginsService",
      "org.elasticsearch.bootstrap.BootstrapSettings",
      "org.elasticsearch.indices.IndexingMemoryController",
      "org.elasticsearch.watcher.ResourceWatcherService$Frequency",
      "org.elasticsearch.watcher.ResourceWatcherService",
      "org.elasticsearch.search.aggregations.InternalAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalMetricsAggregation",
      "org.elasticsearch.search.DocValueFormat$1",
      "org.elasticsearch.search.DocValueFormat$2",
      "org.elasticsearch.search.DocValueFormat$3",
      "org.elasticsearch.search.DocValueFormat$4",
      "org.elasticsearch.search.DocValueFormat",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$SingleValue",
      "org.elasticsearch.search.aggregations.InternalAggregation$Type",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.common.bytes.BytesArray",
      "org.apache.lucene.util.UnicodeUtil",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg$1",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg",
      "org.elasticsearch.search.aggregations.AggregationStreams",
      "org.elasticsearch.common.bytes.BytesReference$Helper",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum$1",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin$1",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax$1",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$MultiValue",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount$1",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.AbstractInternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.AbstractInternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality$1",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric$1",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid$1",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid",
      "org.elasticsearch.search.aggregations.bucket.InternalSingleBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal$1",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter$1",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter",
      "org.elasticsearch.search.aggregations.InternalMultiBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$1",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$2",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters",
      "org.elasticsearch.search.aggregations.bucket.BucketStreams",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing$1",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing",
      "org.elasticsearch.search.aggregations.bucket.terms.InternalTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.InternalSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$1",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$2",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$Factory",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$1",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$2",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$1",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$2",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits$1",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds$1",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren$1",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorStreams",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue$1",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue",
      "org.elasticsearch.search.aggregations.pipeline.SiblingPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.BucketMetricsPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.cumulativesum.CumulativeSumPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketscript.BucketScriptPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.serialdiff.SerialDiffPipelineAggregator",
      "org.elasticsearch.search.SearchModule",
      "org.elasticsearch.threadpool.ThreadPool$ThreadPoolType",
      "org.elasticsearch.threadpool.ThreadPool",
      "org.elasticsearch.common.settings.ClusterSettings",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.index.shard.ShardId",
      "org.elasticsearch.cluster.routing.allocation.decider.MaxRetryAllocationDecider",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.store.IndexStore",
      "org.elasticsearch.index.MergeSchedulerConfig",
      "org.elasticsearch.index.SlowLogLevel",
      "org.elasticsearch.index.SearchSlowLog",
      "org.elasticsearch.index.IndexingSlowLog",
      "org.elasticsearch.index.MergePolicyConfig",
      "org.elasticsearch.common.joda.Joda$1",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.elasticsearch.common.joda.Joda$2",
      "org.elasticsearch.common.joda.Joda",
      "org.elasticsearch.common.joda.FormatDateTimeFormatter",
      "org.joda.time.format.ISODateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.DateTimeParserInternalParser",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.cluster.routing.UnassignedInfo",
      "org.elasticsearch.index.fielddata.IndexFieldDataService$1",
      "org.elasticsearch.index.fielddata.IndexFieldDataService",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.index.mapper.FieldMapper",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.elasticsearch.index.store.Store",
      "com.carrotsearch.hppc.ObjectHashSet",
      "org.elasticsearch.index.mapper.MapperService",
      "org.elasticsearch.index.cache.bitset.BitsetFilterCache",
      "org.elasticsearch.index.IndexModule",
      "org.elasticsearch.index.store.DirectoryService",
      "org.elasticsearch.index.store.FsDirectoryService",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.single.instance.InstanceShardOperationRequest",
      "org.elasticsearch.action.update.UpdateRequest",
      "org.elasticsearch.tasks.TaskId",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.action.support.replication.ReplicatedWriteRequest",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.action.index.IndexRequest$OpType",
      "org.elasticsearch.search.internal.SearchContext",
      "org.elasticsearch.search.internal.FilteredSearchContext",
      "org.elasticsearch.search.internal.SubSearchContext",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.search.fetch.FetchSearchResult",
      "org.elasticsearch.search.query.QuerySearchResultProvider",
      "org.elasticsearch.search.query.QuerySearchResult",
      "org.elasticsearch.action.delete.DeleteRequest",
      "org.apache.lucene.index.Term",
      "org.elasticsearch.index.engine.Engine$Operation",
      "org.elasticsearch.index.engine.Engine$Index",
      "com.carrotsearch.randomizedtesting.RandomizedContext",
      "com.carrotsearch.randomizedtesting.Threads",
      "org.apache.log4j.spi.NOPLoggerRepository",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.elasticsearch.action.support.replication.TransportReplicationActionTests$Request",
      "org.apache.lucene.store.Directory",
      "org.apache.lucene.store.BaseDirectory",
      "org.apache.lucene.store.RAMDirectory",
      "org.apache.lucene.store.LockFactory",
      "org.apache.lucene.store.SingleInstanceLockFactory",
      "org.apache.lucene.index.IndexWriter",
      "org.apache.lucene.index.IndexWriter$ReaderPool",
      "org.apache.lucene.util.CloseableThreadLocal",
      "org.elasticsearch.index.engine.SegmentsStats",
      "org.jboss.netty.buffer.AbstractChannelBuffer",
      "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer",
      "org.elasticsearch.common.bytes.ChannelBufferBytesReference",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInput",
      "org.elasticsearch.search.aggregations.bucket.range.RangeAggregator$Range",
      "org.apache.lucene.util.BytesRefBuilder",
      "org.elasticsearch.index.engine.Engine$Get",
      "org.apache.lucene.util.NullInfoStream",
      "org.jboss.netty.handler.codec.http.HttpVersion",
      "org.apache.log4j.spi.NOPLogger",
      "org.elasticsearch.index.engine.ShadowEngine",
      "org.apache.lucene.index.IndexReader",
      "org.apache.lucene.index.CompositeReader",
      "org.apache.lucene.index.BaseCompositeReader",
      "org.apache.lucene.index.DirectoryReader",
      "org.apache.lucene.index.StandardDirectoryReader",
      "org.apache.lucene.index.SegmentInfos$FindSegmentsFile",
      "org.apache.lucene.index.StandardDirectoryReader$1",
      "org.jboss.netty.buffer.HeapChannelBuffer",
      "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
      "org.elasticsearch.index.store.Store$MetadataSnapshot",
      "org.apache.lucene.store.IOContext",
      "org.elasticsearch.index.fielddata.plain.AbstractAtomicOrdinalsFieldData",
      "org.elasticsearch.index.fielddata.plain.SortedSetDVBytesAtomicFieldData",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.elasticsearch.action.admin.indices.upgrade.post.UpgradeRequest",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.apache.lucene.analysis.Analyzer$ReuseStrategy",
      "org.apache.lucene.analysis.Analyzer$1",
      "org.apache.lucene.analysis.Analyzer$2",
      "org.apache.lucene.analysis.Analyzer",
      "org.apache.lucene.analysis.MockPayloadAnalyzer",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.elasticsearch.index.analysis.NamedAnalyzer$1",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper$DelegatingReuseStrategy",
      "org.apache.lucene.index.LiveIndexWriterConfig",
      "org.apache.lucene.index.IndexWriterConfig",
      "org.apache.lucene.index.IndexDeletionPolicy",
      "org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy",
      "org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain",
      "org.apache.lucene.index.DocumentsWriterPerThread$1",
      "org.apache.lucene.index.DocumentsWriterPerThread",
      "org.apache.lucene.codecs.Codec",
      "org.apache.lucene.codecs.Codec$Holder",
      "org.elasticsearch.index.translog.Translog",
      "org.elasticsearch.ElasticsearchException$ElasticsearchExceptionHandle",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.common.io.stream.NotSerializableExceptionWrapper",
      "org.elasticsearch.search.internal.ShardSearchTransportRequest",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.action.ValidateActions",
      "org.elasticsearch.common.ValidationException",
      "org.elasticsearch.action.ActionRequestValidationException",
      "org.elasticsearch.index.shard.TranslogRecoveryPerformer",
      "org.apache.lucene.search.DocIdSetIterator",
      "org.apache.lucene.index.PostingsEnum",
      "org.apache.lucene.index.RandomPostingsTester$SeedPostings",
      "org.apache.lucene.util.TestUtil",
      "com.carrotsearch.randomizedtesting.generators.RandomInts",
      "org.apache.lucene.index.FilterLeafReader$FilterPostingsEnum",
      "org.apache.lucene.index.AssertingLeafReader$AssertingPostingsEnum",
      "org.apache.lucene.index.AssertingLeafReader$DocsEnumState",
      "org.jboss.netty.handler.codec.http.HttpMethod",
      "org.jboss.netty.handler.codec.http.DefaultHttpMessage",
      "org.jboss.netty.handler.codec.http.DefaultHttpRequest",
      "org.jboss.netty.handler.codec.http.HttpHeaders$1",
      "org.jboss.netty.handler.codec.http.HttpHeaders",
      "org.jboss.netty.handler.codec.http.DefaultHttpHeaders",
      "org.jboss.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry",
      "org.jboss.netty.buffer.EmptyChannelBuffer",
      "org.jboss.netty.buffer.ChannelBuffers",
      "org.jboss.netty.channel.local.DefaultLocalClientChannelFactory",
      "org.jboss.netty.channel.AbstractChannelSink",
      "org.jboss.netty.channel.local.LocalClientChannelSink",
      "org.jboss.netty.channel.DefaultChannelPipeline$DiscardingChannelSink",
      "org.jboss.netty.channel.DefaultChannelPipeline",
      "org.jboss.netty.util.internal.ConcurrentHashMap",
      "org.jboss.netty.util.internal.ConcurrentHashMap$Segment",
      "org.jboss.netty.util.internal.ConcurrentHashMap$HashEntry",
      "org.jboss.netty.channel.AbstractChannel",
      "org.jboss.netty.channel.local.DefaultLocalChannel",
      "org.jboss.netty.channel.CompleteChannelFuture",
      "org.jboss.netty.channel.SucceededChannelFuture",
      "org.jboss.netty.channel.DefaultChannelFuture",
      "org.jboss.netty.channel.AbstractChannel$ChannelCloseFuture",
      "org.jboss.netty.util.internal.ThreadLocalBoolean",
      "org.jboss.netty.channel.DefaultChannelConfig",
      "org.jboss.netty.buffer.AbstractChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBufferFactory",
      "org.jboss.netty.channel.local.DefaultLocalChannel$1",
      "org.jboss.netty.channel.Channels",
      "org.jboss.netty.channel.UpstreamChannelStateEvent",
      "org.jboss.netty.channel.ChannelState",
      "org.jboss.netty.channel.UpstreamChannelStateEvent$1",
      "org.elasticsearch.rest.RestRequest",
      "org.elasticsearch.http.netty.NettyHttpRequest",
      "org.elasticsearch.search.builder.SearchSourceBuilder",
      "org.elasticsearch.action.search.SearchRequest",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.apache.lucene.index.LeafReader",
      "org.apache.lucene.index.CodecReader",
      "org.apache.lucene.index.SegmentReader",
      "org.apache.lucene.index.IndexReaderContext",
      "org.apache.lucene.index.LeafReaderContext",
      "org.apache.lucene.index.CodecReader$1",
      "org.apache.lucene.index.CodecReader$2",
      "org.apache.lucene.index.CodecReader$3",
      "org.apache.lucene.index.SegmentCoreReaders",
      "org.elasticsearch.search.fetch.FetchSubPhase$HitContext",
      "org.apache.lucene.document.FieldType",
      "org.elasticsearch.index.mapper.MappedFieldType",
      "org.elasticsearch.common.bytes.ByteBufferBytesReference",
      "org.elasticsearch.action.search.ClearScrollRequest",
      "org.elasticsearch.index.engine.LiveVersionMap",
      "org.elasticsearch.index.engine.LiveVersionMap$Maps",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.ZoneInfoProvider$1",
      "org.joda.time.tz.DateTimeZoneBuilder",
      "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
      "org.joda.time.tz.CachedDateTimeZone",
      "org.elasticsearch.search.DocValueFormat$DateTime",
      "org.elasticsearch.common.joda.DateMathParser",
      "org.elasticsearch.index.Index$Builder",
      "org.apache.lucene.util.StringHelper",
      "org.apache.lucene.search.ReferenceManager",
      "org.apache.lucene.util.AttributeImpl",
      "org.apache.lucene.search.MaxNonCompetitiveBoostAttributeImpl",
      "org.apache.lucene.search.DocIdSetIterator$2",
      "org.apache.lucene.search.DocIdSetIterator$1",
      "org.apache.lucene.util.AttributeSource$2",
      "org.apache.lucene.util.AttributeSource",
      "org.apache.lucene.util.AttributeFactory$DefaultAttributeFactory",
      "org.apache.lucene.util.AttributeFactory$DefaultAttributeFactory$1",
      "org.apache.lucene.util.AttributeFactory",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.core.io.IOContext",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.elasticsearch.common.logging.LoggerMessageFormat",
      "org.elasticsearch.common.settings.SettingsFilter",
      "org.apache.lucene.analysis.tokenattributes.CharTermAttributeImpl",
      "org.apache.lucene.util.AttributeFactory$StaticImplementationAttributeFactory",
      "org.apache.lucene.util.AttributeFactory$1",
      "org.apache.lucene.analysis.MockUTF16TermAttributeImpl",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "org.elasticsearch.common.xcontent.cbor.CborXContentParser",
      "org.apache.lucene.document.Field",
      "org.apache.lucene.index.DocValuesType",
      "org.apache.lucene.document.SortedNumericDocValuesField",
      "org.elasticsearch.action.support.replication.ReplicationOperationTests$Request",
      "org.elasticsearch.index.query.AbstractQueryBuilder",
      "org.elasticsearch.index.query.BaseTermQueryBuilder",
      "org.elasticsearch.index.query.SpanTermQueryBuilder",
      "org.apache.lucene.store.FSLockFactory",
      "org.apache.lucene.store.NativeFSLockFactory",
      "org.apache.lucene.util.CommandLineUtil",
      "org.apache.lucene.store.FilterDirectory",
      "org.apache.lucene.store.BaseDirectoryWrapper",
      "org.apache.lucene.store.MockDirectoryWrapper",
      "org.apache.lucene.store.DataOutput",
      "org.apache.lucene.store.IndexOutput",
      "org.apache.lucene.util.ThrottledIndexOutput",
      "org.apache.lucene.util.CloseableDirectory"
    );
  }
}
