/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 04:23:15 GMT 2021
 */

package org.elasticsearch.index.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.log4j.Logger;
import org.apache.lucene.index.AllDeletedFilterReader;
import org.apache.lucene.index.ExitableDirectoryReader;
import org.apache.lucene.index.FieldFilterLeafReader;
import org.apache.lucene.index.LeafReader;
import org.apache.lucene.index.ParallelLeafReader;
import org.apache.lucene.index.QueryTimeoutImpl;
import org.apache.lucene.index.Term;
import org.apache.lucene.search.Query;
import org.elasticsearch.common.logging.ESLogger;
import org.elasticsearch.index.engine.Engine;
import org.elasticsearch.index.engine.EngineConfig;
import org.elasticsearch.index.engine.InternalEngine;
import org.elasticsearch.index.mapper.MappedFieldType;
import org.elasticsearch.index.query.ExistsQueryBuilder;
import org.elasticsearch.index.query.QueryShardContext;
import org.elasticsearch.search.fetch.FetchSubPhase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InternalEngine_ESTest extends InternalEngine_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      ESLogger eSLogger0 = null;
      AtomicBoolean atomicBoolean0 = new AtomicBoolean();
      assertNotNull(atomicBoolean0);
      assertEquals("false", atomicBoolean0.toString());
      assertFalse(atomicBoolean0.get());
      
      EngineConfig engineConfig0 = null;
      InternalEngine.SearchFactory internalEngine_SearchFactory0 = null;
      try {
        internalEngine_SearchFactory0 = new InternalEngine.SearchFactory(eSLogger0, atomicBoolean0, engineConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.engine.InternalEngine$SearchFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      EngineConfig engineConfig0 = null;
      InternalEngine internalEngine0 = null;
      try {
        internalEngine0 = new InternalEngine(engineConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.engine.Engine", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      String string0 = "this class needs an ElasticsearchDirectoryReader but got: ";
      EngineConfig engineConfig0 = null;
      InternalEngine internalEngine0 = null;
      try {
        internalEngine0 = new InternalEngine(engineConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.engine.Engine", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      AtomicBoolean atomicBoolean0 = new AtomicBoolean();
      assertNotNull(atomicBoolean0);
      assertFalse(atomicBoolean0.get());
      assertEquals("false", atomicBoolean0.toString());
      
      EngineConfig engineConfig0 = null;
      ESLogger eSLogger0 = null;
      InternalEngine.SearchFactory internalEngine_SearchFactory0 = null;
      try {
        internalEngine_SearchFactory0 = new InternalEngine.SearchFactory(eSLogger0, atomicBoolean0, engineConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.engine.InternalEngine$SearchFactory", e);
      }
  }
}
