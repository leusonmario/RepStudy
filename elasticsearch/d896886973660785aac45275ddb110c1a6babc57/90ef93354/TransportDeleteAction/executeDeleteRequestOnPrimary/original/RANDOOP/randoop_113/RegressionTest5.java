import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.String str12 = shardFailure11.indexUUID;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        java.lang.Throwable throwable14 = shardFailure11.cause;
        java.lang.String str15 = shardFailure11.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure11.routing;
        java.lang.Throwable throwable17 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}", throwable17, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        deleteRequest3.setParentTask("delete {[hi!][][hi!]}", (long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest27.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        long long41 = deleteRequest3.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        java.lang.String str4 = deleteRequest1.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}" + "'", str4, "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}");
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest28.createTask(1L, "", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        java.lang.String str44 = deleteRequest40.id();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest21.timeout(timeValue53);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.refresh(true);
        org.elasticsearch.index.shard.IndexShard indexShard29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete30 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        org.elasticsearch.common.unit.TimeValue timeValue37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.timeout(timeValue37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.setShardId(shardId39);
        boolean boolean41 = deleteRequest40.refresh();
        java.lang.String str42 = deleteRequest40.type();
        java.lang.String str43 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.refresh(false);
        java.lang.Class<?> wildcardClass46 = deleteRequest40.getClass();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest11.remoteAddress(transportAddress13);
        java.lang.String str15 = deleteRequest11.type();
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest11.getDescription();
        java.lang.String str19 = deleteRequest11.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][hi!]}" + "'", str19, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[null][][null]}");
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        java.lang.String str25 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest29.createTask((long) ' ', "hi!", "", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest22.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest17.consistencyLevel(writeConsistencyLevel46);
        long long50 = deleteRequest49.primaryTerm();
        java.lang.String[] strArray51 = deleteRequest49.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest49.validate();
        java.lang.String[] strArray53 = deleteRequest49.indices();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest9.versionType(versionType54);
        long long56 = deleteRequest9.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][hi!]}" + "'", str25, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.Throwable throwable8 = shardFailure5.cause;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.String str10 = shardFailure5.indexUUID;
        java.lang.String str11 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][][hi!]}]}", "delete {[hi!][][delete {[hi!][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}");
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        java.lang.String[] strArray18 = deleteRequest17.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.id();
        deleteRequest31.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest38.setShardId(shardId45);
        java.lang.String str47 = deleteRequest46.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.id("hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest46.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest46.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest31.timeout(timeValue52);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest53.writeTo(streamOutput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        long long13 = deleteRequest11.primaryTerm();
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest21.refresh(true);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest11.createTask((long) '#', "", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId34);
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest11.shardId();
        java.lang.String str37 = deleteRequest11.getDescription();
        java.lang.String str38 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.version(1L);
        deleteRequest51.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest59.createTask((long) ' ', "hi!", "", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest59.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest55.consistencyLevel(writeConsistencyLevel76);
        java.lang.String str79 = deleteRequest55.parent();
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest42.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest11.timeout(timeValue80);
        java.lang.String str83 = deleteRequest82.index();
        long long84 = deleteRequest82.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][][hi!]}" + "'", str37, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][][hi!]}" + "'", str38, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        deleteRequest13.primaryTerm(97L);
        java.lang.String str17 = deleteRequest13.id();
        java.lang.String[] strArray18 = deleteRequest13.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(transportAddress19);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        long long11 = deleteRequest10.version();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.id();
        deleteRequest31.primaryTerm((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest31.getParentTask();
        java.lang.String str36 = deleteRequest31.type();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        deleteRequest12.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        deleteRequest9.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest9.createTask((long) '4', "delete {[null][][null]}", "", taskId34);
        deleteRequest0.setParentTask(taskId34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest0.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNull(transportAddress14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        boolean boolean9 = deleteRequest3.refresh();
        java.lang.String str10 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.id("delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.refresh(true);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        deleteRequest7.primaryTerm((long) 1);
        java.lang.String str10 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str17 = deleteRequest14.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest14.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        boolean boolean34 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.version(1L);
        deleteRequest36.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("delete {[hi!][][hi!]}");
        java.lang.String str41 = deleteRequest40.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.id("");
        long long44 = deleteRequest40.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest40.versionType();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest14.versionType(versionType49);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}", deleteRequest14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 97L + "'", long44 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        deleteRequest29.primaryTerm((long) 1);
        java.lang.String str32 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str39 = deleteRequest36.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest36.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest3.timeout(timeValue48);
        long long51 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.id("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest5.createTask((long) ' ', "hi!", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest38.createTask(1L, "", "", taskId45);
        deleteRequest29.setParentTask(taskId45);
        deleteRequest23.setParentTask(taskId45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest53.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest62.remoteAddress(transportAddress63);
        boolean boolean65 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.version(1L);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest62.versionType();
        java.lang.String[] strArray69 = deleteRequest62.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId76 = deleteRequest75.shardId();
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest75.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest75.version((-1L));
        java.lang.String str80 = deleteRequest75.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = deleteRequest81.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest81.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest88.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel91 = deleteRequest90.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest81.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest75.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest62.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest58.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest23.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.tasks.TaskId taskId97 = deleteRequest23.getParentTask();
        deleteRequest1.setParentTask(taskId97);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(shardId76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(actionRequestValidationException82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel91 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel91.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(taskId97);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.setShardId(shardId25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        deleteRequest26.primaryTerm(1L);
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.versionType(versionType30);
        boolean boolean32 = deleteRequest31.refresh();
        deleteRequest31.primaryTerm((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 1);
        long long10 = deleteRequest9.version();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest9.shardId();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "");
        java.lang.String str18 = shardFailure17.indexUUID;
        java.lang.String str19 = shardFailure17.indexUUID;
        java.lang.String str20 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str19 = deleteRequest11.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.timeout("delete {[null][hi!][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][hi!][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        deleteRequest19.setParentTask("delete {[hi!][hi!][hi!]}", 100L);
        java.lang.String str25 = deleteRequest19.type();
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.readFrom(streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str21 = deleteRequest20.type();
        java.lang.String str22 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.version((long) (byte) 100);
        java.lang.String str25 = deleteRequest24.id();
        boolean boolean26 = deleteRequest24.refresh();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.timeout("delete {[null][][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest0.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest0.indicesOptions();
        java.lang.String str38 = deleteRequest0.parent();
        deleteRequest0.seqNo((long) (byte) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest0.indicesOptions();
        long long42 = deleteRequest0.seqNo();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10L + "'", long42 == 10L);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        java.lang.String str10 = deleteRequest9.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest9.indicesOptions();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}" + "'", str10, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("");
        deleteRequest13.primaryTerm((long) 1);
        java.lang.String str16 = deleteRequest13.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest13.remoteAddress(transportAddress17);
        deleteRequest13.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest13.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        java.lang.String[] strArray36 = deleteRequest35.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        long long39 = deleteRequest38.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.index("hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) (byte) 10, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId21);
        deleteRequest6.setParentTask(taskId21);
        java.lang.String str24 = deleteRequest6.routing();
        long long25 = deleteRequest6.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        java.lang.Class<?> wildcardClass14 = deleteRequest11.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.refresh(true);
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions31);
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        long long16 = deleteRequest15.primaryTerm();
        long long17 = deleteRequest15.primaryTerm();
        java.lang.String str18 = deleteRequest15.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][delete {[hi!][hi!][hi!]}]}" + "'", str18, "delete {[hi!][][delete {[hi!][hi!][hi!]}]}");
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest26.createTask(1L, "", "", taskId33);
        deleteRequest17.setParentTask(taskId33);
        org.elasticsearch.tasks.Task task36 = deleteRequest10.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest10.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.refresh(false);
        long long45 = deleteRequest44.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.parent("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest11.shardId();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest11.versionType();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.version((-1L));
        java.lang.String str34 = deleteRequest29.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.id("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest49.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest23.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest64.remoteAddress(transportAddress65);
        deleteRequest64.seqNo(0L);
        boolean boolean69 = deleteRequest64.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress74 = null;
        deleteRequest73.remoteAddress(transportAddress74);
        boolean boolean76 = deleteRequest73.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest73.version(1L);
        deleteRequest78.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest78.index("delete {[hi!][][hi!]}");
        long long83 = deleteRequest82.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest82.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest82.refresh(true);
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest82.getParentTask();
        deleteRequest64.setParentTask(taskId88);
        deleteRequest23.setParentTask(taskId88);
        deleteRequest23.seqNo((long) (short) 1);
        org.elasticsearch.common.unit.TimeValue timeValue93 = deleteRequest23.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions94 = deleteRequest23.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str57, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(timeValue93);
        org.junit.Assert.assertNotNull(indicesOptions94);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest5.index();
        long long11 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.routing("delete {[hi!][delete {[null][null][null]}][hi!]}");
        java.lang.String str16 = deleteRequest5.index();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest1.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest1.remoteAddress(transportAddress20);
        long long22 = deleteRequest1.primaryTerm();
        boolean boolean23 = deleteRequest1.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        java.lang.String str38 = deleteRequest35.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest35.remoteAddress(transportAddress39);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        boolean boolean6 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        long long33 = deleteRequest3.version();
        java.lang.String str34 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        java.lang.String str47 = deleteRequest43.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest38.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest53.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest52.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        deleteRequest3.setParentTask(taskId66);
        boolean boolean68 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions69 = deleteRequest3.indicesOptions();
        java.lang.Class<?> wildcardClass70 = indicesOptions69.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(indicesOptions69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[null][hi!][null]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}" + "'", str11, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest41.createTask((long) ' ', "hi!", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest41.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        deleteRequest59.remoteAddress(transportAddress60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId66 = deleteRequest65.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest65.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId75 = deleteRequest74.shardId();
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest74.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task82 = deleteRequest74.createTask(1L, "", "", taskId81);
        deleteRequest65.setParentTask(taskId81);
        deleteRequest59.setParentTask(taskId81);
        org.elasticsearch.action.support.IndicesOptions indicesOptions85 = deleteRequest59.indicesOptions();
        java.lang.String str86 = deleteRequest59.type();
        org.elasticsearch.index.VersionType versionType87 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest37.versionType(versionType87);
        org.elasticsearch.index.shard.ShardId shardId89 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest88.setShardId(shardId89);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(indicesOptions85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(versionType87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest6.remoteAddress();
        long long10 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.version(1L);
        deleteRequest19.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.versionType(versionType30);
        deleteRequest23.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest23.remoteAddress(transportAddress34);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest6.consistencyLevel(writeConsistencyLevel36);
        java.lang.String str38 = deleteRequest37.id();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][][hi!]}" + "'", str38, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.version((-1L));
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest12.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest12.timeout("delete {[delete {[hi!][][hi!]}][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][hi!]}][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        deleteRequest8.setParentTask("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}", (long) (byte) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest8.remoteAddress();
        deleteRequest8.setParentTask("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}", (long) '4');
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        long long11 = deleteRequest7.seqNo();
        java.lang.String str12 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        deleteRequest18.primaryTerm((long) 1);
        java.lang.String str21 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        deleteRequest26.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.parent("delete {[hi!][][hi!]}");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.index("hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest39.createTask((long) (byte) 10, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId47);
        deleteRequest32.setParentTask(taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = deleteRequest60.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest60.getParentTask();
        deleteRequest32.setParentTask(taskId64);
        deleteRequest7.setParentTask(taskId64);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest7.setShardId(shardId67);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = null;
        deleteRequest7.remoteAddress(transportAddress69);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(transportAddress63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.Class<?> wildcardClass16 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.String str37 = deleteRequest31.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.refresh(false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}" + "'", str37, "delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        boolean boolean26 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.version(1L);
        org.elasticsearch.index.VersionType versionType36 = deleteRequest30.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest22.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.timeout(timeValue42);
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest3.getParentTask();
        java.lang.String str47 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str15 = deleteRequest12.routing();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.setShardId(shardId16);
        java.lang.String str18 = deleteRequest17.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}" + "'", str18, "delete {[hi!][hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest11.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        long long39 = deleteRequest38.primaryTerm();
        java.lang.String[] strArray40 = deleteRequest38.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest38.validate();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest38.timeout();
        long long43 = deleteRequest38.seqNo();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(actionRequestValidationException41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[hi!][null][hi!]}");
        java.lang.String str15 = deleteRequest3.type();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.routing("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        java.lang.String str53 = deleteRequest21.id();
        deleteRequest21.primaryTerm((long) 10);
        org.elasticsearch.index.shard.IndexShard indexShard56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete57 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest21, indexShard56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        deleteRequest18.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest41.shardId();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest34.createTask((long) ' ', "hi!", "", taskId43);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest26.createTask((long) '#', "hi!", "", taskId45);
        deleteRequest22.setParentTask(taskId45);
        org.elasticsearch.tasks.Task task48 = deleteRequest0.createTask((long) '4', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "", taskId45);
        java.lang.Class<?> wildcardClass49 = task48.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][][hi!]}" + "'", str27, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest25.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest25.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        long long42 = deleteRequest41.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        java.lang.String str50 = deleteRequest46.id();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest41.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.version(0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest25.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest15.consistencyLevel(writeConsistencyLevel59);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(transportAddress31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest3.shardId();
        deleteRequest3.seqNo(35L);
        long long12 = deleteRequest3.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure11.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure11.routing;
        java.lang.String str15 = shardFailure11.indexUUID;
        java.lang.String str16 = shardFailure11.reason;
        java.lang.String str17 = shardFailure11.indexUUID;
        java.lang.Throwable throwable18 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][][hi!]}]}", throwable18, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str21 = shardFailure20.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure20.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}" + "'", str21, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.junit.Assert.assertNull(shardRouting22);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.type("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        boolean boolean14 = deleteRequest13.refresh();
        java.lang.String str15 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.type("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}" + "'", str15, "delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.parent("");
        java.lang.String str46 = deleteRequest3.parent();
        boolean boolean47 = deleteRequest3.refresh();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        java.lang.String str15 = shardFailure13.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest5.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "", taskId50);
        deleteRequest5.seqNo((long) 1);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest5.versionType();
        deleteRequest5.setParentTask("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", (long) (short) 100);
        boolean boolean58 = deleteRequest5.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        java.lang.String str56 = deleteRequest52.id();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest52.timeout();
        org.elasticsearch.index.VersionType versionType58 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest43.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest3.versionType(versionType58);
        deleteRequest3.seqNo((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("");
        long long72 = deleteRequest71.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.type("");
        boolean boolean79 = deleteRequest76.getShouldPersistResult();
        java.lang.String str80 = deleteRequest76.id();
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest76.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest71.timeout(timeValue81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest82.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.version(0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest86.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest65.consistencyLevel(writeConsistencyLevel89);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        java.lang.String str15 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.refresh(true);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest10.timeout();
        java.lang.String str17 = deleteRequest10.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][null][null]}", "delete {[null][][delete {[hi!][hi!][hi!]}]}", "delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        long long12 = deleteRequest11.seqNo();
        java.lang.String str13 = deleteRequest11.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.type("delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest12.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        deleteRequest17.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest17.getParentTask();
        deleteRequest15.setParentTask(taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.setShardId(shardId25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        boolean boolean34 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.version(1L);
        deleteRequest36.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest44.createTask((long) ' ', "hi!", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest44.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest40.consistencyLevel(writeConsistencyLevel61);
        java.lang.String str64 = deleteRequest40.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest40.timeout(timeValue67);
        org.elasticsearch.index.VersionType versionType69 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest15.versionType(versionType69);
        java.lang.String[] strArray71 = deleteRequest70.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(actionRequestValidationException65);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.consistencyLevel(writeConsistencyLevel6);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        long long13 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str44 = deleteRequest17.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest5.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest52.versionType();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest5.versionType(versionType56);
        java.lang.Class<?> wildcardClass58 = deleteRequest57.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray26 = deleteRequest23.indices();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        java.lang.String str29 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        boolean boolean34 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        deleteRequest48.remoteAddress(transportAddress49);
        boolean boolean51 = deleteRequest48.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.version(1L);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest48.versionType();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest48.setShardId(shardId55);
        java.lang.String str57 = deleteRequest56.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.version(97L);
        org.elasticsearch.index.VersionType versionType62 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest42.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        deleteRequest69.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId72 = null;
        deleteRequest69.setParentTask(taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId85 = deleteRequest84.shardId();
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest84.getParentTask();
        org.elasticsearch.tasks.Task task87 = deleteRequest77.createTask((long) ' ', "hi!", "", taskId86);
        long long88 = deleteRequest77.primaryTerm();
        java.lang.String str89 = deleteRequest77.index();
        org.elasticsearch.index.VersionType versionType90 = deleteRequest77.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest69.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest63.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest30.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest12.versionType(versionType90);
        org.elasticsearch.index.shard.ShardId shardId95 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest12.setShardId(shardId95);
        java.lang.Class<?> wildcardClass97 = deleteRequest12.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}" + "'", str29, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertNotNull(versionType90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "");
        java.lang.Throwable throwable18 = shardFailure17.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", throwable18, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str21 = shardFailure20.indexUUID;
        java.lang.String str22 = shardFailure20.indexUUID;
        java.lang.Throwable throwable23 = shardFailure20.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", throwable23, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][]}", throwable23, "delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", throwable23, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str21, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str22, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][null]}", "delete {[hi!][hi!][hi!]}", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.Throwable throwable22 = shardFailure21.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][][hi!]}]}", throwable22, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", throwable22, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = shardFailure26.routing;
        java.lang.Throwable throwable29 = shardFailure26.cause;
        java.lang.String str30 = shardFailure26.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = shardFailure26.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}" + "'", str30, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertNull(shardRouting31);
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        java.lang.String[] strArray19 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.version((-1L));
        java.lang.String str30 = deleteRequest25.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest25.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest12.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest8.consistencyLevel(writeConsistencyLevel41);
        deleteRequest8.setParentTask("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}", (long) 1);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException7, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure13.routing;
        java.lang.String str15 = shardFailure13.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        long long47 = deleteRequest29.seqNo();
        long long48 = deleteRequest29.primaryTerm();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.version((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.type("delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest5.createTask(1L, "", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        java.lang.String str21 = deleteRequest17.id();
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.timeout(timeValue22);
        long long24 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.index("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest5.setShardId(shardId27);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-3L) + "'", long24 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        deleteRequest18.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.index("delete {[hi!][][hi!]}");
        long long23 = deleteRequest22.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest22.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest22.indicesOptions();
        deleteRequest22.seqNo((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest22.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest7.versionType(versionType43);
        java.lang.String str46 = deleteRequest7.parent();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        deleteRequest8.primaryTerm((long) 10);
        long long15 = deleteRequest8.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][null][null]}][][hi!]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        boolean boolean60 = deleteRequest57.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        deleteRequest57.remoteAddress(transportAddress61);
        java.lang.Class<?> wildcardClass63 = deleteRequest57.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("delete {[hi!][delete {[null][null][null]}][hi!]}");
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        java.lang.String str13 = deleteRequest10.routing();
        long long14 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        java.lang.String str19 = deleteRequest16.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}" + "'", str19, "delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}");
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        long long17 = deleteRequest15.version();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        long long18 = deleteRequest16.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.index("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest3.timeout();
        java.lang.String[] strArray36 = deleteRequest3.indices();
        org.elasticsearch.index.shard.IndexShard indexShard37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete38 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        long long9 = deleteRequest3.primaryTerm();
        java.lang.String str10 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.refresh(false);
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        java.lang.String str14 = deleteRequest3.getDescription();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest3.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}");
        long long27 = deleteRequest11.seqNo();
        org.elasticsearch.common.io.stream.StreamInput streamInput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        deleteRequest3.seqNo((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest8.getParentTask();
        java.lang.String str51 = deleteRequest8.id();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][][hi!]}" + "'", str51, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) (short) -1);
        java.lang.String str23 = deleteRequest20.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str23, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        deleteRequest10.primaryTerm((long) 1);
        java.lang.String str13 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.routing("");
        deleteRequest10.primaryTerm((long) (byte) 1);
        deleteRequest10.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) 1);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest10.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest37.shardId();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest30.createTask((long) ' ', "hi!", "", taskId39);
        deleteRequest26.setParentTask(taskId39);
        deleteRequest0.setParentTask(taskId39);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.id("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest0.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId46);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str29 = deleteRequest28.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][][hi!]}" + "'", str29, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        boolean boolean9 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        boolean boolean27 = deleteRequest24.getShouldPersistResult();
        java.lang.String str28 = deleteRequest24.id();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest24.timeout();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        java.lang.String str38 = deleteRequest35.toString();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest35.getParentTask();
        deleteRequest31.setParentTask(taskId39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest11.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.version(1L);
        deleteRequest51.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.index("delete {[hi!][][hi!]}");
        long long56 = deleteRequest55.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest55.remoteAddress(transportAddress57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest55.refresh(true);
        java.lang.String str61 = deleteRequest55.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest55.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest63.remoteAddress(transportAddress64);
        java.lang.String[] strArray66 = deleteRequest63.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str71 = deleteRequest68.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = deleteRequest68.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest68.parent("");
        deleteRequest68.setParentTask("delete {[delete {[hi!][][hi!]}][null][null]}", (long) (-1));
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest68.setShardId(shardId78);
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest68.getParentTask();
        deleteRequest63.setParentTask(taskId80);
        deleteRequest42.setParentTask(taskId80);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][][hi!]}" + "'", str38, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(taskId80);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest16.setParentTask(taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest16.createTask((long) (-1), "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "", taskId40);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest16.remoteAddress(transportAddress42);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.index("hi!");
        java.lang.String str6 = deleteRequest2.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest2.consistencyLevel(writeConsistencyLevel35);
        java.lang.String str38 = deleteRequest37.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException39, "delete {[null][][null]}");
        java.lang.String str42 = shardFailure41.indexUUID;
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[null][][null]}" + "'", str42, "delete {[null][][null]}");
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        long long13 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest8.index("delete {[][null][null]}");
        boolean boolean18 = deleteRequest17.refresh();
        deleteRequest17.setParentTask("delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", (long) 1);
        java.lang.String[] strArray22 = deleteRequest17.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        long long12 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue18 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.refresh(true);
        long long27 = deleteRequest26.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest12.type("");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest12.getParentTask();
        deleteRequest12.seqNo((long) 100);
        boolean boolean31 = deleteRequest12.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout(timeValue5);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        long long8 = deleteRequest3.seqNo();
        java.lang.String str9 = deleteRequest3.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][][hi!]}" + "'", str9, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout(timeValue5);
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", throwable10, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", throwable10, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout(timeValue15);
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.index("hi!");
        java.lang.String str22 = deleteRequest18.routing();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.versionType(versionType23);
        long long25 = deleteRequest3.version();
        java.lang.String str26 = deleteRequest3.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest7.seqNo((-3L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest7.validate();
        long long11 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        java.lang.String[] strArray22 = deleteRequest15.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        java.lang.String str33 = deleteRequest28.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest15.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest7.consistencyLevel(writeConsistencyLevel44);
        boolean boolean49 = deleteRequest48.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version(1L);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest16.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest11.timeout(timeValue28);
        java.lang.Class<?> wildcardClass31 = deleteRequest11.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        java.lang.String[] strArray14 = deleteRequest13.indices();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[hi!][][delete {[hi!][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        long long12 = deleteRequest11.version();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.parent("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String[] strArray33 = deleteRequest0.indices();
        java.lang.String str34 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str34, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue88 = deleteRequest0.timeout();
        long long89 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(timeValue88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", "delete {[hi!][null][hi!]}");
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setShardId(shardId11);
        long long13 = deleteRequest12.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        java.lang.String str14 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        deleteRequest12.seqNo((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest12.versionType(versionType33);
        java.lang.String str35 = deleteRequest12.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str35, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        boolean boolean22 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest49.createTask(1L, "", "", taskId56);
        deleteRequest40.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task59 = deleteRequest33.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest12.timeout(timeValue69);
        deleteRequest70.primaryTerm((long) 10);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("delete {[hi!][][hi!]}");
        long long15 = deleteRequest14.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest14.remoteAddress(transportAddress16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest14.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}", deleteRequest14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        java.lang.Class<?> wildcardClass11 = deleteRequest10.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        boolean boolean17 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        deleteRequest11.primaryTerm(0L);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.setParentTask("", (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest8.remoteAddress();
        java.lang.String str12 = deleteRequest8.getDescription();
        boolean boolean13 = deleteRequest8.refresh();
        long long14 = deleteRequest8.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", deleteRequest8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str12, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str11 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest15.createTask((long) ' ', "hi!", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest33.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest8.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest5.consistencyLevel(writeConsistencyLevel40);
        java.lang.String[] strArray44 = deleteRequest43.indices();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        org.elasticsearch.tasks.Task task49 = deleteRequest43.createTask((-1L), "delete {[delete {[hi!][][hi!]}][][]}", "delete {[delete {[hi!][][hi!]}][][]}", taskId48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}", deleteRequest43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(task49);
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("delete {[][][]}");
        java.lang.String str10 = deleteRequest3.parent();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][]}" + "'", str10, "delete {[][][]}");
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}", "delete {[hi!][delete {[delete {[hi!][][hi!]}][][]}][hi!]}", "delete {[][null][null]}");
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.type("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        boolean boolean33 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.timeout(timeValue34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version(1L);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.setShardId(shardId23);
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.version(97L);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.versionType(versionType30);
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.refresh(true);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        java.lang.String str2 = deleteRequest0.toString();
        java.lang.String str3 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest9.versionType();
        java.lang.String[] strArray16 = deleteRequest9.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.version((-1L));
        java.lang.String str27 = deleteRequest22.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest22.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest9.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest5.consistencyLevel(writeConsistencyLevel38);
        java.lang.String str43 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[null][null][null]}" + "'", str2, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}" + "'", str6, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        long long6 = deleteRequest0.primaryTerm();
        long long7 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.timeout(timeValue17);
        deleteRequest0.seqNo((long) (-1));
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest16.createTask((long) '#', "hi!", "", taskId35);
        deleteRequest12.setParentTask(taskId35);
        java.lang.Class<?> wildcardClass38 = taskId35.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest13.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest13.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest15.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId18);
        deleteRequest11.seqNo((long) (byte) 100);
        java.lang.String str22 = deleteRequest11.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.getDescription();
        java.lang.String[] strArray17 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("delete {[hi!][][hi!]}");
        java.lang.String[] strArray20 = deleteRequest19.indices();
        java.lang.String str21 = deleteRequest19.toString();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest19.versionType();
        java.lang.String str23 = deleteRequest19.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][][null]}" + "'", str16, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[hi!][][hi!]}][][null]}" + "'", str21, "delete {[delete {[hi!][][hi!]}][][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        java.lang.String str29 = deleteRequest25.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest25.timeout();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.versionType(versionType31);
        deleteRequest20.primaryTerm((long) 'a');
        boolean boolean35 = deleteRequest20.getShouldPersistResult();
        long long36 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest20.id("delete {[delete {[hi!][][hi!]}][null][null]}");
        deleteRequest38.seqNo(0L);
        java.lang.String str41 = deleteRequest38.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-3L) + "'", long36 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        boolean boolean8 = deleteRequest5.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest5.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(transportAddress9);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[delete {[hi!][null][null]}][][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        deleteRequest15.primaryTerm((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        long long21 = deleteRequest19.seqNo();
        java.lang.String str22 = deleteRequest19.routing();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.version(97L);
        long long29 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest40.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest49.remoteAddress(transportAddress50);
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.version(1L);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest49.setShardId(shardId56);
        java.lang.String str58 = deleteRequest57.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.version(97L);
        org.elasticsearch.index.VersionType versionType63 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest43.versionType(versionType63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.type("");
        deleteRequest70.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId73 = null;
        deleteRequest70.setParentTask(taskId73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId86 = deleteRequest85.shardId();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest85.getParentTask();
        org.elasticsearch.tasks.Task task88 = deleteRequest78.createTask((long) ' ', "hi!", "", taskId87);
        long long89 = deleteRequest78.primaryTerm();
        java.lang.String str90 = deleteRequest78.index();
        org.elasticsearch.index.VersionType versionType91 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest70.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest64.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest36.versionType(versionType91);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException95 = deleteRequest36.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest36.id("delete {[hi!][][]}");
        java.lang.String str98 = deleteRequest36.index();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(shardId86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(versionType91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(actionRequestValidationException95);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.parent("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest24.remoteAddress(transportAddress25);
        boolean boolean27 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.version(1L);
        deleteRequest29.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.index("delete {[hi!][][hi!]}");
        long long34 = deleteRequest33.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest33.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.refresh(true);
        java.lang.String str39 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest33.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        deleteRequest33.primaryTerm((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest17.createTask((long) (short) 1, "delete {[hi!][delete {[hi!][null][null]}][hi!]}", "delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}", taskId44);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        java.lang.String str10 = shardFailure4.reason;
        java.lang.String str11 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardRouting9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", throwable12, "delete {[delete {[hi!][null][null]}][][hi!]}");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest21.getParentTask();
        deleteRequest17.setParentTask(taskId25);
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest17.validate();
        long long29 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.type("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNull(actionRequestValidationException28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String str11 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        deleteRequest27.primaryTerm((long) 1);
        java.lang.String str30 = deleteRequest27.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest27.remoteAddress(transportAddress31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.timeout(timeValue33);
        long long35 = deleteRequest15.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        deleteRequest41.primaryTerm((long) 1);
        java.lang.String str44 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str51 = deleteRequest48.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest48.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest15.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest7.timeout(timeValue60);
        java.lang.String str64 = deleteRequest63.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.version((long) (short) 1);
        deleteRequest63.seqNo((long) (short) 0);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        long long14 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        deleteRequest23.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[hi!][][hi!]}");
        long long28 = deleteRequest27.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest38.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest47.remoteAddress(transportAddress48);
        boolean boolean50 = deleteRequest47.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.version(1L);
        org.elasticsearch.index.VersionType versionType53 = deleteRequest47.versionType();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest47.setShardId(shardId54);
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest55.version(97L);
        org.elasticsearch.index.VersionType versionType61 = deleteRequest60.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest41.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("");
        deleteRequest68.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId71 = null;
        deleteRequest68.setParentTask(taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId84 = deleteRequest83.shardId();
        org.elasticsearch.tasks.TaskId taskId85 = deleteRequest83.getParentTask();
        org.elasticsearch.tasks.Task task86 = deleteRequest76.createTask((long) ' ', "hi!", "", taskId85);
        long long87 = deleteRequest76.primaryTerm();
        java.lang.String str88 = deleteRequest76.index();
        org.elasticsearch.index.VersionType versionType89 = deleteRequest76.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest68.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest62.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest34.versionType(versionType89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest11.versionType(versionType89);
        deleteRequest93.setParentTask("delete {[hi!][][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}", (long) (short) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions97 = deleteRequest93.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(shardId84);
        org.junit.Assert.assertNotNull(taskId85);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(versionType89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(indicesOptions97);
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        java.lang.String str27 = shardFailure25.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][]}", "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.setShardId(shardId16);
        java.lang.String str18 = deleteRequest15.parent();
        deleteRequest15.primaryTerm((long) '#');
        java.lang.String str21 = deleteRequest15.toString();
        java.lang.Class<?> wildcardClass22 = deleteRequest15.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][][hi!]}" + "'", str21, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest12.setParentTask("delete {[hi!][][hi!]}", (long) '4');
        deleteRequest12.setParentTask("delete {[hi!][hi!][hi!]}", (long) (byte) 100);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        deleteRequest3.seqNo((long) (short) 100);
        long long7 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) 'a');
        long long12 = deleteRequest11.version();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest12.createTask(1L, "", "", taskId19);
        deleteRequest3.setParentTask(taskId19);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.setShardId(shardId23);
        java.lang.String str25 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(true);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        long long4 = deleteRequest2.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest2.validate();
        java.lang.String str6 = deleteRequest2.index();
        java.lang.String[] strArray7 = deleteRequest2.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.parent("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}" + "'", str10, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        java.lang.String str49 = deleteRequest48.routing();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        java.lang.String str15 = deleteRequest11.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][delete {[hi!][null][null]}]}" + "'", str15, "delete {[hi!][][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        deleteRequest12.seqNo((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest12.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest38.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest38.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest12.timeout(timeValue50);
        boolean boolean53 = deleteRequest52.getShouldPersistResult();
        java.lang.String str54 = deleteRequest52.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str54, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        boolean boolean9 = deleteRequest3.refresh();
        java.lang.String str10 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.id("delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.timeout("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.id();
        deleteRequest31.primaryTerm((long) (short) 10);
        java.lang.String str35 = deleteRequest31.parent();
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest31.timeout();
        java.lang.String[] strArray37 = deleteRequest31.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest41.createTask((long) ' ', "hi!", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest41.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        deleteRequest59.remoteAddress(transportAddress60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId66 = deleteRequest65.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest65.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId75 = deleteRequest74.shardId();
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest74.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task82 = deleteRequest74.createTask(1L, "", "", taskId81);
        deleteRequest65.setParentTask(taskId81);
        deleteRequest59.setParentTask(taskId81);
        org.elasticsearch.action.support.IndicesOptions indicesOptions85 = deleteRequest59.indicesOptions();
        org.elasticsearch.index.VersionType versionType86 = deleteRequest59.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException87 = deleteRequest59.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel94 = deleteRequest93.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest59.consistencyLevel(writeConsistencyLevel94);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest31.consistencyLevel(writeConsistencyLevel94);
        java.lang.String str97 = deleteRequest31.type();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(indicesOptions85);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNull(actionRequestValidationException87);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel94 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel94.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.versionType(versionType24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest27.consistencyLevel(writeConsistencyLevel37);
        java.lang.String str39 = deleteRequest38.id();
        long long40 = deleteRequest38.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest25.timeout(timeValue41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest25.setShardId(shardId43);
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest25.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest11.id();
        java.lang.String str15 = deleteRequest11.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.refresh(true);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest13.getParentTask();
        deleteRequest5.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest5.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("delete {[delete {[hi!][][hi!]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][][null]}", deleteRequest31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        deleteRequest22.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.versionType(versionType33);
        java.lang.String str37 = deleteRequest36.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][][hi!]}" + "'", str37, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        long long5 = deleteRequest3.version();
        long long6 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version(1L);
        deleteRequest15.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.index("delete {[hi!][][hi!]}");
        long long20 = deleteRequest19.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest19.remoteAddress(transportAddress21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.consistencyLevel(writeConsistencyLevel25);
        long long27 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("");
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        java.lang.String str53 = deleteRequest49.id();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest49.timeout();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest44.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest40.versionType(versionType55);
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue59 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest10.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest10.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}");
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String[] strArray16 = deleteRequest11.indices();
        java.lang.String str17 = deleteRequest11.getDescription();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest11.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][][null]}" + "'", str17, "delete {[null][][null]}");
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        long long11 = deleteRequest10.version();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        long long13 = deleteRequest10.version();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        long long16 = deleteRequest10.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest11.timeout();
        java.lang.String str17 = deleteRequest11.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        java.lang.String str34 = deleteRequest30.id();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.routing("");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task53 = deleteRequest40.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId52);
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest40.getParentTask();
        deleteRequest18.setParentTask(taskId54);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(taskId54);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str21 = deleteRequest20.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest13.timeout(timeValue22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version(1L);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest29.versionType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest29.setShardId(shardId36);
        java.lang.String str38 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.version(97L);
        deleteRequest37.primaryTerm((long) '#');
        java.lang.String str45 = deleteRequest37.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest37.remoteAddress(transportAddress46);
        deleteRequest37.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest37.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.VersionType versionType53 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest24.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.refresh(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str21, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(transportAddress50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.version((-3L));
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.timeout(timeValue22);
        java.lang.String str24 = deleteRequest7.index();
        java.lang.String str25 = deleteRequest7.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.readFrom(streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][hi!]}" + "'", str25, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.index("delete {[null][][null]}");
        deleteRequest18.setParentTask("delete {[][][]}", (long) '4');
        long long25 = deleteRequest18.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.setShardId(shardId27);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(97L);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.setShardId(shardId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        java.lang.String str56 = deleteRequest52.id();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest52.timeout();
        org.elasticsearch.index.VersionType versionType58 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest47.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest62.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest71.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest62.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest61.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest42.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest36.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest15.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest15.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        java.lang.String str82 = deleteRequest79.parent();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}" + "'", str82, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}", "delete {[hi!][null][null]}");
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        long long11 = deleteRequest7.seqNo();
        java.lang.String str12 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        deleteRequest18.primaryTerm((long) 1);
        java.lang.String str21 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.timeout(timeValue24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest7.remoteAddress(transportAddress26);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][][hi!]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting26);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        boolean boolean38 = deleteRequest35.getShouldPersistResult();
        java.lang.String str39 = deleteRequest35.id();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest35.timeout();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest45.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest44.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest25.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest19.consistencyLevel(writeConsistencyLevel55);
        java.lang.String str60 = deleteRequest59.routing();
        deleteRequest59.seqNo((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.version(100L);
        java.lang.String str16 = deleteRequest8.type();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        long long15 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("");
        boolean boolean22 = deleteRequest19.getShouldPersistResult();
        java.lang.String str23 = deleteRequest19.id();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.index("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest40.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        deleteRequest52.primaryTerm((long) 1);
        java.lang.String str55 = deleteRequest52.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = null;
        deleteRequest52.remoteAddress(transportAddress56);
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue58);
        long long60 = deleteRequest40.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest40.version((long) '#');
        deleteRequest62.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.refresh(false);
        java.lang.String[] strArray68 = deleteRequest67.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str73 = deleteRequest70.parent();
        java.lang.String[] strArray74 = deleteRequest70.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest70.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel86 = deleteRequest85.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest85.getParentTask();
        org.elasticsearch.tasks.Task task88 = deleteRequest70.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId87);
        deleteRequest67.setParentTask(taskId87);
        org.elasticsearch.tasks.Task task90 = deleteRequest33.createTask((long) (short) 0, "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}", taskId87);
        org.elasticsearch.tasks.Task task91 = deleteRequest3.createTask((long) (byte) 1, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}", taskId87);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel86 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel86.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertNotNull(task90);
        org.junit.Assert.assertNotNull(task91);
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        long long15 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest26.remoteAddress(transportAddress27);
        java.lang.String str29 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest33.createTask((long) ' ', "hi!", "", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest33.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest26.consistencyLevel(writeConsistencyLevel50);
        java.lang.String str53 = deleteRequest26.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest21.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest12.consistencyLevel(writeConsistencyLevel54);
        long long57 = deleteRequest12.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][][hi!]}" + "'", str29, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        java.lang.String str19 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("");
        long long27 = deleteRequest26.version();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        java.lang.String[] strArray29 = deleteRequest26.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        deleteRequest26.setParentTask(taskId37);
        deleteRequest3.setParentTask(taskId37);
        long long40 = deleteRequest3.seqNo();
        deleteRequest3.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", 100L);
        java.lang.String str44 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][hi!]}" + "'", str19, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        java.lang.String str17 = deleteRequest16.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}" + "'", str17, "delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.parent("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        java.lang.String str25 = deleteRequest20.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}" + "'", str25, "delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}");
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("");
        deleteRequest13.primaryTerm((long) 1);
        java.lang.String str16 = deleteRequest13.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest13.remoteAddress(transportAddress17);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest5.timeout(timeValue19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest5.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        java.lang.String str36 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest40.createTask((long) ' ', "hi!", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest33.consistencyLevel(writeConsistencyLevel57);
        java.lang.String str60 = deleteRequest33.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest28.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest22.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = deleteRequest63.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", deleteRequest63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(transportAddress64);
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str16 = deleteRequest12.parent();
        java.lang.String str17 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        deleteRequest21.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest21.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest12.consistencyLevel(writeConsistencyLevel30);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        boolean boolean14 = deleteRequest3.refresh();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        deleteRequest15.seqNo((long) '#');
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("");
        long long39 = deleteRequest38.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        java.lang.String str47 = deleteRequest43.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest49.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId62);
        org.elasticsearch.tasks.Task task64 = deleteRequest27.createTask((long) (short) 100, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId62);
        deleteRequest20.setParentTask(taskId62);
        java.lang.String str66 = deleteRequest20.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.version(1L);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest27.versionType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest27.setShardId(shardId34);
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(1L);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest40.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest40.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest35.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId73 = deleteRequest72.shardId();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest72.getParentTask();
        org.elasticsearch.tasks.Task task75 = deleteRequest65.createTask((long) ' ', "hi!", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest81.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest65.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest83.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest60.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest35.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest21.consistencyLevel(writeConsistencyLevel90);
        java.lang.String str95 = deleteRequest94.routing();
        org.elasticsearch.common.unit.TimeValue timeValue96 = deleteRequest94.timeout();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(timeValue96);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest26.createTask(1L, "", "", taskId33);
        deleteRequest17.setParentTask(taskId33);
        org.elasticsearch.tasks.Task task36 = deleteRequest10.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest10.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.version((long) (byte) 100);
        java.lang.String str45 = deleteRequest42.id();
        java.lang.String str46 = deleteRequest42.toString();
        java.lang.String str47 = deleteRequest42.index();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[hi!][][hi!]}" + "'", str46, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        boolean boolean15 = deleteRequest11.refresh();
        java.lang.String str16 = deleteRequest11.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest11.remoteAddress(transportAddress17);
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest2.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest2.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest42.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest51.remoteAddress(transportAddress52);
        boolean boolean54 = deleteRequest51.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.version(1L);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest51.versionType();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest51.setShardId(shardId58);
        java.lang.String str60 = deleteRequest59.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest59.version(97L);
        org.elasticsearch.index.VersionType versionType65 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest45.versionType(versionType65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.type("");
        deleteRequest72.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId75 = null;
        deleteRequest72.setParentTask(taskId75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId88 = deleteRequest87.shardId();
        org.elasticsearch.tasks.TaskId taskId89 = deleteRequest87.getParentTask();
        org.elasticsearch.tasks.Task task90 = deleteRequest80.createTask((long) ' ', "hi!", "", taskId89);
        long long91 = deleteRequest80.primaryTerm();
        java.lang.String str92 = deleteRequest80.index();
        org.elasticsearch.index.VersionType versionType93 = deleteRequest80.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest72.versionType(versionType93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest66.versionType(versionType93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest38.versionType(versionType93);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException97 = deleteRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure99 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][]}", (java.lang.Throwable) actionRequestValidationException97, "delete {[hi!][][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(versionType65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(shardId88);
        org.junit.Assert.assertNotNull(taskId89);
        org.junit.Assert.assertNotNull(task90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(actionRequestValidationException97);
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.parent("");
        java.lang.String str46 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        java.lang.String str18 = deleteRequest15.getDescription();
        boolean boolean19 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        java.lang.String str29 = deleteRequest25.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest25.timeout();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.versionType(versionType31);
        deleteRequest20.primaryTerm((long) 'a');
        boolean boolean35 = deleteRequest20.getShouldPersistResult();
        long long36 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest20.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-3L) + "'", long36 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str39 = deleteRequest38.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.timeout("delete {[hi!][hi!][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][hi!][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][hi!]}" + "'", str39, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[null][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        deleteRequest12.primaryTerm((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest12.getParentTask();
        java.lang.Class<?> wildcardClass24 = taskId23.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        deleteRequest7.primaryTerm((long) (short) 10);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        java.lang.String str6 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}" + "'", str6, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.version((long) 0);
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest23.shardId();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId28);
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("");
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        java.lang.String str53 = deleteRequest49.id();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest49.timeout();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest44.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest40.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest7.versionType(versionType55);
        java.lang.String str59 = deleteRequest7.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[hi!][][hi!]}" + "'", str59, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest1.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest1.timeout();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue26);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        java.lang.String str6 = deleteRequest0.routing();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.version((-1L));
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest42.remoteAddress(transportAddress44);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest42.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest31.consistencyLevel(writeConsistencyLevel49);
        boolean boolean51 = deleteRequest50.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.version((long) (short) 100);
        boolean boolean34 = deleteRequest3.refresh();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        boolean boolean29 = deleteRequest15.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("hi!");
        java.lang.String str16 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(actionRequestValidationException21);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest3.consistencyLevel();
        java.lang.String str19 = deleteRequest3.index();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("hi!");
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest16, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest3.versionType();
        java.lang.String str17 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest23.parent("delete {[hi!][][hi!]}");
        long long34 = deleteRequest33.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest42.remoteAddress(transportAddress43);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest11.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version((long) '4');
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest11.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete19 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", "delete {[][null][null]}", "delete {[delete {[hi!][][hi!]}][][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.parent("");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest50.remoteAddress(transportAddress51);
        boolean boolean53 = deleteRequest50.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.version(1L);
        deleteRequest55.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.index("delete {[hi!][][hi!]}");
        java.lang.String str60 = deleteRequest59.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.id("");
        long long63 = deleteRequest59.primaryTerm();
        boolean boolean64 = deleteRequest59.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest59.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.setShardId(shardId69);
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest70.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions76 = deleteRequest75.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest75.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("hi!");
        deleteRequest80.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest80.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.id("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel93 = deleteRequest92.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest86.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest70.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest3.consistencyLevel(writeConsistencyLevel93);
        java.lang.Class<?> wildcardClass97 = writeConsistencyLevel93.getClass();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 97L + "'", long63 == 97L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(indicesOptions76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel93 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel93.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][hi!]}]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        long long4 = deleteRequest3.version();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        java.lang.String str17 = deleteRequest15.id();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest15.shardId();
        java.lang.String str19 = deleteRequest15.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.timeout("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest27.remoteAddress(transportAddress30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.refresh(false);
        deleteRequest35.seqNo(1L);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.toString();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest7.timeout();
        boolean boolean15 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest22.createTask((long) ' ', "hi!", "", taskId31);
        long long33 = deleteRequest22.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest22.setShardId(shardId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest39.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = deleteRequest50.remoteAddress();
        long long56 = deleteRequest50.primaryTerm();
        long long57 = deleteRequest50.version();
        java.lang.String str58 = deleteRequest50.type();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest50.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest35.createTask((long) (byte) 100, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][hi!]}", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest7.createTask((long) ' ', "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", "delete {[null][null][null]}", taskId59);
        java.lang.String[] strArray62 = deleteRequest7.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(transportAddress55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure7.routing;
        java.lang.String str11 = shardFailure7.indexUUID;
        java.lang.Throwable throwable12 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", throwable12, "delete {[hi!][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        java.lang.String str14 = deleteRequest11.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest45.createTask((long) ' ', "hi!", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest38.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest26.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray72 = deleteRequest71.indices();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest71.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest3.id("delete {[hi!][hi!][hi!]}");
        java.lang.String str77 = deleteRequest3.toString();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}" + "'", str77, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}");
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        long long7 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.consistencyLevel(writeConsistencyLevel33);
        boolean boolean37 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest5.timeout();
        deleteRequest5.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        boolean boolean47 = deleteRequest44.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.version(1L);
        deleteRequest49.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.index("delete {[hi!][][hi!]}");
        java.lang.String str54 = deleteRequest53.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.id("");
        long long57 = deleteRequest53.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest53.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest53.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType61 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest5.versionType(versionType61);
        org.elasticsearch.index.shard.IndexShard indexShard63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete64 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest62, indexShard63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 97L + "'", long57 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((long) 0);
        java.lang.String str32 = deleteRequest31.routing();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        deleteRequest12.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.type("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.timeout("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest41.createTask((-1L), "delete {[delete {[hi!][][hi!]}][][]}", "delete {[delete {[hi!][][hi!]}][][]}", taskId46);
        java.lang.String str48 = deleteRequest41.index();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str48, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        deleteRequest6.setParentTask("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}", 100L);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("delete {[][][]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.routing("delete {[][][]}");
        java.lang.String str13 = deleteRequest12.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest5.index();
        long long11 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.routing("delete {[hi!][delete {[null][null][null]}][hi!]}");
        boolean boolean16 = deleteRequest5.getShouldPersistResult();
        java.lang.String str17 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        long long8 = deleteRequest0.seqNo();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        long long19 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        boolean boolean31 = deleteRequest28.getShouldPersistResult();
        java.lang.String str32 = deleteRequest28.id();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest18.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest7.consistencyLevel(writeConsistencyLevel48);
        long long53 = deleteRequest52.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        deleteRequest7.setParentTask("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", 10L);
        deleteRequest7.seqNo((long) (-1));
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.setParentTask("", (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}" + "'", str15, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.parent("delete {[hi!][][hi!]}");
        deleteRequest7.primaryTerm(97L);
        deleteRequest7.primaryTerm((long) 'a');
        org.elasticsearch.common.io.stream.StreamInput streamInput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.readFrom(streamInput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        java.lang.String str17 = deleteRequest15.id();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest15.shardId();
        long long19 = deleteRequest15.seqNo();
        boolean boolean20 = deleteRequest15.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        java.lang.Throwable throwable15 = shardFailure9.cause;
        java.lang.Class<?> wildcardClass16 = shardFailure9.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.parent("delete {[hi!][][hi!]}");
        long long24 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest7.remoteAddress(transportAddress25);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.routing("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.timeout("delete {[hi!][][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.tasks.TaskId taskId46 = null;
        org.elasticsearch.tasks.Task task47 = deleteRequest41.createTask((-1L), "delete {[delete {[hi!][][hi!]}][][]}", "delete {[delete {[hi!][][hi!]}][][]}", taskId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        deleteRequest54.remoteAddress(transportAddress55);
        boolean boolean57 = deleteRequest54.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest54.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest61.validate();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.setShardId(shardId63);
        org.elasticsearch.index.shard.ShardId shardId65 = deleteRequest64.shardId();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest41.createTask((long) 0, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}", "delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", taskId66);
        java.lang.Class<?> wildcardClass68 = taskId66.getClass();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(actionRequestValidationException62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        java.lang.String str33 = deleteRequest32.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest32.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        boolean boolean51 = deleteRequest48.getShouldPersistResult();
        java.lang.String str52 = deleteRequest48.id();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str56 = deleteRequest55.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue66 = deleteRequest64.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest58.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest7.timeout(timeValue66);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][][hi!]}" + "'", str33, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[hi!][][hi!]}" + "'", str56, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        deleteRequest17.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest17.getParentTask();
        deleteRequest15.setParentTask(taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.setShardId(shardId25);
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest26.remoteAddress();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(transportAddress28);
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest0.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest0.indicesOptions();
        java.lang.String str38 = deleteRequest0.parent();
        long long39 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.routing("delete {[hi!][][hi!]}");
        boolean boolean42 = deleteRequest41.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest41.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(timeValue43);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest57.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNull(shardId59);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest7.seqNo((-3L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest7.validate();
        long long11 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest7.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        long long19 = deleteRequest16.version();
        boolean boolean20 = deleteRequest16.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        deleteRequest30.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.index("delete {[hi!][][hi!]}");
        long long35 = deleteRequest34.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest34.remoteAddress(transportAddress36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest46.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest51.remoteAddress(transportAddress52);
        java.lang.String str54 = deleteRequest51.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId66 = deleteRequest65.shardId();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest58.createTask((long) ' ', "hi!", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest51.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest46.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest39.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress82 = deleteRequest79.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest79.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray85 = deleteRequest84.indices();
        org.elasticsearch.index.VersionType versionType86 = deleteRequest84.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest16.versionType(versionType86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest7.versionType(versionType86);
        long long89 = deleteRequest7.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(actionRequestValidationException47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[hi!][][hi!]}" + "'", str54, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(transportAddress82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-3L) + "'", long89 == (-3L));
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        java.lang.String str24 = deleteRequest23.type();
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest23.shardId();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest36.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = deleteRequest39.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest23.createTask(100L, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", "delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}", taskId43);
        org.elasticsearch.tasks.Task task45 = deleteRequest14.createTask((long) (short) 100, "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId43);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(transportAddress42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest10.timeout(timeValue22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        long long33 = deleteRequest3.version();
        java.lang.String str34 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.refresh(true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str22 = deleteRequest3.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", throwable11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][][hi!]}", throwable11, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str16 = shardFailure15.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure15.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str16, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNull(shardRouting17);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        java.lang.String str7 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.setShardId(shardId27);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(97L);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest14.versionType(versionType34);
        java.lang.String str36 = deleteRequest35.parent();
        java.lang.String[] strArray37 = deleteRequest35.indices();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest35.getParentTask();
        deleteRequest6.setParentTask(taskId38);
        org.elasticsearch.index.VersionType versionType40 = deleteRequest6.versionType();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(versionType40);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest11.shardId();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.routing("");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest34.createTask(1L, "", "", taskId41);
        deleteRequest25.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task44 = deleteRequest18.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest18.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue49);
        java.lang.String str52 = deleteRequest51.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        java.lang.String str8 = deleteRequest3.index();
        java.lang.String str9 = deleteRequest3.getDescription();
        boolean boolean10 = deleteRequest3.getShouldPersistResult();
        long long11 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][][hi!]}" + "'", str9, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest11.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest11.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.refresh(true);
        java.lang.String str19 = deleteRequest18.type();
        java.lang.String str20 = deleteRequest18.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[delete {[null][null][null]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        long long7 = deleteRequest6.version();
        deleteRequest6.setParentTask("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (long) (byte) 10);
        boolean boolean11 = deleteRequest6.getShouldPersistResult();
        long long12 = deleteRequest6.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest12.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest12.validate();
        java.lang.String str38 = deleteRequest12.id();
        java.lang.String str39 = deleteRequest12.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][hi!]}" + "'", str39, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        boolean boolean31 = deleteRequest28.getShouldPersistResult();
        boolean boolean32 = deleteRequest28.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.routing("");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest59.createTask(1L, "", "", taskId66);
        deleteRequest50.setParentTask(taskId66);
        org.elasticsearch.tasks.Task task69 = deleteRequest43.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest43.timeout(timeValue74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest28.timeout(timeValue74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue79 = deleteRequest78.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest3.timeout(timeValue79);
        org.elasticsearch.index.shard.IndexShard indexShard81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete82 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest80, indexShard81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        java.lang.String str30 = deleteRequest29.routing();
        java.lang.String str31 = deleteRequest29.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest11.validate();
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest11.createTask((long) ' ', "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        deleteRequest23.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest59.createTask((long) ' ', "hi!", "", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest59.refresh(true);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest52.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest11.createTask(35L, "hi!", "", taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest11.type("delete {[hi!][][hi!]}");
        java.lang.String str77 = deleteRequest76.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[hi!][][hi!]}" + "'", str77, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest16.setParentTask(taskId20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest16.remoteAddress();
        java.lang.String str23 = deleteRequest16.index();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        boolean boolean14 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.parent("delete {[hi!][][delete {[hi!][null][null]}]}");
        deleteRequest16.primaryTerm((long) (short) 0);
        java.lang.String str19 = deleteRequest16.index();
        boolean boolean20 = deleteRequest16.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        long long4 = deleteRequest3.version();
        java.lang.String str5 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.setShardId(shardId45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest37.timeout(timeValue47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest37.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String[] strArray52 = deleteRequest37.indices();
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest37.shardId();
        deleteRequest37.setParentTask("delete {[hi!][][delete {[hi!][hi!][hi!]}]}", (long) (byte) 10);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNull(shardId53);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) (short) -1);
        deleteRequest8.seqNo(0L);
        java.lang.String str11 = deleteRequest8.routing();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[null][null][null]}][hi!]}");
        java.lang.String str15 = deleteRequest14.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.version((long) '#');
        deleteRequest25.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.routing("delete {[hi!][null][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        long long13 = deleteRequest12.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        boolean boolean18 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest14.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(97L);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest26.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("");
        deleteRequest53.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        deleteRequest53.setParentTask(taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId69 = deleteRequest68.shardId();
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task71 = deleteRequest61.createTask((long) ' ', "hi!", "", taskId70);
        long long72 = deleteRequest61.primaryTerm();
        java.lang.String str73 = deleteRequest61.index();
        org.elasticsearch.index.VersionType versionType74 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest53.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest47.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest14.versionType(versionType74);
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest77.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest12.timeout(timeValue78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest12.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        boolean boolean82 = deleteRequest12.getShouldPersistResult();
        deleteRequest12.setParentTask("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][null][null]}", (long) 'a');
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        java.lang.String str18 = deleteRequest16.parent();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest11.validate();
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest11.createTask((long) ' ', "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        deleteRequest23.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest59.createTask((long) ' ', "hi!", "", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest59.refresh(true);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest52.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest11.createTask(35L, "hi!", "", taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest11.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest11.refresh(false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput79 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][][hi!]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure19.routing;
        java.lang.Throwable throwable21 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable21, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        java.lang.String str24 = shardFailure23.indexUUID;
        java.lang.String str25 = shardFailure23.reason;
        java.lang.String str26 = shardFailure23.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str24, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str26, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        long long13 = deleteRequest10.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest6.validate();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray26 = deleteRequest23.indices();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        java.lang.String str29 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        boolean boolean34 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        deleteRequest48.remoteAddress(transportAddress49);
        boolean boolean51 = deleteRequest48.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.version(1L);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest48.versionType();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest48.setShardId(shardId55);
        java.lang.String str57 = deleteRequest56.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.version(97L);
        org.elasticsearch.index.VersionType versionType62 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest42.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        deleteRequest69.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId72 = null;
        deleteRequest69.setParentTask(taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId85 = deleteRequest84.shardId();
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest84.getParentTask();
        org.elasticsearch.tasks.Task task87 = deleteRequest77.createTask((long) ' ', "hi!", "", taskId86);
        long long88 = deleteRequest77.primaryTerm();
        java.lang.String str89 = deleteRequest77.index();
        org.elasticsearch.index.VersionType versionType90 = deleteRequest77.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest69.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest63.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest30.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest12.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest94.refresh(false);
        boolean boolean97 = deleteRequest94.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}" + "'", str29, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertNotNull(versionType90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        long long6 = deleteRequest0.primaryTerm();
        long long7 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.timeout(timeValue17);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest29.validate();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(actionRequestValidationException39);
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest5.remoteAddress(transportAddress7);
        boolean boolean9 = deleteRequest5.refresh();
        java.lang.String str10 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("");
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        deleteRequest25.primaryTerm((long) 1);
        java.lang.String str28 = deleteRequest25.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest25.remoteAddress(transportAddress29);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest13.timeout(timeValue31);
        long long33 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        deleteRequest39.primaryTerm((long) 1);
        java.lang.String str42 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str49 = deleteRequest46.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest53.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest46.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest13.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest8.timeout(timeValue58);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.setShardId(shardId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest64.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest73.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest67.timeout(timeValue75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest67.refresh(true);
        java.lang.String str79 = deleteRequest67.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest67.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId86 = deleteRequest85.shardId();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest85.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest85.version((-1L));
        boolean boolean90 = deleteRequest89.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue91 = deleteRequest89.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest67.timeout(timeValue91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest63.timeout(timeValue91);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][][null]}" + "'", str9, "delete {[null][][null]}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(shardId86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        deleteRequest16.setParentTask("hi!", (long) (short) 1);
        boolean boolean34 = deleteRequest16.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest16.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(transportAddress35);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest42.remoteAddress(transportAddress43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        deleteRequest50.primaryTerm((long) 1);
        java.lang.String str53 = deleteRequest50.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest50.remoteAddress(transportAddress54);
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest42.timeout(timeValue56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest20.timeout(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        java.lang.Class<?> wildcardClass19 = deleteRequest17.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][null]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure9.routing;
        java.lang.String str14 = shardFailure9.indexUUID;
        java.lang.String str15 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        java.lang.String str4 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.timeout("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][][null]}" + "'", str4, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.id("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        java.lang.String str35 = deleteRequest34.parent();
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest34.shardId();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(shardId36);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        deleteRequest35.setParentTask("delete {[hi!][hi!][hi!]}", 97L);
        boolean boolean40 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.id("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        deleteRequest42.seqNo((-1L));
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        java.lang.String str18 = deleteRequest17.parent();
        java.lang.String str19 = deleteRequest17.type();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "delete {[hi!][null][null]}", "delete {[delete {[hi!][null][null]}][][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        java.lang.String str5 = deleteRequest3.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}" + "'", str5, "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException6);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest14.createTask((long) ' ', "hi!", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest14.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        boolean boolean34 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.version(1L);
        org.elasticsearch.index.VersionType versionType37 = deleteRequest31.versionType();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.setShardId(shardId38);
        java.lang.String str40 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.version(97L);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.setShardId(shardId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("");
        long long54 = deleteRequest53.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("");
        boolean boolean66 = deleteRequest63.getShouldPersistResult();
        java.lang.String str67 = deleteRequest63.id();
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest63.timeout();
        org.elasticsearch.index.VersionType versionType69 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest58.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest58.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = deleteRequest73.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest82.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest73.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest72.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest53.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest47.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest26.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest8.consistencyLevel(writeConsistencyLevel83);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest8.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(actionRequestValidationException74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        java.lang.String str13 = shardFailure11.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure11.routing;
        java.lang.String str15 = shardFailure11.indexUUID;
        java.lang.Throwable throwable16 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}", throwable16, "");
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "hi!");
        java.lang.String str4 = deleteRequest3.routing();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        java.lang.String str47 = deleteRequest29.index();
        java.lang.String str48 = deleteRequest29.id();
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest29.shardId();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.refresh(true);
        java.lang.String str15 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.version((-1L));
        boolean boolean26 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.index.shard.IndexShard indexShard29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete30 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest28, indexShard29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        deleteRequest10.seqNo((long) (short) 10);
        deleteRequest10.primaryTerm((long) 'a');
        java.lang.String str17 = deleteRequest10.getDescription();
        java.lang.String str18 = deleteRequest10.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        java.lang.Class<?> wildcardClass27 = deleteRequest25.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", throwable11, "");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", throwable14, "delete {[hi!][delete {[null][null][null]}][hi!]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("hi!");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(false);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.setParentTask("", (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        deleteRequest8.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest8.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException3, "delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.Throwable throwable6 = shardFailure5.cause;
        java.lang.String str7 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][null]}" + "'", str7, "delete {[delete {[hi!][][hi!]}][null][null]}");
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest3.versionType();
        java.lang.String str8 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", "delete {[delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}][][hi!]}", "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException5, "");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.String str11 = shardFailure9.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str11, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest37.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.parent("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        java.lang.String str48 = deleteRequest45.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        long long10 = deleteRequest9.version();
        java.lang.String str11 = deleteRequest9.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest17.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest10.versionType(versionType42);
        java.lang.String str44 = deleteRequest43.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str21 = deleteRequest20.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest13.timeout(timeValue22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest24.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest24.indicesOptions();
        boolean boolean28 = deleteRequest24.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str21, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version(1L);
        deleteRequest15.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.versionType(versionType26);
        deleteRequest19.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest19.remoteAddress(transportAddress30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest0.consistencyLevel(writeConsistencyLevel32);
        deleteRequest33.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.routing("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        java.lang.String str38 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest45.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("hi!");
        java.lang.String str51 = deleteRequest48.getDescription();
        java.lang.String str52 = deleteRequest48.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest48.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId65 = deleteRequest64.shardId();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest57.createTask((long) ' ', "hi!", "", taskId66);
        org.elasticsearch.action.support.IndicesOptions indicesOptions68 = deleteRequest57.indicesOptions();
        java.lang.String str69 = deleteRequest57.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest57.index("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest48.setParentTask(taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest37.createTask((long) '#', "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", "delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}", taskId72);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str51, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNull(actionRequestValidationException53);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(indicesOptions68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task74);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 10);
        java.lang.String str10 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        deleteRequest14.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.type("");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest14.createTask((long) '4', "delete {[null][][null]}", "", taskId39);
        deleteRequest7.setParentTask(taskId39);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest7.timeout("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        java.lang.String str15 = deleteRequest13.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        java.lang.String str19 = deleteRequest12.parent();
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest12.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(shardId20);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}][][hi!]}", "delete {[null][][]}", "delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str30 = deleteRequest27.type();
        java.lang.String str31 = deleteRequest27.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.version((long) (byte) 10);
        java.lang.String str34 = deleteRequest27.index();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest27.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String str16 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.routing("");
        deleteRequest11.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest26.createTask((long) ' ', "hi!", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.id("delete {[hi!][][hi!]}");
        boolean boolean39 = deleteRequest38.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        java.lang.String str47 = deleteRequest43.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest11.timeout(timeValue48);
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException17, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[null][][null]}");
        java.lang.Throwable throwable32 = shardFailure31.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}", throwable32, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        java.lang.String str17 = deleteRequest15.id();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}", "delete {[null][][null]}");
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable9, "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.String str12 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest20.setShardId(shardId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.parent("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.version(100L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[null][hi!][null]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][hi!]}", throwable24, "delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        java.lang.String str13 = deleteRequest10.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        org.elasticsearch.index.VersionType versionType93 = deleteRequest89.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue94 = deleteRequest89.timeout();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(timeValue94);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.index("delete {[hi!][null][null]}");
        java.lang.String str10 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        deleteRequest17.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest17.getParentTask();
        deleteRequest15.setParentTask(taskId23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest15.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(timeValue25);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String str16 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        long long21 = deleteRequest18.primaryTerm();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((-1L));
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        deleteRequest3.seqNo((long) (short) 100);
        long long7 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest15.createTask(1L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        java.lang.String str31 = deleteRequest27.id();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.type("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        boolean boolean45 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest33.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest11.timeout(timeValue46);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest11.setShardId(shardId49);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.version((long) '#');
        org.elasticsearch.index.shard.IndexShard indexShard19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete20 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest15, indexShard19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        long long9 = deleteRequest3.version();
        java.lang.String str10 = deleteRequest3.type();
        deleteRequest3.seqNo(97L);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        java.lang.String str25 = deleteRequest22.toString();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}" + "'", str25, "delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        java.lang.String str34 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        deleteRequest38.seqNo(0L);
        boolean boolean43 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest47.remoteAddress(transportAddress48);
        boolean boolean50 = deleteRequest47.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.version(1L);
        deleteRequest52.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.index("delete {[hi!][][hi!]}");
        long long57 = deleteRequest56.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.refresh(true);
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest56.getParentTask();
        deleteRequest38.setParentTask(taskId62);
        deleteRequest20.setParentTask(taskId62);
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest20.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(timeValue65);
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        deleteRequest0.setParentTask("hi!", (long) (short) 1);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest0.parent("");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest3.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("hi!");
        java.lang.String str23 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.parent("delete {[null][][null]}");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.versionType(versionType26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest3.timeout();
        java.lang.String str29 = deleteRequest3.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str15 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest12.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest12.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest12.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest8.remoteAddress(transportAddress9);
        java.lang.String str11 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest15.createTask((long) ' ', "hi!", "", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.consistencyLevel(writeConsistencyLevel32);
        java.lang.String str35 = deleteRequest8.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        deleteRequest38.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest46.createTask((long) ' ', "hi!", "", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest46.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest38.consistencyLevel(writeConsistencyLevel63);
        java.lang.String str66 = deleteRequest65.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.type("");
        deleteRequest72.primaryTerm((long) 1);
        java.lang.String str75 = deleteRequest72.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = null;
        deleteRequest72.remoteAddress(transportAddress76);
        org.elasticsearch.common.unit.TimeValue timeValue78 = deleteRequest72.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest65.timeout(timeValue78);
        org.elasticsearch.index.VersionType versionType80 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest37.versionType(versionType80);
        java.lang.String str82 = deleteRequest37.index();
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest37.setShardId(shardId83);
        org.elasticsearch.index.VersionType versionType85 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.versionType(versionType85);
        java.lang.Class<?> wildcardClass87 = deleteRequest84.getClass();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str82, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        java.lang.String str33 = deleteRequest31.type();
        java.lang.String str34 = deleteRequest31.routing();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        java.lang.String[] strArray21 = deleteRequest16.indices();
        java.lang.String str22 = deleteRequest16.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.timeout("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][][hi!]}" + "'", str22, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        java.lang.String str16 = deleteRequest12.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.parent();
        java.lang.String[] strArray29 = deleteRequest27.indices();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.version((long) (short) 10);
        java.lang.String str34 = deleteRequest27.routing();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        long long8 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.versionType(versionType23);
        boolean boolean27 = deleteRequest1.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        deleteRequest15.seqNo((long) '#');
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.id();
        deleteRequest20.setParentTask("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", 10L);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.version((-1L));
        java.lang.String str21 = deleteRequest16.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest3.remoteAddress(transportAddress36);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest31.createTask(1L, "", "", taskId38);
        deleteRequest22.setParentTask(taskId38);
        deleteRequest17.setParentTask(taskId38);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest16.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        deleteRequest43.setParentTask(taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest43.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        boolean boolean54 = deleteRequest43.refresh();
        org.elasticsearch.common.io.stream.StreamInput streamInput55 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest43.readFrom(streamInput55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        java.lang.Class<?> wildcardClass18 = deleteRequest15.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest0.versionType();
        java.lang.String str11 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.refresh(false);
        boolean boolean14 = deleteRequest13.refresh();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest13.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(indicesOptions15);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        deleteRequest17.setParentTask("delete {[hi!][][hi!]}", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest24.remoteAddress(transportAddress25);
        deleteRequest24.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.type("");
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest24.createTask((long) '4', "delete {[null][][null]}", "", taskId49);
        deleteRequest17.setParentTask(taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        long long58 = deleteRequest57.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId63 = deleteRequest62.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        boolean boolean70 = deleteRequest67.getShouldPersistResult();
        java.lang.String str71 = deleteRequest67.id();
        org.elasticsearch.common.unit.TimeValue timeValue72 = deleteRequest67.timeout();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest62.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest62.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException78 = deleteRequest77.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest77.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel87 = deleteRequest86.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest77.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest76.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest57.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel91 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest17.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest92.routing("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(timeValue72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(actionRequestValidationException78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel87 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel87.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel91 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel91.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest94);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.timeout("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}" + "'", str6, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest16.setParentTask(taskId20);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(taskId20);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest12.parent();
        java.lang.String str37 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest12.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete41 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version((long) 'a');
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest10.indicesOptions();
        java.lang.String str17 = deleteRequest10.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        org.elasticsearch.common.unit.TimeValue timeValue37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.timeout(timeValue37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.setShardId(shardId39);
        boolean boolean41 = deleteRequest40.refresh();
        java.lang.String str42 = deleteRequest40.type();
        java.lang.String str43 = deleteRequest40.type();
        java.lang.String str44 = deleteRequest40.index();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        deleteRequest3.setParentTask("delete {[null][][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        deleteRequest25.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.index("delete {[hi!][][hi!]}");
        long long30 = deleteRequest29.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest41.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        java.lang.String str49 = deleteRequest46.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest53.createTask((long) ' ', "hi!", "", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest53.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest46.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest41.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest34.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest74.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest14.versionType(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(actionRequestValidationException42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[hi!][][hi!]}" + "'", str49, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest11.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(actionRequestValidationException39);
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        long long8 = deleteRequest6.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}");
        java.lang.Class<?> wildcardClass18 = throwable13.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNull(transportAddress5);
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("delete {[hi!][][hi!]}");
        java.lang.String str9 = deleteRequest8.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str9, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        deleteRequest17.setParentTask("delete {[null][null][null]}", 35L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest17.indicesOptions();
        long long22 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest17.indicesOptions();
        java.lang.String[] strArray24 = deleteRequest17.indices();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 97L + "'", long22 == 97L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest12.createTask(1L, "", "", taskId19);
        deleteRequest3.setParentTask(taskId19);
        java.lang.String str22 = deleteRequest3.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest3.consistencyLevel();
        java.lang.String str25 = deleteRequest3.routing();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable16 = shardFailure15.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure15.routing;
        java.lang.String str18 = shardFailure15.indexUUID;
        java.lang.Throwable throwable19 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable19, "delete {[delete {[hi!][][hi!]}][][]}");
        java.lang.Throwable throwable22 = shardFailure21.cause;
        java.lang.String str23 = shardFailure21.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        long long18 = deleteRequest16.primaryTerm();
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest16.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.timeout("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(shardId20);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray21 = deleteRequest18.indices();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((-1L));
        long long32 = deleteRequest27.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        boolean boolean39 = deleteRequest36.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version(1L);
        deleteRequest41.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.index("delete {[hi!][][hi!]}");
        long long46 = deleteRequest45.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest45.remoteAddress(transportAddress47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest27.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest11.timeout(timeValue55);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest62.remoteAddress(transportAddress63);
        deleteRequest62.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest62.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId79 = deleteRequest78.shardId();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest78.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest78.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest82.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest82.type("");
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest85.timeout();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest85.getParentTask();
        org.elasticsearch.tasks.Task task88 = deleteRequest62.createTask((long) '4', "delete {[null][][null]}", "", taskId87);
        deleteRequest11.setParentTask(taskId87);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(transportAddress67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(shardId79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task88);
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest18.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest18.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest18.indicesOptions();
        boolean boolean23 = deleteRequest18.refresh();
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][hi!]}]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        deleteRequest3.setParentTask(taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        deleteRequest21.primaryTerm((long) (short) 10);
        long long26 = deleteRequest21.primaryTerm();
        boolean boolean27 = deleteRequest21.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest21.remoteAddress();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(transportAddress28);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version(35L);
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest13.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest13.shardId();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest12.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(indicesOptions28);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        deleteRequest16.setParentTask("hi!", (long) (short) 1);
        boolean boolean34 = deleteRequest16.refresh();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.setShardId(shardId50);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest16.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.id("delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.type("hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setShardId(shardId12);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.timeout("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest27.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest23.createTask((-1L), "", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId30);
        boolean boolean32 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest23.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest23.remoteAddress();
        java.lang.String str35 = deleteRequest23.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(actionRequestValidationException33);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        deleteRequest16.setParentTask("hi!", (long) (short) 1);
        boolean boolean34 = deleteRequest16.refresh();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.setShardId(shardId50);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest16.timeout(timeValue52);
        long long54 = deleteRequest16.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest3.indicesOptions();
        java.lang.String str8 = deleteRequest3.index();
        long long9 = deleteRequest3.seqNo();
        java.lang.String str10 = deleteRequest3.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable12, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str15 = shardFailure14.indexUUID;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.Throwable throwable17 = shardFailure14.cause;
        java.lang.String str18 = shardFailure14.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str15, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str16, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        long long23 = deleteRequest12.primaryTerm();
        java.lang.String str24 = deleteRequest12.index();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest7.versionType(versionType25);
        java.lang.String str27 = deleteRequest26.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        deleteRequest5.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest5.indicesOptions();
        long long15 = deleteRequest5.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][]}");
        long long2 = deleteRequest1.version();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        boolean boolean25 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest22.timeout();
        deleteRequest22.primaryTerm(97L);
        deleteRequest22.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (long) 0);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest15.consistencyLevel(writeConsistencyLevel34);
        java.lang.Class<?> wildcardClass36 = writeConsistencyLevel34.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", "delete {[hi!][][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest26.createTask((long) ' ', "hi!", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest26.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest59.createTask(1L, "", "", taskId66);
        deleteRequest50.setParentTask(taskId66);
        deleteRequest44.setParentTask(taskId66);
        org.elasticsearch.action.support.IndicesOptions indicesOptions70 = deleteRequest44.indicesOptions();
        org.elasticsearch.index.VersionType versionType71 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest12.versionType(versionType71);
        long long73 = deleteRequest12.seqNo();
        java.lang.String str74 = deleteRequest12.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions79 = deleteRequest78.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest78.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest81.type("hi!");
        java.lang.String str84 = deleteRequest81.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest81.parent("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId91 = deleteRequest90.shardId();
        org.elasticsearch.tasks.TaskId taskId92 = deleteRequest90.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest90.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest90.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType97 = deleteRequest90.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest81.versionType(versionType97);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest12.versionType(versionType97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(indicesOptions70);
        org.junit.Assert.assertNotNull(versionType71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(indicesOptions79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "delete {[hi!][][hi!]}" + "'", str84, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNull(shardId91);
        org.junit.Assert.assertNotNull(taskId92);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(versionType97);
        org.junit.Assert.assertNotNull(deleteRequest98);
        org.junit.Assert.assertNotNull(deleteRequest99);
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest25.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[hi!][][hi!]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        long long5 = deleteRequest3.seqNo();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest3.shardId();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(shardId6);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.versionType(versionType20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.setShardId(shardId22);
        java.lang.String str24 = deleteRequest15.parent();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        long long24 = deleteRequest13.primaryTerm();
        java.lang.String str25 = deleteRequest13.index();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        long long42 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        deleteRequest46.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest31.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest27.consistencyLevel(writeConsistencyLevel62);
        java.lang.String str66 = deleteRequest27.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][][hi!]}" + "'", str66, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        java.lang.String str49 = deleteRequest21.id();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.String str12 = shardFailure9.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}" + "'", str10, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        java.lang.String[] strArray9 = deleteRequest7.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        java.lang.String str53 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest21.id("delete {[hi!][][hi!]}");
        deleteRequest55.primaryTerm((long) ' ');
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        boolean boolean24 = deleteRequest12.refresh();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest12.versionType();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest12.getParentTask();
        java.lang.String str27 = deleteRequest12.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.parent("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        java.lang.String str16 = deleteRequest15.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str16, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        boolean boolean27 = deleteRequest24.refresh();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest3.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.refresh(true);
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest33.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions35);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.parent("");
        java.lang.String str46 = deleteRequest3.id();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest3.primaryTerm((-3L));
        long long10 = deleteRequest3.version();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest3.shardId();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        long long6 = deleteRequest4.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.String str12 = shardFailure11.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}" + "'", str12, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        boolean boolean22 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest49.createTask(1L, "", "", taskId56);
        deleteRequest40.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task59 = deleteRequest33.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest12.timeout(timeValue69);
        java.lang.String str71 = deleteRequest12.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][][hi!]}" + "'", str71, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][][hi!]}");
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        java.lang.String str22 = deleteRequest21.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.id("");
        long long25 = deleteRequest21.primaryTerm();
        boolean boolean26 = deleteRequest21.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[null][][null]}");
        java.lang.String str31 = deleteRequest30.toString();
        deleteRequest30.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest37.shardId();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.routing("");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest60.createTask(1L, "", "", taskId67);
        deleteRequest51.setParentTask(taskId67);
        org.elasticsearch.tasks.Task task70 = deleteRequest44.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest74.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest44.timeout(timeValue75);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel77 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest30.consistencyLevel(writeConsistencyLevel77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest8.consistencyLevel(writeConsistencyLevel77);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 97L + "'", long25 == 97L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}" + "'", str31, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel77 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel77.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) (byte) -1, "", "hi!", taskId19);
        deleteRequest11.seqNo((long) 0);
        long long23 = deleteRequest11.version();
        java.lang.String str24 = deleteRequest11.id();
        long long25 = deleteRequest11.version();
        java.lang.Class<?> wildcardClass26 = deleteRequest11.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.junit.Assert.assertNull(actionRequestValidationException4);
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        java.lang.String str8 = deleteRequest3.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][][]}" + "'", str8, "delete {[][][]}");
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest20.createTask((long) (byte) 100, "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", taskId26);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest20.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNull(transportAddress28);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        java.lang.String str13 = deleteRequest10.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest0.type("delete {[null][][null]}");
        long long39 = deleteRequest38.primaryTerm();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String[] strArray18 = deleteRequest12.indices();
        java.lang.String str19 = deleteRequest12.type();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest12.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        boolean boolean15 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.index("hi!");
        java.lang.String str20 = deleteRequest16.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest42.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest16.consistencyLevel(writeConsistencyLevel49);
        java.lang.String str52 = deleteRequest51.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest51.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        java.lang.String str63 = deleteRequest62.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.id("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions66 = deleteRequest65.indicesOptions();
        boolean boolean67 = deleteRequest65.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = deleteRequest71.validate();
        deleteRequest71.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = deleteRequest71.remoteAddress();
        deleteRequest71.seqNo((long) (short) -1);
        deleteRequest71.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException86 = deleteRequest85.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress87 = deleteRequest85.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest85.getParentTask();
        org.elasticsearch.tasks.Task task89 = deleteRequest71.createTask(35L, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId88);
        org.elasticsearch.tasks.Task task90 = deleteRequest65.createTask((long) 1, "delete {[null][][null]}", "delete {[null][null][null]}", taskId88);
        org.elasticsearch.tasks.Task task91 = deleteRequest51.createTask(0L, "delete {[hi!][][hi!]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", taskId88);
        deleteRequest13.setParentTask(taskId88);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(indicesOptions66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertNull(transportAddress76);
        org.junit.Assert.assertNotNull(actionRequestValidationException86);
        org.junit.Assert.assertNull(transportAddress87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNotNull(task90);
        org.junit.Assert.assertNotNull(task91);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((long) (short) 0);
        java.lang.String str29 = deleteRequest26.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest5.versionType();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        long long13 = deleteRequest11.primaryTerm();
        java.lang.String str14 = deleteRequest11.id();
        java.lang.String str15 = deleteRequest11.getDescription();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest11.versionType();
        deleteRequest11.primaryTerm(0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(versionType16);
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.id("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure5.routing;
        java.lang.String str8 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        deleteRequest3.setParentTask("delete {[null][][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("hi!");
        deleteRequest30.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        deleteRequest34.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long43 = deleteRequest42.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest18.timeout(timeValue44);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest46.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(transportAddress47);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        long long28 = deleteRequest27.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.timeout("delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        deleteRequest37.primaryTerm((long) 1);
        java.lang.String str40 = deleteRequest37.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest37.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest17.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        boolean boolean58 = deleteRequest55.getShouldPersistResult();
        java.lang.String str59 = deleteRequest55.id();
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest55.timeout();
        org.elasticsearch.index.VersionType versionType61 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException66 = deleteRequest65.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest65.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest64.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest17.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.common.io.stream.StreamInput streamInput79 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.readFrom(streamInput79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(actionRequestValidationException66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        deleteRequest29.primaryTerm((long) 1);
        java.lang.String str32 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str39 = deleteRequest36.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest36.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest3.timeout(timeValue48);
        org.elasticsearch.index.shard.IndexShard indexShard51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete52 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest50, indexShard51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("delete {[hi!][][hi!]}");
        long long15 = deleteRequest14.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest14.remoteAddress(transportAddress16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.version((long) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][][delete {[hi!][hi!][hi!]}]}", deleteRequest21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((long) 0);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest30.getParentTask();
        org.elasticsearch.common.io.stream.StreamInput streamInput34 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest30.readFrom(streamInput34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[null][][]}", "delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}");
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        long long21 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.setShardId(shardId32);
        java.lang.String str34 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest38.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest33.createTask((long) (byte) -1, "", "hi!", taskId41);
        deleteRequest33.seqNo((long) 0);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest20.versionType(versionType45);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest20.timeout("delete {[delete {[hi!][null][null]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][null][null]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        java.lang.String str16 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.index("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        java.lang.String str19 = deleteRequest18.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        long long25 = deleteRequest23.seqNo();
        java.lang.String str26 = deleteRequest23.routing();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest22.timeout(timeValue27);
        java.lang.Class<?> wildcardClass29 = deleteRequest22.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}" + "'", str19, "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.indexUUID;
        java.lang.Throwable throwable7 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure5.routing;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure5.routing;
        java.lang.String str12 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (short) 10);
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str63 = deleteRequest62.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}" + "'", str63, "delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}");
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest21.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest21.getParentTask();
        deleteRequest12.setParentTask(taskId25);
        java.lang.Class<?> wildcardClass27 = taskId25.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("");
        deleteRequest13.primaryTerm((long) 1);
        java.lang.String str16 = deleteRequest13.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest13.remoteAddress(transportAddress17);
        deleteRequest13.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest13.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        java.lang.String[] strArray36 = deleteRequest35.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.timeout(timeValue39);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest38.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(actionRequestValidationException41);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        deleteRequest24.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.type("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        deleteRequest15.primaryTerm((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        long long21 = deleteRequest19.seqNo();
        java.lang.String str22 = deleteRequest19.routing();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.index("delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard indexShard27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete28 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest26, indexShard27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.routing("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.timeout("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}");
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str21 = deleteRequest20.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest13.timeout(timeValue22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version(1L);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest29.versionType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest29.setShardId(shardId36);
        java.lang.String str38 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.version(97L);
        deleteRequest37.primaryTerm((long) '#');
        java.lang.String str45 = deleteRequest37.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest37.remoteAddress(transportAddress46);
        deleteRequest37.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = deleteRequest37.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest37.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.VersionType versionType53 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest24.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.routing("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str21, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(transportAddress50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        boolean boolean24 = deleteRequest11.getShouldPersistResult();
        java.lang.String str25 = deleteRequest11.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.String str15 = deleteRequest14.parent();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest14.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][null]}" + "'", str15, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue16);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        java.lang.String str9 = deleteRequest8.id();
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.parent("");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest3.createTask((long) (short) 100, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", taskId33);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(actionRequestValidationException16);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        java.lang.String str13 = deleteRequest11.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.type("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
        java.lang.String str16 = deleteRequest15.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        long long6 = deleteRequest0.primaryTerm();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.String str10 = deleteRequest9.getDescription();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        boolean boolean13 = deleteRequest12.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}" + "'", str10, "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        java.lang.String str61 = deleteRequest57.getDescription();
        java.lang.String str62 = deleteRequest57.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str61, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.seqNo();
        boolean boolean11 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.parent("delete {[null][][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        boolean boolean25 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        boolean boolean38 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.setShardId(shardId39);
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest29.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest18.timeout(timeValue41);
        boolean boolean44 = deleteRequest43.refresh();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((-3L));
        boolean boolean18 = deleteRequest3.refresh();
        long long19 = deleteRequest3.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-3L) + "'", long19 == (-3L));
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][]}", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str29 = deleteRequest26.parent();
        java.lang.String[] strArray30 = deleteRequest26.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest26.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId43);
        deleteRequest23.setParentTask(taskId43);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest23.validate();
        long long47 = deleteRequest23.seqNo();
        java.lang.String str48 = deleteRequest23.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNull(actionRequestValidationException46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        deleteRequest11.primaryTerm((long) (short) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest11.indicesOptions();
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest11.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNull(transportAddress20);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest11.remoteAddress(transportAddress13);
        java.lang.String str15 = deleteRequest11.parent();
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.setShardId(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        java.lang.String str10 = deleteRequest8.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        java.lang.String str36 = deleteRequest32.id();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest32.getParentTask();
        deleteRequest28.setParentTask(taskId37);
        java.lang.String str39 = deleteRequest28.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest28.consistencyLevel();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}" + "'", str39, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        long long4 = deleteRequest3.seqNo();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.refresh(true);
        java.lang.String str15 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.version((-1L));
        boolean boolean26 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.id("delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}");
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}", "delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}", "delete {[hi!][][delete {[null][][null]}]}");
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.setShardId(shardId32);
        boolean boolean34 = deleteRequest33.refresh();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest47.remoteAddress(transportAddress48);
        boolean boolean50 = deleteRequest47.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.version(1L);
        org.elasticsearch.index.VersionType versionType53 = deleteRequest47.versionType();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest47.setShardId(shardId54);
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str66 = deleteRequest65.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId81 = deleteRequest80.shardId();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest73.createTask((long) ' ', "hi!", "", taskId82);
        org.elasticsearch.tasks.TaskId taskId84 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task85 = deleteRequest65.createTask((long) '#', "hi!", "", taskId84);
        org.elasticsearch.tasks.Task task86 = deleteRequest55.createTask((long) 'a', "", "hi!", taskId84);
        deleteRequest43.setParentTask(taskId84);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel88 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest38.consistencyLevel(writeConsistencyLevel88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest38.parent("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.id("delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][][hi!]}" + "'", str66, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId81);
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(taskId84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel88 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel88.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.String str9 = shardFailure7.reason;
        java.lang.String str10 = shardFailure7.reason;
        java.lang.String str11 = shardFailure7.indexUUID;
        java.lang.Throwable throwable12 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][null]}", throwable12, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        java.lang.Throwable throwable15 = shardFailure14.cause;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.String str17 = shardFailure14.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}" + "'", str16, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        boolean boolean15 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        java.lang.String str17 = deleteRequest13.index();
        long long18 = deleteRequest13.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        long long12 = deleteRequest3.seqNo();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest3.remoteAddress(transportAddress7);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][null]}", "", "delete {[null][hi!][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}" + "'", str4, "delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}");
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.parent("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest0.shardId();
        java.lang.String str34 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str34, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }
}

