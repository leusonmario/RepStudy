import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure21.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNull(shardRouting22);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.parent("delete {[hi!][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.timeout("delete {[hi!][][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.consistencyLevel(writeConsistencyLevel46);
        java.lang.String str50 = deleteRequest49.toString();
        boolean boolean51 = deleteRequest49.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str50, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest19.versionType();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.versionType(versionType23);
        long long25 = deleteRequest24.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.common.unit.TimeValue timeValue32 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest29.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        deleteRequest41.primaryTerm((long) 1);
        java.lang.String str44 = deleteRequest41.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest41.remoteAddress(transportAddress45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest35.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest24.timeout(timeValue47);
        java.lang.String str50 = deleteRequest49.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 97L + "'", long25 == 97L);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.type("delete {[delete {[hi!][][hi!]}][][null]}");
        java.lang.Class<?> wildcardClass16 = deleteRequest15.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray21 = deleteRequest18.indices();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((-1L));
        long long32 = deleteRequest27.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        boolean boolean39 = deleteRequest36.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version(1L);
        deleteRequest41.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.index("delete {[hi!][][hi!]}");
        long long46 = deleteRequest45.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest45.remoteAddress(transportAddress47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest27.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest11.timeout(timeValue55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest56.remoteAddress(transportAddress57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.index("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1L + "'", long46 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        deleteRequest5.primaryTerm(10L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("hi!");
        deleteRequest10.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.version((long) (short) 100);
        long long15 = deleteRequest14.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        boolean boolean20 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest34.remoteAddress(transportAddress35);
        boolean boolean37 = deleteRequest34.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.version(1L);
        org.elasticsearch.index.VersionType versionType40 = deleteRequest34.versionType();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.setShardId(shardId41);
        java.lang.String str43 = deleteRequest42.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.version(97L);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest28.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("");
        deleteRequest55.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId58 = null;
        deleteRequest55.setParentTask(taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId71 = deleteRequest70.shardId();
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest70.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest63.createTask((long) ' ', "hi!", "", taskId72);
        long long74 = deleteRequest63.primaryTerm();
        java.lang.String str75 = deleteRequest63.index();
        org.elasticsearch.index.VersionType versionType76 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest55.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest49.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest16.versionType(versionType76);
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest14.timeout(timeValue80);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", deleteRequest14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest23.createTask((long) ' ', "hi!", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest37.remoteAddress(transportAddress38);
        java.lang.String str40 = deleteRequest37.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest44.createTask((long) ' ', "hi!", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest44.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest37.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId68 = deleteRequest67.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        boolean boolean75 = deleteRequest72.getShouldPersistResult();
        java.lang.String str76 = deleteRequest72.id();
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest72.timeout();
        org.elasticsearch.index.VersionType versionType78 = deleteRequest72.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest67.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest63.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest23.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest14.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest10.versionType(versionType78);
        org.elasticsearch.common.io.stream.StreamInput streamInput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest83.readFrom(streamInput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][][hi!]}" + "'", str40, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(shardId68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(versionType78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version((long) (short) 0);
        java.lang.String str29 = deleteRequest28.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        long long15 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.refresh(true);
        long long18 = deleteRequest14.version();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        java.lang.String str11 = deleteRequest3.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        long long10 = deleteRequest9.version();
        deleteRequest9.seqNo((long) (short) 10);
        java.lang.String str13 = deleteRequest9.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        boolean boolean28 = deleteRequest25.refresh();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str16 = deleteRequest10.id();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.setShardId(shardId17);
        java.lang.Class<?> wildcardClass19 = deleteRequest10.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.setShardId(shardId16);
        boolean boolean18 = deleteRequest15.refresh();
        long long19 = deleteRequest15.seqNo();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setShardId(shardId30);
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.setShardId(shardId33);
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.version(10L);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest34.getParentTask();
        deleteRequest34.seqNo((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("hi!");
        deleteRequest18.seqNo(35L);
        deleteRequest18.setParentTask("delete {[delete {[][][]}][null][null]}", (long) (byte) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.setShardId(shardId29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        boolean boolean39 = deleteRequest36.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version(1L);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest36.versionType();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.setShardId(shardId43);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.index("");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray54 = deleteRequest51.indices();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest44.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest60.version((-1L));
        long long65 = deleteRequest60.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = null;
        deleteRequest69.remoteAddress(transportAddress70);
        boolean boolean72 = deleteRequest69.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.version(1L);
        deleteRequest74.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest74.index("delete {[hi!][][hi!]}");
        long long79 = deleteRequest78.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = null;
        deleteRequest78.remoteAddress(transportAddress80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest78.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest60.consistencyLevel(writeConsistencyLevel84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue88 = deleteRequest87.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest44.timeout(timeValue88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest27.timeout(timeValue88);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(timeValue88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", throwable8, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.Throwable throwable11 = shardFailure10.cause;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        java.lang.String str31 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest44.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest44.createTask(1L, "", "", taskId51);
        deleteRequest35.setParentTask(taskId51);
        deleteRequest27.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest27.setShardId(shardId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest27.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest62.remoteAddress(transportAddress63);
        boolean boolean65 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.version(1L);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest62.versionType();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest62.setShardId(shardId69);
        java.lang.String str71 = deleteRequest70.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress76 = null;
        deleteRequest75.remoteAddress(transportAddress76);
        boolean boolean78 = deleteRequest75.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.version(1L);
        org.elasticsearch.index.VersionType versionType81 = deleteRequest75.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = deleteRequest75.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue87 = deleteRequest86.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest75.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest70.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest27.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest7.timeout(timeValue87);
        org.elasticsearch.common.unit.TimeValue timeValue92 = deleteRequest91.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException93 = deleteRequest91.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[hi!][][hi!]}" + "'", str71, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(versionType81);
        org.junit.Assert.assertNull(actionRequestValidationException82);
        org.junit.Assert.assertNotNull(timeValue87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(timeValue92);
        org.junit.Assert.assertNotNull(actionRequestValidationException93);
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest5.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("");
        boolean boolean47 = deleteRequest44.getShouldPersistResult();
        java.lang.String str48 = deleteRequest44.id();
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest5.timeout(timeValue49);
        deleteRequest5.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}", (long) 0);
        deleteRequest5.primaryTerm((long) '#');
        java.lang.String str56 = deleteRequest5.type();
        boolean boolean57 = deleteRequest5.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest16.setParentTask(taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.index("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        java.lang.String str28 = deleteRequest16.index();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}" + "'", str28, "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.consistencyLevel(writeConsistencyLevel12);
        long long14 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.index("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.setShardId(shardId17);
        long long19 = deleteRequest18.seqNo();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) (byte) 10, "delete {[hi!][][hi!]}", "", taskId20);
        java.lang.String[] strArray22 = deleteRequest11.indices();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest12.validate();
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(actionRequestValidationException15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        java.lang.String str16 = deleteRequest15.index();
        java.lang.String str17 = deleteRequest15.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.timeout("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest3.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) ' ');
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        java.lang.String str28 = deleteRequest27.parent();
        boolean boolean29 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest27.validate();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.timeout("delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        deleteRequest18.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest18.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.consistencyLevel(writeConsistencyLevel34);
        java.lang.String str37 = deleteRequest3.type();
        java.lang.String str38 = deleteRequest3.routing();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}", "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(1L);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout("delete {[][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        long long11 = deleteRequest7.seqNo();
        java.lang.String str12 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        deleteRequest18.primaryTerm((long) 1);
        java.lang.String str21 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        deleteRequest26.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.parent("delete {[hi!][][hi!]}");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.index("hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest39.createTask((long) (byte) 10, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId47);
        deleteRequest32.setParentTask(taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = deleteRequest60.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest60.getParentTask();
        deleteRequest32.setParentTask(taskId64);
        deleteRequest7.setParentTask(taskId64);
        java.lang.String str67 = deleteRequest7.parent();
        org.elasticsearch.index.shard.IndexShard indexShard68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete69 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(transportAddress63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        java.lang.String str14 = deleteRequest5.id();
        java.lang.String str15 = deleteRequest5.index();
        deleteRequest5.primaryTerm(35L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        long long22 = deleteRequest11.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest11.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest39.remoteAddress();
        long long45 = deleteRequest39.primaryTerm();
        long long46 = deleteRequest39.version();
        java.lang.String str47 = deleteRequest39.type();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest24.createTask((long) (byte) 100, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][hi!]}", taskId48);
        deleteRequest5.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest5.setShardId(shardId51);
        java.lang.String str53 = deleteRequest5.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][][hi!]}" + "'", str53, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId64 = null;
        org.elasticsearch.tasks.Task task65 = deleteRequest57.createTask((long) 100, "delete {[delete {[hi!][][hi!]}][][null]}", "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}", taskId64);
        java.lang.String str66 = deleteRequest57.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        boolean boolean22 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest49.createTask(1L, "", "", taskId56);
        deleteRequest40.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task59 = deleteRequest33.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest12.timeout(timeValue69);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest12.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.setShardId(shardId37);
        java.lang.String str39 = deleteRequest36.type();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        deleteRequest18.setParentTask(taskId37);
        long long39 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.refresh(true);
        java.lang.String str42 = deleteRequest18.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-3L) + "'", long39 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][][hi!]}" + "'", str42, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        org.elasticsearch.index.VersionType versionType8 = deleteRequest7.versionType();
        long long9 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest15.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest22.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.setShardId(shardId33);
        deleteRequest32.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(1L);
        deleteRequest45.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.index("delete {[hi!][][hi!]}");
        long long50 = deleteRequest49.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest49.remoteAddress(transportAddress51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest61.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest66.remoteAddress(transportAddress67);
        java.lang.String str69 = deleteRequest66.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId81 = deleteRequest80.shardId();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest73.createTask((long) ' ', "hi!", "", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest89.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest73.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest66.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest61.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest54.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.index.shard.ShardId shardId95 = deleteRequest54.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue96 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest32.timeout(timeValue96);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][null]}", deleteRequest97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(actionRequestValidationException62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[hi!][][hi!]}" + "'", str69, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId81);
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNull(shardId95);
        org.junit.Assert.assertNotNull(timeValue96);
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest11.timeout();
        java.lang.String str17 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest11.routing("delete {[hi!][][]}");
        java.lang.String str20 = deleteRequest11.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][hi!]}" + "'", str17, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.id();
        deleteRequest31.primaryTerm((long) (short) 10);
        long long35 = deleteRequest31.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest31.remoteAddress(transportAddress36);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10L + "'", long35 == 10L);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest37.shardId();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest37.createTask(1L, "", "", taskId44);
        deleteRequest28.setParentTask(taskId44);
        deleteRequest20.setParentTask(taskId44);
        org.elasticsearch.tasks.Task task48 = deleteRequest11.createTask(0L, "delete {[hi!][][hi!]}", "delete {[hi!][][hi!]}", taskId44);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest11.getParentTask();
        deleteRequest0.setParentTask(taskId49);
        java.lang.String str51 = deleteRequest0.type();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest19.remoteAddress(transportAddress20);
        deleteRequest19.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest19.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest19.index("");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest12.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.reason;
        java.lang.String str8 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        java.lang.String str53 = deleteRequest21.id();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.writeTo(streamOutput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.parent("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][hi!]}" + "'", str19, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        java.lang.String str16 = deleteRequest14.type();
        java.lang.String str17 = deleteRequest14.routing();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.indexUUID;
        java.lang.String str12 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        long long22 = deleteRequest11.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest11.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest39.remoteAddress();
        long long45 = deleteRequest39.primaryTerm();
        long long46 = deleteRequest39.version();
        java.lang.String str47 = deleteRequest39.type();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest24.createTask((long) (byte) 100, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][hi!]}", taskId48);
        deleteRequest5.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest5.setShardId(shardId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest11.timeout();
        boolean boolean17 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest11.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(transportAddress18);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String str24 = deleteRequest21.parent();
        java.lang.String str25 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(false);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][hi!]}" + "'", str25, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        long long8 = deleteRequest6.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][][hi!]}", throwable13, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str18 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[hi!][null][null]}][][hi!]}" + "'", str18, "delete {[delete {[hi!][null][null]}][][hi!]}");
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        java.lang.String str13 = deleteRequest10.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest29.createTask((long) ' ', "hi!", "", taskId38);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest21.createTask((long) '#', "hi!", "", taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest11.createTask((long) 'a', "", "hi!", taskId40);
        deleteRequest11.seqNo((long) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][][hi!]}" + "'", str22, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(task42);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "", "delete {[null][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[hi!][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        java.lang.String str20 = deleteRequest18.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        org.elasticsearch.index.shard.IndexShard indexShard25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete26 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest22, indexShard25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.parent("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.routing("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.versionType(versionType21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest11.indicesOptions();
        long long24 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest11.refresh(true);
        deleteRequest11.setParentTask("delete {[][null][null]}", 97L);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.versionType(versionType9);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task38 = deleteRequest28.createTask((long) ' ', "hi!", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest21.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str48 = deleteRequest21.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest16.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest51.validate();
        deleteRequest51.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest59.createTask((long) ' ', "hi!", "", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest59.consistencyLevel(writeConsistencyLevel76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest51.consistencyLevel(writeConsistencyLevel76);
        java.lang.String str79 = deleteRequest78.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.type("");
        deleteRequest85.primaryTerm((long) 1);
        java.lang.String str88 = deleteRequest85.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress89 = null;
        deleteRequest85.remoteAddress(transportAddress89);
        org.elasticsearch.common.unit.TimeValue timeValue91 = deleteRequest85.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest78.timeout(timeValue91);
        org.elasticsearch.index.VersionType versionType93 = deleteRequest92.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest50.versionType(versionType93);
        long long95 = deleteRequest50.version();
        org.elasticsearch.common.unit.TimeValue timeValue96 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest6.timeout(timeValue96);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest6.refresh(false);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(actionRequestValidationException52);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + (-3L) + "'", long95 == (-3L));
        org.junit.Assert.assertNotNull(timeValue96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(deleteRequest99);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String str24 = deleteRequest21.parent();
        java.lang.String str25 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest38.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest38.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest55.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.type("");
        deleteRequest55.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest64.remoteAddress(transportAddress65);
        boolean boolean67 = deleteRequest64.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.version(1L);
        org.elasticsearch.index.VersionType versionType70 = deleteRequest64.versionType();
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest64.setShardId(shardId71);
        java.lang.String str73 = deleteRequest72.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException78 = deleteRequest77.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = deleteRequest77.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest77.getParentTask();
        org.elasticsearch.tasks.Task task81 = deleteRequest72.createTask((long) (byte) -1, "", "hi!", taskId80);
        deleteRequest55.setParentTask(taskId80);
        org.elasticsearch.tasks.Task task83 = deleteRequest51.createTask((long) 100, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}", "delete {[null][][null]}", taskId80);
        org.elasticsearch.tasks.Task task84 = deleteRequest31.createTask((long) (short) 100, "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}", taskId80);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][hi!]}" + "'", str25, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(actionRequestValidationException78);
        org.junit.Assert.assertNull(transportAddress79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        boolean boolean14 = deleteRequest3.refresh();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.refresh(true);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest37.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest37.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(transportAddress43);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.version((long) (short) 100);
        java.lang.String str34 = deleteRequest33.type();
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest33.shardId();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.setShardId(shardId36);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "", "");
        java.lang.String str4 = deleteRequest3.index();
        java.lang.String str5 = deleteRequest3.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str4, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        deleteRequest20.primaryTerm((-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(actionRequestValidationException21);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.version((long) 100);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest12.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest12.consistencyLevel();
        java.lang.String str23 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.routing("delete {[null][][]}");
        long long26 = deleteRequest12.primaryTerm();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest12.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(actionRequestValidationException20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 97L + "'", long26 == 97L);
        org.junit.Assert.assertNotNull(versionType27);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
        java.lang.String str16 = deleteRequest15.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}" + "'", str11, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}][hi!]}" + "'", str16, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        deleteRequest7.setParentTask("delete {[null][][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str13 = deleteRequest7.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}" + "'", str13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version(1L);
        deleteRequest15.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.versionType(versionType26);
        deleteRequest19.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest19.remoteAddress(transportAddress30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest0.consistencyLevel(writeConsistencyLevel32);
        deleteRequest33.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.routing("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        java.lang.String str38 = deleteRequest37.id();
        long long39 = deleteRequest37.seqNo();
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        java.lang.Class<?> wildcardClass41 = deleteRequest37.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        boolean boolean7 = deleteRequest5.refresh();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest5.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        deleteRequest5.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.refresh(true);
        long long12 = deleteRequest11.primaryTerm();
        deleteRequest11.seqNo((long) '#');
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.index("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}");
        deleteRequest17.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) 100);
        long long21 = deleteRequest17.seqNo();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest17.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(taskId22);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure9.routing;
        java.lang.String str14 = shardFailure9.reason;
        java.lang.String str15 = shardFailure9.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure9.routing;
        java.lang.String str17 = shardFailure9.reason;
        java.lang.String str18 = shardFailure9.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        java.lang.String str22 = deleteRequest12.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String str24 = deleteRequest21.parent();
        java.lang.String str25 = deleteRequest21.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest21.indicesOptions();
        java.lang.String str27 = deleteRequest21.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest21.remoteAddress(transportAddress28);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][][hi!]}" + "'", str25, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][][hi!]}" + "'", str27, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest7.versionType();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.setShardId(shardId14);
        java.lang.String str16 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str26 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest33.createTask((long) ' ', "hi!", "", taskId42);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest25.createTask((long) '#', "hi!", "", taskId44);
        org.elasticsearch.tasks.Task task46 = deleteRequest15.createTask((long) 'a', "", "hi!", taskId44);
        deleteRequest3.setParentTask(taskId44);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest3.consistencyLevel();
        long long49 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete51 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][][hi!]}" + "'", str26, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        boolean boolean24 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        boolean boolean29 = deleteRequest28.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        deleteRequest16.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.setShardId(shardId22);
        java.lang.String[] strArray24 = deleteRequest23.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version((long) 'a');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.consistencyLevel(writeConsistencyLevel29);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.parent("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest32.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.routing("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.refresh(false);
        java.lang.String str52 = deleteRequest51.parent();
        deleteRequest51.seqNo((long) '#');
        boolean boolean55 = deleteRequest51.refresh();
        long long56 = deleteRequest51.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest51.getParentTask();
        deleteRequest42.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest32.createTask(97L, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", taskId59);
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 35L + "'", long56 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task61);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][hi!]}");
        deleteRequest19.primaryTerm((long) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.Throwable throwable7 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertNull(throwable7);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        long long12 = deleteRequest11.primaryTerm();
        java.lang.String str13 = deleteRequest11.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        deleteRequest1.seqNo((long) 100);
        org.junit.Assert.assertNotNull(versionType2);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version(1L);
        deleteRequest15.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.versionType(versionType26);
        deleteRequest19.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest19.remoteAddress(transportAddress30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest0.consistencyLevel(writeConsistencyLevel32);
        boolean boolean34 = deleteRequest0.refresh();
        java.lang.String str35 = deleteRequest0.index();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest0.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest0.id("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        java.lang.String str40 = deleteRequest0.id();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}" + "'", str40, "delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.primaryTerm(10L);
        java.lang.String str3 = deleteRequest0.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest0.validate();
        org.elasticsearch.tasks.TaskId taskId5 = null;
        deleteRequest0.setParentTask(taskId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.type("");
        deleteRequest0.seqNo((-3L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest21, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][][hi!]}" + "'", str22, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure7.routing;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        java.lang.Throwable throwable10 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][hi!]}", throwable10, "");
        java.lang.Throwable throwable13 = shardFailure12.cause;
        java.lang.String str14 = shardFailure12.indexUUID;
        java.lang.Throwable throwable15 = shardFailure12.cause;
        java.lang.Throwable throwable16 = shardFailure12.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("");
        java.lang.String str34 = deleteRequest33.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest27.consistencyLevel(writeConsistencyLevel37);
        long long39 = deleteRequest38.version();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-3L) + "'", long39 == (-3L));
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        boolean boolean32 = deleteRequest31.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest9.versionType();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest17.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest22.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) (byte) -1, "", "hi!", taskId25);
        deleteRequest0.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest0.routing("delete {[hi!][delete {[null][null][null]}][hi!]}");
        java.lang.String[] strArray32 = deleteRequest0.indices();
        long long33 = deleteRequest0.seqNo();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        java.lang.String str29 = deleteRequest27.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(actionRequestValidationException28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.setShardId(shardId28);
        long long30 = deleteRequest29.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.index("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        java.lang.String str33 = deleteRequest29.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        deleteRequest14.seqNo((long) 100);
        java.lang.String str17 = deleteRequest14.getDescription();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest14.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest14.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(indicesOptions20);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        long long16 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.id("delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.version((long) 'a');
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version(10L);
        deleteRequest7.primaryTerm((long) '4');
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest0.index("delete {[hi!][null][null]}");
        deleteRequest37.seqNo(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest37.remoteAddress(transportAddress40);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        long long24 = deleteRequest13.primaryTerm();
        java.lang.String str25 = deleteRequest13.index();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        long long42 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        deleteRequest46.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest31.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest27.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest69.shardId();
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest69.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest69.version((-1L));
        java.lang.String str74 = deleteRequest69.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = deleteRequest75.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest75.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel85 = deleteRequest84.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest75.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest69.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest27.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest27.type("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.type("delete {[hi!][delete {[null][null][null]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel85 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel85.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.routing("delete {[][][hi!]}");
        long long20 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.version((long) 'a');
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest21.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.index("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(false);
        deleteRequest21.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (long) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest21.timeout("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}][][hi!]}");
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[][null][null]}");
        deleteRequest7.seqNo((long) 1);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        org.elasticsearch.common.io.stream.StreamInput streamInput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        boolean boolean27 = deleteRequest24.refresh();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest3.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.parent("delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.version(10L);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.versionType(versionType17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        java.lang.String str24 = deleteRequest5.id();
        java.lang.String str25 = deleteRequest5.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest5.remoteAddress(transportAddress26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        boolean boolean11 = deleteRequest7.refresh();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest7.versionType();
        boolean boolean14 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.parent("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        long long15 = deleteRequest3.version();
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("");
        deleteRequest33.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId36 = null;
        deleteRequest33.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest41.createTask((long) ' ', "hi!", "", taskId50);
        long long52 = deleteRequest41.primaryTerm();
        java.lang.String str53 = deleteRequest41.index();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest33.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest27.versionType(versionType54);
        org.elasticsearch.common.io.stream.StreamInput streamInput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest27.readFrom(streamInput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][null][null]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest6.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.type("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}");
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest3.indicesOptions();
        java.lang.String str8 = deleteRequest3.index();
        long long9 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String str12 = deleteRequest3.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str12, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest12.routing();
        java.lang.String str19 = deleteRequest12.type();
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.readFrom(streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.index("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) (byte) 10, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId33);
        deleteRequest12.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.routing("delete {[delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}][][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.timeout("delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.version(10L);
        java.lang.String str11 = deleteRequest3.parent();
        deleteRequest3.primaryTerm(0L);
        java.lang.String str14 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        long long13 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str44 = deleteRequest17.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest5.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest52.versionType();
        org.elasticsearch.index.VersionType versionType56 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest5.versionType(versionType56);
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId58);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest16.id("");
        deleteRequest26.setParentTask("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", 1L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest20.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest20.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId24);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        java.lang.String str13 = shardFailure9.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure9.routing;
        java.lang.Throwable throwable15 = shardFailure9.cause;
        java.lang.Throwable throwable16 = shardFailure9.cause;
        java.lang.String str17 = shardFailure9.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure9.routing;
        java.lang.String str19 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][hi!]}" + "'", str19, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest0.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest41.remoteAddress(transportAddress42);
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest48.createTask((long) ' ', "hi!", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest48.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest41.consistencyLevel(writeConsistencyLevel65);
        java.lang.String str68 = deleteRequest41.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest0.consistencyLevel(writeConsistencyLevel69);
        deleteRequest0.setParentTask("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}", (long) (byte) 10);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest0.versionType();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][][hi!]}" + "'", str44, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(versionType74);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.refresh(false);
        java.lang.String str29 = deleteRequest28.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.timeout(timeValue38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest40.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][][hi!]}" + "'", str29, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(actionRequestValidationException41);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.versionType(versionType20);
        java.lang.String str22 = deleteRequest21.type();
        deleteRequest21.seqNo(35L);
        java.lang.String str25 = deleteRequest21.id();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        boolean boolean21 = deleteRequest20.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest20.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest20.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(taskId23);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        java.lang.String str18 = deleteRequest15.toString();
        java.lang.String str19 = deleteRequest15.routing();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        long long13 = deleteRequest10.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest29, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        deleteRequest8.primaryTerm((long) 10);
        java.lang.String str15 = deleteRequest8.getDescription();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest8.getParentTask();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest8.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(versionType17);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable12, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str15 = shardFailure14.indexUUID;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.String str17 = shardFailure14.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str15, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str16, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        java.lang.Class<?> wildcardClass32 = deleteRequest30.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version(100L);
        long long13 = deleteRequest3.version();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        java.lang.String[] strArray26 = deleteRequest23.indices();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest34.createTask((long) '#', "hi!", "", taskId53);
        deleteRequest30.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest5.createTask((long) (short) 100, "delete {[null][null][null]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.id("delete {[null][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String str62 = deleteRequest61.getDescription();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][][hi!]}" + "'", str35, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][][delete {[hi!][null][null]}]}][delete {[null][][null]}]}" + "'", str62, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][][delete {[hi!][null][null]}]}][delete {[null][][null]}]}");
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.version(0L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest43.writeTo(streamOutput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest13.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest13.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest13.validate();
        java.lang.String str33 = deleteRequest13.type();
        deleteRequest13.seqNo((long) 'a');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNull(actionRequestValidationException32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        java.lang.String str2 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest24.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        deleteRequest32.primaryTerm((long) 1);
        java.lang.String str35 = deleteRequest32.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest32.remoteAddress(transportAddress36);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest24.timeout(timeValue38);
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        deleteRequest15.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task43 = deleteRequest1.createTask((long) 100, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[null][][null]}", taskId41);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[null][null][null]}" + "'", str2, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task43);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("");
        boolean boolean35 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest40.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest49.remoteAddress(transportAddress50);
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.version(1L);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest49.setShardId(shardId56);
        java.lang.String str58 = deleteRequest57.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.version(97L);
        org.elasticsearch.index.VersionType versionType63 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest43.versionType(versionType63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.type("");
        deleteRequest70.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId73 = null;
        deleteRequest70.setParentTask(taskId73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId86 = deleteRequest85.shardId();
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest85.getParentTask();
        org.elasticsearch.tasks.Task task88 = deleteRequest78.createTask((long) ' ', "hi!", "", taskId87);
        long long89 = deleteRequest78.primaryTerm();
        java.lang.String str90 = deleteRequest78.index();
        org.elasticsearch.index.VersionType versionType91 = deleteRequest78.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest70.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest64.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest31.versionType(versionType91);
        org.elasticsearch.common.unit.TimeValue timeValue95 = deleteRequest94.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest27.timeout(timeValue95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest27.type("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.Class<?> wildcardClass99 = deleteRequest27.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(shardId86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(versionType91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(timeValue95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "", "");
        java.lang.String str4 = deleteRequest3.index();
        java.lang.Class<?> wildcardClass5 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str4, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest1.consistencyLevel();
        java.lang.String str3 = deleteRequest1.routing();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        java.lang.String str2 = deleteRequest0.routing();
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest0.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(shardId3);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.refresh(true);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest29.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId49);
        boolean boolean51 = deleteRequest29.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.timeout("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version(1L);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.setShardId(shardId23);
        java.lang.String str25 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.version(97L);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.versionType(versionType30);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest45.createTask((long) ' ', "hi!", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest38.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest26.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray72 = deleteRequest71.indices();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest71.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.versionType(versionType73);
        deleteRequest74.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) -1);
        java.lang.String str78 = deleteRequest74.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest74.id("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str78, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest3.indicesOptions();
        java.lang.String str24 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.timeout(timeValue29);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("delete {[][][]}");
        java.lang.String str10 = deleteRequest3.id();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.refresh(true);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest11.getParentTask();
        deleteRequest3.setParentTask(taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.routing("delete {[null][null][null]}");
        java.lang.String str28 = deleteRequest27.id();
        boolean boolean29 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.setShardId(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        long long11 = deleteRequest10.version();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        long long13 = deleteRequest10.version();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        java.lang.String str16 = deleteRequest10.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest10.remoteAddress(transportAddress17);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest89.type("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest94);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest39.createTask((long) ' ', "hi!", "", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest39.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest32.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId63 = deleteRequest62.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        boolean boolean70 = deleteRequest67.getShouldPersistResult();
        java.lang.String str71 = deleteRequest67.id();
        org.elasticsearch.common.unit.TimeValue timeValue72 = deleteRequest67.timeout();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest62.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest58.versionType(versionType73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest18.versionType(versionType73);
        deleteRequest18.seqNo((long) (-1));
        java.lang.String str79 = deleteRequest18.type();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest18.getParentTask();
        deleteRequest11.setParentTask(taskId80);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][][hi!]}" + "'", str35, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(timeValue72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(taskId80);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        long long7 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("delete {[hi!][][hi!]}");
        boolean boolean10 = deleteRequest9.refresh();
        java.lang.String str11 = deleteRequest9.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.refresh(true);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest9.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(actionRequestValidationException14);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout(timeValue5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(actionRequestValidationException9);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        deleteRequest12.setParentTask("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", (long) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        deleteRequest18.setParentTask("delete {[null][][null]}", 97L);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest18.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest18.remoteAddress();
        long long24 = deleteRequest18.version();
        boolean boolean25 = deleteRequest18.refresh();
        java.lang.String str26 = deleteRequest18.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-3L) + "'", long24 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.version(10L);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.setShardId(shardId25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        deleteRequest26.primaryTerm(1L);
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        long long41 = deleteRequest40.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        java.lang.String str49 = deleteRequest45.id();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest40.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("delete {[hi!][][hi!]}");
        deleteRequest53.setParentTask("delete {[null][][null]}", 97L);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest26.createTask(0L, "delete {[hi!][][]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest26.type("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.parent("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        long long8 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("");
        boolean boolean22 = deleteRequest19.getShouldPersistResult();
        java.lang.String str23 = deleteRequest19.id();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest19.timeout();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest30.toString();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest30.getParentTask();
        deleteRequest26.setParentTask(taskId34);
        org.elasticsearch.action.support.IndicesOptions indicesOptions36 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.index("hi!");
        java.lang.String str41 = deleteRequest37.routing();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest26.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest5.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest57.getParentTask();
        org.elasticsearch.tasks.Task task59 = deleteRequest53.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId58);
        long long60 = deleteRequest53.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest61.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.type("");
        deleteRequest61.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest70.remoteAddress(transportAddress71);
        boolean boolean73 = deleteRequest70.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest70.version(1L);
        org.elasticsearch.index.VersionType versionType76 = deleteRequest70.versionType();
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest70.setShardId(shardId77);
        java.lang.String str79 = deleteRequest78.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException84 = deleteRequest83.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = deleteRequest83.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest83.getParentTask();
        org.elasticsearch.tasks.Task task87 = deleteRequest78.createTask((long) (byte) -1, "", "hi!", taskId86);
        deleteRequest61.setParentTask(taskId86);
        deleteRequest53.setParentTask(taskId86);
        deleteRequest44.setParentTask(taskId86);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][][hi!]}" + "'", str33, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(indicesOptions36);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(actionRequestValidationException84);
        org.junit.Assert.assertNull(transportAddress85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task87);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest6.remoteAddress();
        java.lang.String str10 = deleteRequest6.getDescription();
        boolean boolean11 = deleteRequest6.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest6.remoteAddress();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str10, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("hi!");
        long long8 = deleteRequest7.version();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        deleteRequest37.primaryTerm((long) 1);
        java.lang.String str40 = deleteRequest37.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest37.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest17.timeout(timeValue43);
        java.lang.String str47 = deleteRequest46.index();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        long long17 = deleteRequest11.primaryTerm();
        long long18 = deleteRequest11.version();
        java.lang.String str19 = deleteRequest11.type();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest32.createTask((long) (byte) 10, "delete {[hi!][][hi!]}", "", taskId41);
        deleteRequest11.setParentTask(taskId41);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest11.timeout();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(timeValue44);
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.version(1L);
        deleteRequest15.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest23.createTask((long) ' ', "hi!", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest23.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest19.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest19.setShardId(shardId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest48.createTask((long) ' ', "hi!", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest48.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest66.remoteAddress(transportAddress67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId73 = deleteRequest72.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest72.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId82 = deleteRequest81.shardId();
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest81.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        org.elasticsearch.tasks.Task task89 = deleteRequest81.createTask(1L, "", "", taskId88);
        deleteRequest72.setParentTask(taskId88);
        deleteRequest66.setParentTask(taskId88);
        org.elasticsearch.action.support.IndicesOptions indicesOptions92 = deleteRequest66.indicesOptions();
        java.lang.String str93 = deleteRequest66.type();
        org.elasticsearch.index.VersionType versionType94 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest44.versionType(versionType94);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest0.versionType(versionType94);
        org.elasticsearch.common.io.stream.StreamInput streamInput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest96.readFrom(streamInput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(shardId73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(shardId82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNotNull(indicesOptions92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(versionType94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        java.lang.String str10 = shardFailure9.reason;
        java.lang.String str11 = shardFailure9.indexUUID;
        java.lang.String str12 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}" + "'", str11, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}" + "'", str12, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.setShardId(shardId32);
        deleteRequest3.setParentTask("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}", (long) '#');
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        long long47 = deleteRequest29.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest51.remoteAddress(transportAddress52);
        java.lang.String str54 = deleteRequest51.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId66 = deleteRequest65.shardId();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest58.createTask((long) ' ', "hi!", "", taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest51.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId82 = deleteRequest81.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.type("");
        boolean boolean89 = deleteRequest86.getShouldPersistResult();
        java.lang.String str90 = deleteRequest86.id();
        org.elasticsearch.common.unit.TimeValue timeValue91 = deleteRequest86.timeout();
        org.elasticsearch.index.VersionType versionType92 = deleteRequest86.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest81.versionType(versionType92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest77.versionType(versionType92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest29.versionType(versionType92);
        org.elasticsearch.index.shard.ShardId shardId96 = deleteRequest95.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel97 = deleteRequest95.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[hi!][][hi!]}" + "'", str54, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(shardId82);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(versionType92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNull(shardId96);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel97 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel97.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest3.remoteAddress(transportAddress22);
        deleteRequest3.primaryTerm(10L);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure7.routing;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", throwable9, "");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure11.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure11.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        boolean boolean17 = deleteRequest14.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("delete {[][null][null]}");
        java.lang.String str20 = deleteRequest14.type();
        long long21 = deleteRequest14.seqNo();
        boolean boolean22 = deleteRequest14.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        boolean boolean14 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.setShardId(shardId15);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        java.lang.String str14 = deleteRequest7.type();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}" + "'", str14, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        deleteRequest3.seqNo((long) (short) 1);
        deleteRequest3.setParentTask("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}", (long) 10);
        java.lang.Class<?> wildcardClass29 = deleteRequest3.getClass();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((-3L));
        deleteRequest17.seqNo(100L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest12.createTask(1L, "", "", taskId19);
        deleteRequest3.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest27.createTask((long) ' ', "hi!", "", taskId36);
        long long38 = deleteRequest27.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        deleteRequest44.primaryTerm((long) 1);
        java.lang.String str47 = deleteRequest44.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest44.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest27.timeout(timeValue50);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest3.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        boolean boolean55 = deleteRequest53.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest53.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("");
        deleteRequest63.primaryTerm((long) 1);
        java.lang.String str66 = deleteRequest63.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest63.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str73 = deleteRequest70.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId78 = deleteRequest77.shardId();
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest77.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest77.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest70.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest57.timeout(timeValue82);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(shardId78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("hi!");
        deleteRequest18.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        java.lang.String str26 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        deleteRequest30.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest30.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.index("");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest24.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest51.remoteAddress(transportAddress52);
        boolean boolean54 = deleteRequest51.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.version(1L);
        deleteRequest56.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.index("delete {[hi!][][hi!]}");
        long long61 = deleteRequest60.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress62 = null;
        deleteRequest60.remoteAddress(transportAddress62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.refresh(true);
        java.lang.String str66 = deleteRequest60.routing();
        org.elasticsearch.index.VersionType versionType67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest60.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.type("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task72 = deleteRequest44.createTask(97L, "", "delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}", taskId71);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(task72);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest0.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest41.remoteAddress(transportAddress42);
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest48.createTask((long) ' ', "hi!", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest48.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest41.consistencyLevel(writeConsistencyLevel65);
        java.lang.String str68 = deleteRequest41.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest0.consistencyLevel(writeConsistencyLevel69);
        deleteRequest0.setParentTask("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}", (long) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId74 = deleteRequest0.shardId();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][][hi!]}" + "'", str44, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(shardId74);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest11.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest3.createTask((long) '#', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.refresh(true);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        java.lang.String[] strArray27 = deleteRequest25.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][][hi!]}" + "'", str4, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest11.shardId();
        long long15 = deleteRequest11.version();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.refresh();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        deleteRequest10.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest12.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest12.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][delete {[hi!][][hi!]}]}", throwable24, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][hi!]}][][hi!]}", throwable24, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", throwable24, "");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest14.remoteAddress(transportAddress17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        deleteRequest9.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        deleteRequest27.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        deleteRequest27.setParentTask(taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest42.shardId();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest35.createTask((long) ' ', "hi!", "", taskId44);
        long long46 = deleteRequest35.primaryTerm();
        java.lang.String str47 = deleteRequest35.index();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.versionType(versionType48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest16.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest9.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = deleteRequest52.remoteAddress();
        java.lang.String str54 = deleteRequest52.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(transportAddress53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.version((long) 100);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest12.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest12.consistencyLevel();
        java.lang.String str23 = deleteRequest12.index();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.setShardId(shardId24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(actionRequestValidationException20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions26);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        java.lang.String str16 = deleteRequest12.id();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest12.seqNo(100L);
        java.lang.String[] strArray22 = deleteRequest12.indices();
        java.lang.String str23 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.version(1L);
        org.elasticsearch.index.VersionType versionType36 = deleteRequest30.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        java.lang.String str46 = deleteRequest45.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest50.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.routing("");
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest50.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId65 = deleteRequest64.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId74 = deleteRequest73.shardId();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest73.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest79.getParentTask();
        org.elasticsearch.tasks.Task task81 = deleteRequest73.createTask(1L, "", "", taskId80);
        deleteRequest64.setParentTask(taskId80);
        org.elasticsearch.tasks.Task task83 = deleteRequest57.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId80);
        deleteRequest45.setParentTask(taskId80);
        deleteRequest43.setParentTask(taskId80);
        org.elasticsearch.tasks.Task task86 = deleteRequest12.createTask((long) (byte) -1, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", taskId80);
        deleteRequest7.setParentTask(taskId80);
        boolean boolean88 = deleteRequest7.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.version((long) '#');
        deleteRequest25.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}");
        long long33 = deleteRequest32.seqNo();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        deleteRequest10.seqNo((long) '#');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.indexUUID;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.String str8 = shardFailure5.reason;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.String str10 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.refresh(true);
        boolean boolean25 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        long long32 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("");
        boolean boolean39 = deleteRequest36.getShouldPersistResult();
        java.lang.String str40 = deleteRequest36.id();
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest57.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest50.createTask((long) ' ', "hi!", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest62.getParentTask();
        deleteRequest44.setParentTask(taskId63);
        deleteRequest12.setParentTask(taskId63);
        org.elasticsearch.tasks.Task task66 = deleteRequest0.createTask(100L, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[null][null][null]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", taskId63);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(task66);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        long long37 = deleteRequest25.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest41.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue43 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest25.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest18.timeout(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-3L) + "'", long37 == (-3L));
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.id("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest26.createTask((long) ' ', "hi!", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.id("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest22.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest13.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.setShardId(shardId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.version((long) (short) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest42.remoteAddress(transportAddress50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest58.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest63.remoteAddress(transportAddress64);
        java.lang.String str66 = deleteRequest63.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId78 = deleteRequest77.shardId();
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest77.getParentTask();
        org.elasticsearch.tasks.Task task80 = deleteRequest70.createTask((long) ' ', "hi!", "", taskId79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel87 = deleteRequest86.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest70.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest63.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest58.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest42.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest13.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.index.shard.IndexShard indexShard93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete94 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest13, indexShard93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(actionRequestValidationException59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][][hi!]}" + "'", str66, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId78);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel87 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel87.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        java.lang.String str5 = deleteRequest3.type();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.setShardId(shardId12);
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        java.lang.Throwable throwable27 = shardFailure25.cause;
        java.lang.String str28 = shardFailure25.reason;
        java.lang.Throwable throwable29 = shardFailure25.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str28, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable29.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest15.shardId();
        long long18 = deleteRequest15.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest21.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest5.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "", taskId50);
        deleteRequest5.seqNo((long) 1);
        deleteRequest5.setParentTask("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", 97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.parent("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest5.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        deleteRequest5.remoteAddress(transportAddress61);
        java.lang.String str63 = deleteRequest5.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}" + "'", str63, "delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}");
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException13, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[null][null][null]}][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure5.routing;
        java.lang.String str8 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        java.lang.String str24 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str13 = deleteRequest10.parent();
        java.lang.String[] strArray14 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) (short) 10);
        java.lang.String str19 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        deleteRequest23.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.type("");
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest23.createTask((long) '4', "delete {[null][][null]}", "", taskId48);
        deleteRequest16.setParentTask(taskId48);
        deleteRequest8.setParentTask(taskId48);
        deleteRequest8.seqNo((long) ' ');
        java.lang.String str54 = deleteRequest8.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[null][null][null]}" + "'", str54, "delete {[null][null][null]}");
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        long long19 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest25.getParentTask();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest5.versionType(versionType31);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.routing("delete {[delete {[hi!][][hi!]}][][]}");
        boolean boolean37 = deleteRequest33.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        java.lang.String str12 = deleteRequest3.type();
        deleteRequest3.seqNo((long) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest8.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest28.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest28.getParentTask();
        deleteRequest27.setParentTask(taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest27.parent("hi!");
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest18.timeout();
        deleteRequest18.primaryTerm(0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        java.lang.String str14 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        deleteRequest23.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[hi!][][hi!]}");
        long long28 = deleteRequest27.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest27.remoteAddress(transportAddress29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest27.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str36 = deleteRequest35.type();
        java.lang.String str37 = deleteRequest35.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest12.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        java.lang.String str41 = deleteRequest39.id();
        java.lang.String str42 = deleteRequest39.index();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest44.validate();
        deleteRequest44.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.Task task62 = deleteRequest52.createTask((long) ' ', "hi!", "", taskId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest52.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest44.consistencyLevel(writeConsistencyLevel69);
        java.lang.String str72 = deleteRequest71.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.type("");
        deleteRequest78.primaryTerm((long) 1);
        java.lang.String str81 = deleteRequest78.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress82 = null;
        deleteRequest78.remoteAddress(transportAddress82);
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest78.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest71.timeout(timeValue84);
        org.elasticsearch.index.VersionType versionType86 = deleteRequest85.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest39.versionType(versionType86);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][][hi!]}" + "'", str42, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(versionType86);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.parent("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        deleteRequest31.primaryTerm((long) (short) 1);
        java.lang.String str34 = deleteRequest31.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][][hi!]}" + "'", str34, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest1.indicesOptions();
        java.lang.String str8 = deleteRequest1.type();
        java.lang.String str9 = deleteRequest1.parent();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        java.lang.String str47 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.version(100L);
        java.lang.String str50 = deleteRequest29.toString();
        deleteRequest29.seqNo((-3L));
        deleteRequest29.seqNo((long) (byte) -1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[hi!][][hi!]}" + "'", str50, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        long long6 = deleteRequest4.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][][hi!]}][][null]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        java.lang.String str24 = deleteRequest3.toString();
        java.lang.String str25 = deleteRequest3.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest3.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(actionRequestValidationException26);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        java.lang.String str16 = deleteRequest7.routing();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest7.timeout();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", "delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", "delete {[hi!][][delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        java.lang.String str11 = deleteRequest7.id();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.timeout(timeValue12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        java.lang.String str25 = deleteRequest23.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        long long17 = deleteRequest11.primaryTerm();
        long long18 = deleteRequest11.version();
        java.lang.String str19 = deleteRequest11.type();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest11.getParentTask();
        java.lang.String[] strArray21 = deleteRequest11.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest11.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest5.version((long) (byte) 100);
        boolean boolean41 = deleteRequest5.refresh();
        java.lang.String str42 = deleteRequest5.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(transportAddress43);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        java.lang.Class<?> wildcardClass12 = versionType11.getClass();
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        long long9 = deleteRequest3.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("");
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        java.lang.String str53 = deleteRequest49.id();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest49.timeout();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest44.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest40.versionType(versionType55);
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue59 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest10.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str69 = deleteRequest66.parent();
        java.lang.String[] strArray70 = deleteRequest66.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest66.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest81.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.Task task84 = deleteRequest66.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId83);
        org.elasticsearch.tasks.Task task85 = deleteRequest10.createTask(100L, "delete {[delete {[hi!][][hi!]}][][null]}", "delete {[hi!][hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", taskId83);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        java.lang.String str12 = shardFailure11.indexUUID;
        java.lang.String str13 = shardFailure11.reason;
        java.lang.String str14 = shardFailure11.reason;
        java.lang.String str15 = shardFailure11.indexUUID;
        java.lang.Throwable throwable16 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable16, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable19, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", throwable19, "delete {[hi!][delete {[delete {[hi!][][hi!]}][][]}][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        long long11 = deleteRequest10.version();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        long long13 = deleteRequest10.version();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String[] strArray16 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.refresh(false);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.timeout("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version(1L);
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest18.validate();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(actionRequestValidationException22);
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        long long17 = deleteRequest11.primaryTerm();
        long long18 = deleteRequest11.version();
        java.lang.String str19 = deleteRequest11.type();
        java.lang.String str20 = deleteRequest11.index();
        boolean boolean21 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str7 = deleteRequest6.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        java.lang.String str22 = deleteRequest21.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        java.lang.String str19 = deleteRequest12.parent();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest12.timeout();
        java.lang.String[] strArray21 = deleteRequest12.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest12.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest12.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        deleteRequest57.seqNo((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        boolean boolean62 = deleteRequest61.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.routing("delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.version(1L);
        deleteRequest19.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.index("delete {[hi!][][hi!]}");
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.id("");
        long long27 = deleteRequest23.primaryTerm();
        boolean boolean28 = deleteRequest23.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest38.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest34.createTask((-1L), "", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId41);
        deleteRequest3.setParentTask(taskId41);
        java.lang.String str44 = deleteRequest3.getDescription();
        deleteRequest3.setParentTask("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}", (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 97L + "'", long27 == 97L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[delete {[null][null][null]}][][hi!]}" + "'", str44, "delete {[delete {[null][null][null]}][][hi!]}");
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        deleteRequest22.primaryTerm((long) 1);
        java.lang.String str25 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str32 = deleteRequest29.routing();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.versionType(versionType33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("delete {[hi!][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.setShardId(shardId38);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        boolean boolean25 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version(1L);
        deleteRequest34.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.index("delete {[hi!][][hi!]}");
        long long39 = deleteRequest38.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest38.remoteAddress(transportAddress40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest23.consistencyLevel(writeConsistencyLevel44);
        java.lang.Class<?> wildcardClass46 = deleteRequest45.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest13.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest13.shardId();
        boolean boolean16 = deleteRequest13.refresh();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        deleteRequest10.seqNo((-1L));
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest0.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest41.remoteAddress(transportAddress42);
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest48.createTask((long) ' ', "hi!", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest48.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest41.consistencyLevel(writeConsistencyLevel65);
        java.lang.String str68 = deleteRequest41.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest0.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.type("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.setShardId(shardId73);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][][hi!]}" + "'", str44, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest16.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) (byte) -1, "", "hi!", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.type("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest11.indicesOptions();
        long long24 = deleteRequest11.seqNo();
        boolean boolean25 = deleteRequest11.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.routing("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}");
        java.lang.String str5 = deleteRequest1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[][null][null]}" + "'", str5, "delete {[][null][null]}");
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        java.lang.Class<?> wildcardClass8 = deleteRequest3.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        deleteRequest8.setParentTask("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (long) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest8.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        boolean boolean25 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.version(1L);
        deleteRequest27.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.index("delete {[hi!][][hi!]}");
        long long32 = deleteRequest31.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest31.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.refresh(true);
        java.lang.String[] strArray37 = deleteRequest36.indices();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest8.createTask((long) (short) 10, "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}", "delete {[hi!][delete {[hi!][null][null]}][hi!]}", taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest8.type("hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest19.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest41.createTask((long) ' ', "hi!", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest41.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest53.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest12.versionType(versionType58);
        java.lang.String str62 = deleteRequest61.getDescription();
        boolean boolean63 = deleteRequest61.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[delete {[hi!][][hi!]}][][]}" + "'", str62, "delete {[delete {[hi!][][hi!]}][][]}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}", "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.timeout(timeValue7);
        long long9 = deleteRequest5.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest5.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNull(transportAddress11);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        java.lang.String str2 = deleteRequest1.routing();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        long long9 = deleteRequest3.primaryTerm();
        deleteRequest3.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.id("delete {[null][][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.refresh(true);
        deleteRequest29.seqNo((long) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.consistencyLevel(writeConsistencyLevel32);
        deleteRequest14.seqNo((long) (short) 10);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(actionRequestValidationException26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        deleteRequest3.setParentTask("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", 100L);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest3.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[null][][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest0.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str22 = shardFailure21.reason;
        java.lang.String str23 = shardFailure21.indexUUID;
        java.lang.Throwable throwable24 = shardFailure21.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[null][null][null]}" + "'", str22, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str23, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][hi!]}", "delete {[delete {[][][]}][null][null]}");
        boolean boolean4 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str22 = deleteRequest21.getDescription();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        long long25 = deleteRequest24.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}" + "'", str22, "delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][][delete {[hi!][null][null]}]}][delete {[null][][null]}]}");
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((long) 0);
        long long33 = deleteRequest30.seqNo();
        java.lang.String str34 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.refresh(true);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest5.createTask((long) ' ', "hi!", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest38.createTask(1L, "", "", taskId45);
        deleteRequest29.setParentTask(taskId45);
        deleteRequest23.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.setShardId(shardId49);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][delete {[null][null][null]}][hi!]}]}", deleteRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[null][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}" + "'", str4, "delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.version((long) 0);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        boolean boolean36 = deleteRequest33.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.version(1L);
        org.elasticsearch.index.VersionType versionType39 = deleteRequest33.versionType();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest33.setShardId(shardId40);
        java.lang.String str42 = deleteRequest41.routing();
        long long43 = deleteRequest41.primaryTerm();
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest58.getParentTask();
        org.elasticsearch.tasks.Task task61 = deleteRequest51.createTask((long) ' ', "hi!", "", taskId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest51.refresh(true);
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task65 = deleteRequest41.createTask((long) '#', "", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId64);
        java.lang.String str66 = deleteRequest41.toString();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest3.createTask((long) (short) 0, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}", "delete {[][][hi!]}", taskId67);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][][hi!]}" + "'", str66, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        java.lang.String str34 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str48 = deleteRequest47.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = deleteRequest47.remoteAddress();
        java.lang.String str50 = deleteRequest47.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(transportAddress49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[hi!][][hi!]}" + "'", str50, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        deleteRequest3.seqNo((long) (byte) -1);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.index.shard.IndexShard indexShard26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete27 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.id("delete {[hi!][null][null]}");
        java.lang.String str26 = deleteRequest25.parent();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[delete {[null][null][null]}][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String[] strArray18 = deleteRequest12.indices();
        java.lang.String str19 = deleteRequest12.type();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest12.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        deleteRequest36.setParentTask("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", 35L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][delete {[][][]}]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[hi!][][hi!]}][][delete {[][][]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        java.lang.String str21 = deleteRequest15.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.timeout("delete {[hi!][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        java.lang.String str13 = deleteRequest11.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.parent("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        java.lang.String str16 = deleteRequest15.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest3.remoteAddress(transportAddress9);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray26 = deleteRequest23.indices();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        java.lang.String str29 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        boolean boolean34 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        deleteRequest48.remoteAddress(transportAddress49);
        boolean boolean51 = deleteRequest48.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.version(1L);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest48.versionType();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest48.setShardId(shardId55);
        java.lang.String str57 = deleteRequest56.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.version(97L);
        org.elasticsearch.index.VersionType versionType62 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest42.versionType(versionType62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        deleteRequest69.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId72 = null;
        deleteRequest69.setParentTask(taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId85 = deleteRequest84.shardId();
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest84.getParentTask();
        org.elasticsearch.tasks.Task task87 = deleteRequest77.createTask((long) ' ', "hi!", "", taskId86);
        long long88 = deleteRequest77.primaryTerm();
        java.lang.String str89 = deleteRequest77.index();
        org.elasticsearch.index.VersionType versionType90 = deleteRequest77.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest69.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest63.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest30.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest12.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest94.version((long) (-1));
        java.lang.String str97 = deleteRequest94.id();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}" + "'", str29, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertNotNull(versionType90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "delete {[hi!][][hi!]}" + "'", str97, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest21.getParentTask();
        deleteRequest17.setParentTask(taskId25);
        java.lang.String str27 = deleteRequest17.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[null][hi!][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest16.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(transportAddress19);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.version((-3L));
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest3.remoteAddress(transportAddress18);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest3.shardId();
        java.lang.String str21 = deleteRequest3.id();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][][hi!]}");
        java.lang.String str11 = deleteRequest7.routing();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        deleteRequest17.primaryTerm((long) 1);
        java.lang.String str20 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str27 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest41.remoteAddress(transportAddress42);
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.version(1L);
        deleteRequest46.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.index("delete {[hi!][][hi!]}");
        java.lang.String str51 = deleteRequest50.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.id("");
        long long54 = deleteRequest50.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = deleteRequest50.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest50.versionType();
        org.elasticsearch.index.VersionType versionType59 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest24.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest10.versionType(versionType59);
        long long62 = deleteRequest10.primaryTerm();
        deleteRequest10.setParentTask("delete {[delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}][hi!][hi!]}", (long) (byte) 100);
        java.lang.String[] strArray66 = deleteRequest10.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 97L + "'", long54 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(versionType59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        java.lang.String[] strArray21 = deleteRequest16.indices();
        java.lang.String str22 = deleteRequest16.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest16.setParentTask(taskId28);
        java.lang.String str30 = deleteRequest16.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][][hi!]}" + "'", str22, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str30, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest1.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}");
        java.lang.String str9 = deleteRequest6.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest6.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}" + "'", str9, "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertNotNull(indicesOptions10);
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        java.lang.String str36 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest40.createTask((long) ' ', "hi!", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest33.consistencyLevel(writeConsistencyLevel57);
        java.lang.String str60 = deleteRequest33.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest28.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest3.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest3.id("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        deleteRequest65.remoteAddress(transportAddress68);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.String str12 = shardFailure11.indexUUID;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        java.lang.Throwable throwable14 = shardFailure11.cause;
        java.lang.String str15 = shardFailure11.indexUUID;
        java.lang.Throwable throwable16 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", throwable16, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        java.lang.String str19 = shardFailure18.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure18.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}" + "'", str19, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNull(shardRouting20);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        long long9 = deleteRequest3.seqNo();
        java.lang.String str10 = deleteRequest3.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.refresh(true);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest29.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId49);
        long long51 = deleteRequest29.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest56.remoteAddress(transportAddress57);
        boolean boolean59 = deleteRequest56.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.version(1L);
        deleteRequest61.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest61.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest69.shardId();
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest69.getParentTask();
        org.elasticsearch.index.VersionType versionType72 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest65.versionType(versionType72);
        deleteRequest65.primaryTerm((long) (short) 100);
        java.lang.String str76 = deleteRequest65.toString();
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest65.getParentTask();
        deleteRequest29.setParentTask(taskId77);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[hi!][][hi!]}" + "'", str76, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId77);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        boolean boolean10 = deleteRequest3.getShouldPersistResult();
        long long11 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.setShardId(shardId22);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.versionType(versionType24);
        java.lang.String str26 = deleteRequest25.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        deleteRequest19.setParentTask("delete {[hi!][hi!][hi!]}", 100L);
        java.lang.String str25 = deleteRequest19.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.index("");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        long long19 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest25.getParentTask();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest5.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.id("delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}");
        java.lang.Class<?> wildcardClass39 = deleteRequest36.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest5.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "", taskId50);
        deleteRequest5.seqNo((long) 1);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest5.versionType();
        java.lang.String str55 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        java.lang.Class<?> wildcardClass18 = deleteRequest17.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.getDescription();
        java.lang.String[] strArray17 = deleteRequest14.indices();
        boolean boolean18 = deleteRequest14.getShouldPersistResult();
        long long19 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][][null]}" + "'", str16, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        boolean boolean8 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("");
        boolean boolean11 = deleteRequest3.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}" + "'", str6, "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest8.toString();
        java.lang.String[] strArray14 = deleteRequest8.indices();
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str13, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.refresh(true);
        deleteRequest7.setParentTask("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}", (long) (byte) 10);
        java.lang.String str15 = deleteRequest7.routing();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        java.lang.String str5 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest3.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout("delete {[delete {[null][null][null]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[null][null][null]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str5, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(versionType7);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String[] strArray9 = deleteRequest8.indices();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest8.type("delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.id("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String str11 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        deleteRequest27.primaryTerm((long) 1);
        java.lang.String str30 = deleteRequest27.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest27.remoteAddress(transportAddress31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.timeout(timeValue33);
        long long35 = deleteRequest15.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        deleteRequest41.primaryTerm((long) 1);
        java.lang.String str44 = deleteRequest41.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest41.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str51 = deleteRequest48.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest48.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest15.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest7.timeout(timeValue60);
        java.lang.String str64 = deleteRequest7.parent();
        org.elasticsearch.index.shard.IndexShard indexShard65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete66 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest7, indexShard65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest12.shardId();
        long long20 = deleteRequest12.seqNo();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest12.parent("");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest12.getParentTask();
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.readFrom(streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest17.timeout();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = deleteRequest30.remoteAddress();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNull(transportAddress32);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.primaryTerm(10L);
        java.lang.String str3 = deleteRequest0.id();
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        deleteRequest20.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.index("delete {[hi!][][hi!]}");
        long long25 = deleteRequest24.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest24.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest36.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest41.remoteAddress(transportAddress42);
        java.lang.String str44 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = deleteRequest55.shardId();
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest48.createTask((long) ' ', "hi!", "", taskId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest48.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest41.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest36.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest29.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest10.consistencyLevel(writeConsistencyLevel65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest0.consistencyLevel(writeConsistencyLevel65);
        java.lang.String[] strArray72 = deleteRequest71.indices();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][][hi!]}" + "'", str44, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.type("");
        deleteRequest20.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version(1L);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest29.versionType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest29.setShardId(shardId36);
        java.lang.String str38 = deleteRequest37.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = deleteRequest42.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest42.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest37.createTask((long) (byte) -1, "", "hi!", taskId45);
        deleteRequest20.setParentTask(taskId45);
        org.elasticsearch.tasks.Task task48 = deleteRequest16.createTask((long) 100, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}", "delete {[null][][null]}", taskId45);
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest16.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(actionRequestValidationException43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(timeValue49);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("delete {[hi!][][hi!]}");
        java.lang.String str15 = deleteRequest14.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("");
        long long18 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest14.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest14.versionType();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.version((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", deleteRequest25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 97L + "'", long18 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest23.validate();
        long long27 = deleteRequest23.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        boolean boolean14 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(1L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest11.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest11.setShardId(shardId18);
        java.lang.String str20 = deleteRequest19.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest24.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) (byte) -1, "", "hi!", taskId27);
        deleteRequest7.setParentTask(taskId27);
        java.lang.String str30 = deleteRequest7.id();
        deleteRequest7.seqNo((long) (short) 0);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure7.routing;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        java.lang.Throwable throwable10 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][hi!]}", throwable10, "");
        java.lang.Throwable throwable13 = shardFailure12.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure12.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure12.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        long long15 = deleteRequest12.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        deleteRequest16.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.setShardId(shardId32);
        java.lang.String str34 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest38.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest33.createTask((long) (byte) -1, "", "hi!", taskId41);
        deleteRequest16.setParentTask(taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest16.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("");
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        java.lang.String str53 = deleteRequest49.id();
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest49.timeout();
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest49.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest12.consistencyLevel(writeConsistencyLevel58);
        java.lang.String str61 = deleteRequest60.index();
        java.lang.String str62 = deleteRequest60.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        boolean boolean24 = deleteRequest12.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.refresh(false);
        deleteRequest28.seqNo(100L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest16.toString();
        org.elasticsearch.index.shard.IndexShard indexShard32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete33 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest16, indexShard32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str31, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest21.shardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.readFrom(streamInput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNull(shardId53);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str18 = shardFailure17.indexUUID;
        java.lang.String str19 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str18, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str19, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        long long2 = deleteRequest0.seqNo();
        java.lang.String str3 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest4.consistencyLevel(writeConsistencyLevel14);
        long long16 = deleteRequest4.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest4.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest0.timeout(timeValue22);
        java.lang.String str26 = deleteRequest25.getDescription();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest26.createTask((long) ' ', "hi!", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest26.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest59.createTask(1L, "", "", taskId66);
        deleteRequest50.setParentTask(taskId66);
        deleteRequest44.setParentTask(taskId66);
        org.elasticsearch.action.support.IndicesOptions indicesOptions70 = deleteRequest44.indicesOptions();
        org.elasticsearch.index.VersionType versionType71 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest12.versionType(versionType71);
        deleteRequest72.primaryTerm((long) (short) -1);
        java.lang.String str75 = deleteRequest72.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = deleteRequest72.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(indicesOptions70);
        org.junit.Assert.assertNotNull(versionType71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(actionRequestValidationException76);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        deleteRequest5.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        java.lang.String str17 = deleteRequest16.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}][][hi!]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest31.createTask(1L, "", "", taskId38);
        deleteRequest22.setParentTask(taskId38);
        deleteRequest17.setParentTask(taskId38);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest16.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest43.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.id("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        java.lang.String str49 = deleteRequest43.parent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        java.lang.String str20 = deleteRequest18.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest18.timeout();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue21);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest17.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest17.versionType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.setShardId(shardId24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.consistencyLevel(writeConsistencyLevel26);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][null][null]}");
        java.lang.String str22 = shardFailure21.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        java.lang.String str9 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.parent("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest6.versionType(versionType22);
        org.elasticsearch.index.shard.IndexShard indexShard24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete25 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest6, indexShard24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][][hi!]}" + "'", str9, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        boolean boolean8 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("");
        java.lang.String str11 = deleteRequest10.index();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}" + "'", str6, "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str11, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        long long33 = deleteRequest3.version();
        long long34 = deleteRequest3.version();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.setShardId(shardId35);
        java.lang.String str37 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.setShardId(shardId38);
        java.lang.Class<?> wildcardClass40 = deleteRequest39.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.versionType(versionType9);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.timeout("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][hi!][delete {[hi!][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(versionType11);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        deleteRequest8.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.refresh(true);
        java.lang.String str14 = deleteRequest8.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest10.remoteAddress();
        java.lang.String str13 = deleteRequest10.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][]}" + "'", str13, "delete {[][][]}");
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.version((-1L));
        java.lang.String str34 = deleteRequest29.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.id("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        java.lang.String str57 = deleteRequest55.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest49.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest23.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest64.remoteAddress(transportAddress65);
        deleteRequest64.seqNo(0L);
        boolean boolean69 = deleteRequest64.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress74 = null;
        deleteRequest73.remoteAddress(transportAddress74);
        boolean boolean76 = deleteRequest73.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest73.version(1L);
        deleteRequest78.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest78.index("delete {[hi!][][hi!]}");
        long long83 = deleteRequest82.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest82.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest82.refresh(true);
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest82.getParentTask();
        deleteRequest64.setParentTask(taskId88);
        deleteRequest23.setParentTask(taskId88);
        deleteRequest23.seqNo((long) (short) 1);
        org.elasticsearch.common.unit.TimeValue timeValue93 = deleteRequest23.timeout();
        org.elasticsearch.index.shard.ShardId shardId94 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest23.setShardId(shardId94);
        long long96 = deleteRequest23.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest23.id("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str57, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 1L + "'", long83 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(timeValue93);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + (-3L) + "'", long96 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}", "delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][][hi!]}][][null]}");
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.routing();
        java.lang.String str7 = deleteRequest3.id();
        java.lang.String str8 = deleteRequest3.parent();
        long long9 = deleteRequest3.version();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.refresh(false);
        boolean boolean37 = deleteRequest33.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest13.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.shard.IndexShard indexShard40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete41 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest13, indexShard40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest27.createTask(1L, "", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        java.lang.String str43 = deleteRequest39.id();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        long long57 = deleteRequest55.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest58.validate();
        deleteRequest58.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId74 = deleteRequest73.shardId();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task76 = deleteRequest66.createTask((long) ' ', "hi!", "", taskId75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest82.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest66.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest58.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest55.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest49.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest93.id("");
        org.elasticsearch.index.VersionType versionType96 = deleteRequest93.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest89.versionType(versionType96);
        org.elasticsearch.tasks.TaskId taskId98 = deleteRequest97.getParentTask();
        org.elasticsearch.tasks.Task task99 = deleteRequest3.createTask((long) 100, "delete {[delete {[null][null][null]}][][hi!]}", "delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}", taskId98);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(versionType96);
        org.junit.Assert.assertNotNull(deleteRequest97);
        org.junit.Assert.assertNotNull(taskId98);
        org.junit.Assert.assertNotNull(task99);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][null][null]}");
        java.lang.String str23 = deleteRequest22.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.setShardId(shardId29);
        deleteRequest0.seqNo(0L);
        java.lang.String str33 = deleteRequest0.getDescription();
        deleteRequest0.setParentTask("delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}", (long) (byte) 10);
        deleteRequest0.seqNo(100L);
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[null][null][null]}" + "'", str33, "delete {[null][null][null]}");
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String str18 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.id("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.routing("delete {[delete {[][][]}][null][null]}");
        boolean boolean23 = deleteRequest17.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable12, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str15 = shardFailure14.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure14.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str15, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertNull(shardRouting16);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest3.remoteAddress(transportAddress11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.type("");
        java.lang.String str24 = deleteRequest20.type();
        boolean boolean25 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.type("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel28);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.versionType(versionType37);
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest30.remoteAddress(transportAddress41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest49.remoteAddress(transportAddress50);
        boolean boolean52 = deleteRequest49.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest56.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.refresh(true);
        org.elasticsearch.index.VersionType versionType61 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest30.versionType(versionType61);
        java.lang.String str63 = deleteRequest30.parent();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest30.getParentTask();
        deleteRequest3.setParentTask(taskId64);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(actionRequestValidationException57);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(taskId64);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String str16 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.routing("");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest20, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        long long37 = deleteRequest35.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.refresh(false);
        org.elasticsearch.index.shard.IndexShard indexShard41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete42 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest35, indexShard41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        deleteRequest0.primaryTerm((long) (short) 0);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        deleteRequest11.primaryTerm((long) 0);
        long long17 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.timeout(timeValue20);
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        java.lang.String str12 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        deleteRequest22.primaryTerm((long) 1);
        java.lang.String str25 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str32 = deleteRequest29.routing();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.versionType(versionType33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest34.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}");
        java.lang.String str38 = deleteRequest34.id();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}" + "'", str38, "delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}");
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        deleteRequest18.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.index("delete {[hi!][][hi!]}");
        java.lang.String str23 = deleteRequest22.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.id("");
        long long26 = deleteRequest22.primaryTerm();
        boolean boolean27 = deleteRequest22.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest37.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest33.createTask((-1L), "", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId40);
        deleteRequest9.setParentTask(taskId40);
        boolean boolean43 = deleteRequest9.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 97L + "'", long26 == 97L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        deleteRequest23.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        long long33 = deleteRequest32.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        java.lang.String str41 = deleteRequest37.id();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest45.remoteAddress(transportAddress48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest23.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        deleteRequest38.primaryTerm((long) ' ');
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest37.type("");
        java.lang.String[] strArray46 = deleteRequest45.indices();
        deleteRequest45.primaryTerm(0L);
        java.lang.String str49 = deleteRequest45.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest45.id("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        boolean boolean52 = deleteRequest45.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        java.lang.String[] strArray12 = deleteRequest10.indices();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest10.timeout();
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(timeValue13);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        java.lang.Class<?> wildcardClass11 = deleteRequest10.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        deleteRequest64.primaryTerm((long) 1);
        java.lang.String str67 = deleteRequest64.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str74 = deleteRequest71.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId79 = deleteRequest78.shardId();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest78.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest78.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue83 = deleteRequest82.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest71.timeout(timeValue83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest57.timeout(timeValue83);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(shardId79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(timeValue83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[null][][null]}");
        java.lang.Throwable throwable18 = shardFailure17.cause;
        java.lang.Throwable throwable19 = shardFailure17.cause;
        java.lang.Class<?> wildcardClass20 = throwable19.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.primaryTerm();
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest5.consistencyLevel();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest5.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest20.createTask((long) ' ', "hi!", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest20.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest16.consistencyLevel(writeConsistencyLevel37);
        java.lang.String str40 = deleteRequest16.parent();
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        java.lang.String str50 = deleteRequest46.id();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str54 = deleteRequest53.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest62.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest56.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest3.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId69 = deleteRequest68.shardId();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[hi!][][hi!]}" + "'", str54, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(shardId69);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        long long19 = deleteRequest17.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest25.getParentTask();
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest5.versionType(versionType31);
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        java.lang.String str35 = deleteRequest33.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.setShardId(shardId25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        deleteRequest26.primaryTerm(1L);
        org.elasticsearch.index.VersionType versionType30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.versionType(versionType30);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest26.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest37.remoteAddress(transportAddress38);
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest44.validate();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.setShardId(shardId46);
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = deleteRequest47.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest26.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.version((long) 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("");
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        long long16 = deleteRequest14.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest5.validate();
        long long12 = deleteRequest5.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest10.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.timeout("delete {[hi!][][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest0.remoteAddress(transportAddress9);
        deleteRequest0.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}", 100L);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.routing("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest60.index("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.version(1L);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest27.versionType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest27.setShardId(shardId34);
        java.lang.String str36 = deleteRequest35.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(1L);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest40.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest40.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest40.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest35.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId73 = deleteRequest72.shardId();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest72.getParentTask();
        org.elasticsearch.tasks.Task task75 = deleteRequest65.createTask((long) ' ', "hi!", "", taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel82 = deleteRequest81.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest65.consistencyLevel(writeConsistencyLevel82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest83.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest60.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest35.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest21.consistencyLevel(writeConsistencyLevel90);
        java.lang.String str95 = deleteRequest94.routing();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput96 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest94.writeTo(streamOutput96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel82 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel82.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][]}", "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.String str8 = shardFailure4.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting9);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        java.lang.String str16 = shardFailure15.indexUUID;
        java.lang.Throwable throwable17 = shardFailure15.cause;
        java.lang.Throwable throwable18 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][hi!][hi!]}", throwable18, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", throwable18, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", throwable18, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][][hi!]}" + "'", str16, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        boolean boolean7 = deleteRequest5.refresh();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) (short) 100);
        java.lang.String str12 = deleteRequest11.toString();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][null][null]}" + "'", str12, "delete {[hi!][null][null]}");
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest13.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest13.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(indicesOptions15);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}]}" + "'", str4, "delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}]}");
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.routing("");
        deleteRequest5.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest5.validate();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.setShardId(shardId18);
        long long20 = deleteRequest5.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        long long11 = deleteRequest8.version();
        long long12 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        java.lang.String str22 = deleteRequest20.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setShardId(shardId31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest38.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest38.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest38.parent("delete {[hi!][][hi!]}");
        long long49 = deleteRequest48.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str56 = deleteRequest55.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue57 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest48.timeout(timeValue57);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest59.validate();
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest20.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest8.timeout(timeValue61);
        java.lang.String str64 = deleteRequest63.id();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str56, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (short) 10);
        boolean boolean16 = deleteRequest12.refresh();
        deleteRequest12.setParentTask("delete {[delete {[hi!][null][null]}][][hi!]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.version(0L);
        boolean boolean22 = deleteRequest12.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        long long22 = deleteRequest11.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest11.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = deleteRequest39.remoteAddress();
        long long45 = deleteRequest39.primaryTerm();
        long long46 = deleteRequest39.version();
        java.lang.String str47 = deleteRequest39.type();
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest24.createTask((long) (byte) 100, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][hi!]}", taskId48);
        deleteRequest5.setParentTask(taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.type("hi!");
        deleteRequest59.primaryTerm((long) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId62 = deleteRequest59.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest5.timeout(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        deleteRequest11.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.version((-3L));
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest18.setShardId(shardId25);
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version(97L);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        deleteRequest39.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        deleteRequest39.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest54.shardId();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest47.createTask((long) ' ', "hi!", "", taskId56);
        long long58 = deleteRequest47.primaryTerm();
        java.lang.String str59 = deleteRequest47.index();
        org.elasticsearch.index.VersionType versionType60 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest39.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest33.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest0.versionType(versionType60);
        java.lang.Class<?> wildcardClass64 = deleteRequest63.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        long long37 = deleteRequest35.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.refresh(false);
        java.lang.Class<?> wildcardClass41 = deleteRequest35.getClass();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest10.validate();
        java.lang.String str15 = deleteRequest10.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(actionRequestValidationException14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        java.lang.String str2 = deleteRequest0.toString();
        java.lang.String str3 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest9.versionType();
        java.lang.String[] strArray16 = deleteRequest9.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.version((-1L));
        java.lang.String str27 = deleteRequest22.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest22.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest9.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest5.consistencyLevel(writeConsistencyLevel38);
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.refresh(false);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[null][null][null]}" + "'", str2, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        java.lang.String str9 = deleteRequest6.getDescription();
        java.lang.String str10 = deleteRequest6.parent();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest6.versionType();
        deleteRequest6.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        deleteRequest22.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.index("delete {[hi!][][hi!]}");
        long long27 = deleteRequest26.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.refresh(true);
        java.lang.String str32 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.routing("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest34.remoteAddress(transportAddress35);
        java.lang.String[] strArray37 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str42 = deleteRequest39.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = deleteRequest39.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.parent("");
        deleteRequest39.setParentTask("delete {[delete {[hi!][][hi!]}][null][null]}", (long) (-1));
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest39.setShardId(shardId49);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId51);
        deleteRequest6.setParentTask(taskId51);
        java.lang.String[] strArray54 = deleteRequest6.indices();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str9, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(actionRequestValidationException43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(strArray54);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version((long) ' ');
        java.lang.String str29 = deleteRequest23.type();
        java.lang.Class<?> wildcardClass30 = deleteRequest23.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        boolean boolean31 = deleteRequest28.getShouldPersistResult();
        boolean boolean32 = deleteRequest28.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.routing("");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest59.createTask(1L, "", "", taskId66);
        deleteRequest50.setParentTask(taskId66);
        org.elasticsearch.tasks.Task task69 = deleteRequest43.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest43.timeout(timeValue74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest28.timeout(timeValue74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue79 = deleteRequest78.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest3.timeout(timeValue79);
        java.lang.String str81 = deleteRequest3.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        deleteRequest5.primaryTerm((long) (byte) 1);
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        java.lang.String str4 = deleteRequest3.routing();
        java.lang.String str5 = deleteRequest3.id();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}" + "'", str5, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        deleteRequest8.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        deleteRequest20.seqNo(0L);
        boolean boolean25 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        boolean boolean32 = deleteRequest29.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version(1L);
        deleteRequest34.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.index("delete {[hi!][][hi!]}");
        long long39 = deleteRequest38.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.refresh(true);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest38.getParentTask();
        deleteRequest20.setParentTask(taskId44);
        org.elasticsearch.tasks.Task task46 = deleteRequest13.createTask((long) 100, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", "hi!", taskId44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = deleteRequest47.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.type("");
        java.lang.String str51 = deleteRequest47.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest47.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest13.timeout(timeValue54);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest13.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[null][][null]}" + "'", str51, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        long long13 = deleteRequest11.primaryTerm();
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest21.refresh(true);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest11.createTask((long) '#', "", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId34);
        java.lang.String str36 = deleteRequest11.toString();
        deleteRequest11.primaryTerm((long) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        deleteRequest37.primaryTerm((long) 1);
        java.lang.String str40 = deleteRequest37.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest37.remoteAddress(transportAddress41);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest17.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        boolean boolean58 = deleteRequest55.getShouldPersistResult();
        java.lang.String str59 = deleteRequest55.id();
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest55.timeout();
        org.elasticsearch.index.VersionType versionType61 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest50.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest50.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException66 = deleteRequest65.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest74.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest65.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest64.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest17.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest17.parent("delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(actionRequestValidationException66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        java.lang.String[] strArray15 = deleteRequest5.indices();
        boolean boolean16 = deleteRequest5.refresh();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest34.createTask((long) '#', "hi!", "", taskId53);
        deleteRequest30.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest5.createTask((long) (short) 100, "delete {[null][null][null]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.id("delete {[null][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest63.remoteAddress(transportAddress64);
        boolean boolean66 = deleteRequest63.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = deleteRequest70.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest70.refresh(true);
        org.elasticsearch.index.VersionType versionType75 = deleteRequest70.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest58.versionType(versionType75);
        org.elasticsearch.common.transport.TransportAddress transportAddress77 = null;
        deleteRequest58.remoteAddress(transportAddress77);
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][][hi!]}" + "'", str35, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(actionRequestValidationException71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(versionType75);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str13 = deleteRequest12.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        java.lang.String str22 = deleteRequest20.parent();
        deleteRequest20.primaryTerm((-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str22, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("");
        deleteRequest33.primaryTerm((long) 1);
        java.lang.String str36 = deleteRequest33.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest33.routing("");
        deleteRequest33.primaryTerm((long) (byte) 1);
        deleteRequest33.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) 1);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest33.setShardId(shardId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest53.createTask((long) ' ', "hi!", "", taskId62);
        deleteRequest49.setParentTask(taskId62);
        deleteRequest23.setParentTask(taskId62);
        org.elasticsearch.tasks.Task task66 = deleteRequest18.createTask((-3L), "delete {[null][null][null]}", "delete {[hi!][hi!][hi!]}", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException68 = deleteRequest67.validate();
        deleteRequest67.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = null;
        deleteRequest67.remoteAddress(transportAddress72);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest67.routing("");
        org.elasticsearch.index.VersionType versionType77 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest18.versionType(versionType77);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest18.setShardId(shardId79);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest18.timeout("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(actionRequestValidationException68);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(versionType77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(deleteRequest80);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", throwable9, "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        java.lang.String str12 = shardFailure11.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][null]}" + "'", str8, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}" + "'", str12, "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.routing("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest6.remoteAddress(transportAddress9);
        deleteRequest6.primaryTerm(100L);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        java.lang.String str17 = deleteRequest15.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest5.index();
        long long11 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.routing("delete {[hi!][delete {[null][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.String str11 = shardFailure9.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str11, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray63 = deleteRequest62.indices();
        org.elasticsearch.index.VersionType versionType64 = deleteRequest62.versionType();
        java.lang.Class<?> wildcardClass65 = versionType64.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest37.type("");
        java.lang.String[] strArray46 = deleteRequest45.indices();
        deleteRequest45.primaryTerm(0L);
        java.lang.String str49 = deleteRequest45.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.type();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        java.lang.String str9 = deleteRequest3.routing();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest5.consistencyLevel();
        deleteRequest5.setParentTask("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[null][null][null]}][hi!]}", (long) '4');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        long long35 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest20.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest37.remoteAddress(transportAddress39);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        java.lang.String str8 = deleteRequest0.toString();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][][hi!]}" + "'", str4, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        boolean boolean51 = deleteRequest50.refresh();
        org.elasticsearch.index.VersionType versionType52 = deleteRequest50.versionType();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(versionType52);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        java.lang.String str7 = deleteRequest5.getDescription();
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version(1L);
        java.lang.String str12 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.version((long) 100);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest12.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest12.consistencyLevel();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest12.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(actionRequestValidationException20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType22);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        long long24 = deleteRequest13.primaryTerm();
        java.lang.String str25 = deleteRequest13.index();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType26);
        long long28 = deleteRequest5.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest5.remoteAddress(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        deleteRequest7.setParentTask("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        long long19 = deleteRequest17.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest17.validate();
        java.lang.String str21 = deleteRequest17.index();
        java.lang.String[] strArray22 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest7.timeout(timeValue23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        deleteRequest3.primaryTerm(97L);
        deleteRequest3.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (long) 0);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.id("");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][hi!]}][][hi!]}", throwable12, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][hi!]}", throwable12, "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.String str17 = shardFailure16.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str17, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("hi!");
        deleteRequest15.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task38 = deleteRequest28.createTask((long) ' ', "hi!", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest28.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest46.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest23.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest15.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest3.createTask((-1L), "delete {[null][hi!][null]}", "delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}", taskId57);
        boolean boolean59 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        java.lang.String str7 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.setShardId(shardId27);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(97L);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest14.versionType(versionType34);
        java.lang.String str36 = deleteRequest35.parent();
        java.lang.String[] strArray37 = deleteRequest35.indices();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest35.getParentTask();
        deleteRequest6.setParentTask(taskId38);
        boolean boolean40 = deleteRequest6.refresh();
        java.lang.String str41 = deleteRequest6.id();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str41, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.routing("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        deleteRequest13.primaryTerm((long) (short) 1);
        java.lang.Class<?> wildcardClass16 = deleteRequest13.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest21.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest21.consistencyLevel(writeConsistencyLevel56);
        long long58 = deleteRequest21.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest21.routing("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest21.timeout("delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version((long) 'a');
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest15.indicesOptions();
        boolean boolean20 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest15, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        long long4 = deleteRequest2.seqNo();
        java.lang.String str5 = deleteRequest2.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue24 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest6.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest2.timeout(timeValue24);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest5.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.primaryTerm(10L);
        java.lang.String str5 = deleteRequest2.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException6, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.Throwable throwable9 = shardFailure8.cause;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.timeout("delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        java.lang.String str17 = deleteRequest11.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        boolean boolean7 = deleteRequest5.refresh();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest5.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        deleteRequest22.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.index("delete {[hi!][][hi!]}");
        java.lang.String str27 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("");
        long long30 = deleteRequest26.primaryTerm();
        boolean boolean31 = deleteRequest26.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = deleteRequest41.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest41.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest37.createTask((-1L), "", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId44);
        boolean boolean46 = deleteRequest37.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest37.parent("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.routing("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.setShardId(shardId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest48.parent("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.id("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        deleteRequest5.setParentTask(taskId57);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 97L + "'", long30 == 97L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNull(transportAddress43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        long long13 = deleteRequest11.primaryTerm();
        java.lang.String str14 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest21.refresh(true);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest11.createTask((long) '#', "", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId34);
        java.lang.String str36 = deleteRequest11.toString();
        java.lang.String str37 = deleteRequest11.type();
        long long38 = deleteRequest11.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        deleteRequest15.seqNo((long) '#');
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.setShardId(shardId19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("");
        long long39 = deleteRequest38.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        java.lang.String str47 = deleteRequest43.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest49.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId62);
        org.elasticsearch.tasks.Task task64 = deleteRequest27.createTask((long) (short) 100, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId62);
        deleteRequest20.setParentTask(taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest20.id("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest67.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNull(actionRequestValidationException69);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        long long35 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest20.refresh(true);
        deleteRequest37.primaryTerm(0L);
        java.lang.String str40 = deleteRequest37.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest37.remoteAddress(transportAddress43);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str40, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest51.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        deleteRequest60.remoteAddress(transportAddress61);
        boolean boolean63 = deleteRequest60.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.version(1L);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest60.versionType();
        java.lang.String[] strArray67 = deleteRequest60.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest60.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId74 = deleteRequest73.shardId();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest73.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest73.version((-1L));
        java.lang.String str78 = deleteRequest73.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException80 = deleteRequest79.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest79.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest86.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest88.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest79.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest73.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest60.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest56.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest21.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest94.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue97 = deleteRequest96.timeout();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(actionRequestValidationException80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(timeValue97);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest9.shardId();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        deleteRequest12.seqNo((-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.parent();
        long long6 = deleteRequest0.primaryTerm();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.String str10 = deleteRequest9.getDescription();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.setShardId(shardId11);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}" + "'", str10, "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest45.createTask((long) ' ', "hi!", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest38.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest26.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray72 = deleteRequest71.indices();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest71.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.versionType(versionType73);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException75 = deleteRequest74.validate();
        java.lang.String str76 = deleteRequest74.id();
        java.lang.String[] strArray77 = deleteRequest74.indices();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(actionRequestValidationException75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        java.lang.String str37 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.refresh(false);
        boolean boolean40 = deleteRequest36.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest21.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str43 = deleteRequest42.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest47.remoteAddress(transportAddress48);
        boolean boolean50 = deleteRequest47.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest47.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = deleteRequest54.validate();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.setShardId(shardId56);
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        long long59 = deleteRequest57.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest63.remoteAddress(transportAddress64);
        boolean boolean66 = deleteRequest63.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.version(1L);
        deleteRequest68.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest68.index("delete {[hi!][][hi!]}");
        long long73 = deleteRequest72.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress74 = null;
        deleteRequest72.remoteAddress(transportAddress74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest72.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions78 = deleteRequest72.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest72.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.id("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest57.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest42.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest42.id("delete {[null][hi!][null]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(actionRequestValidationException55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(indicesOptions78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(deleteRequest88);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.routing("delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.parent("delete {[delete {[hi!][][hi!]}][][]}");
        java.lang.String str20 = deleteRequest3.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        java.lang.String str36 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest40.createTask((long) ' ', "hi!", "", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest40.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest33.consistencyLevel(writeConsistencyLevel57);
        java.lang.String str60 = deleteRequest33.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest28.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest3.consistencyLevel(writeConsistencyLevel61);
        long long64 = deleteRequest63.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][][hi!]}" + "'", str36, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-3L) + "'", long64 == (-3L));
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions42 = deleteRequest41.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("hi!");
        deleteRequest46.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest50.remoteAddress(transportAddress51);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest37.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(indicesOptions42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        long long24 = deleteRequest13.primaryTerm();
        java.lang.String str25 = deleteRequest13.index();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        long long42 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        deleteRequest46.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest46.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest31.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest27.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest27.setShardId(shardId66);
        long long68 = deleteRequest27.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version(10L);
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest7.createTask(0L, "delete {[hi!][null][null]}", "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.routing("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        java.lang.String str24 = deleteRequest23.routing();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}" + "'", str24, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        long long2 = deleteRequest1.seqNo();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        boolean boolean93 = deleteRequest89.refresh();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = deleteRequest1.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.parent("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        long long5 = deleteRequest1.primaryTerm();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel2 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel2.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        long long18 = deleteRequest17.primaryTerm();
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.readFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.type("delete {[null][][null]}");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.setShardId(shardId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.parent("delete {[][][hi!]}");
        boolean boolean42 = deleteRequest41.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest41.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(timeValue43);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        java.lang.String str16 = shardFailure13.indexUUID;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure13.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][][hi!]}" + "'", str16, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting18);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.Throwable throwable18 = shardFailure17.cause;
        java.lang.String str19 = shardFailure17.reason;
        java.lang.String str20 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][delete {[hi!][][hi!]}]}" + "'", str19, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][delete {[hi!][][hi!]}]}" + "'", str20, "delete {[hi!][][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest5.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest12.parent();
        java.lang.String str37 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest12.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        boolean boolean40 = deleteRequest12.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.String str12 = shardFailure9.reason;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.String str14 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        deleteRequest7.setParentTask("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        long long19 = deleteRequest17.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest17.validate();
        java.lang.String str21 = deleteRequest17.index();
        java.lang.String[] strArray22 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest7.timeout(timeValue23);
        java.lang.String str25 = deleteRequest7.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.index("");
        boolean boolean27 = deleteRequest26.refresh();
        long long28 = deleteRequest26.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest17.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.versionType(versionType37);
        deleteRequest40.seqNo((long) (byte) 0);
        java.lang.String str43 = deleteRequest40.type();
        long long44 = deleteRequest40.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest40.timeout();
        java.lang.String str46 = deleteRequest40.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        deleteRequest3.seqNo((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(transportAddress11);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.primaryTerm();
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest5.consistencyLevel();
        long long10 = deleteRequest5.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        boolean boolean48 = deleteRequest46.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setShardId(shardId12);
        java.lang.String str14 = deleteRequest13.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = deleteRequest18.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) (byte) -1, "", "hi!", taskId21);
        deleteRequest13.seqNo((long) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][][hi!]}][null][null]}", deleteRequest13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNull(transportAddress20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest5.version((long) (byte) 100);
        java.lang.String str41 = deleteRequest5.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        deleteRequest5.remoteAddress(transportAddress42);
        org.elasticsearch.index.VersionType versionType44 = deleteRequest5.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest5.routing("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest11.remoteAddress(transportAddress13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        deleteRequest15.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest23.createTask((long) ' ', "hi!", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest23.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest15.consistencyLevel(writeConsistencyLevel40);
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("");
        deleteRequest49.primaryTerm((long) 1);
        java.lang.String str52 = deleteRequest49.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest49.remoteAddress(transportAddress53);
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest42.timeout(timeValue55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest11.versionType(versionType57);
        org.elasticsearch.action.support.IndicesOptions indicesOptions59 = deleteRequest11.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest11.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest11.refresh(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(indicesOptions59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[null][null][null]}][hi!]}", "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}", "delete {[hi!][][delete {[hi!][][hi!]}]}");
        deleteRequest3.setParentTask("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}", (long) (short) 10);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String[] strArray18 = deleteRequest12.indices();
        java.lang.String str19 = deleteRequest12.type();
        long long20 = deleteRequest12.seqNo();
        long long21 = deleteRequest12.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest12.indicesOptions();
        java.lang.String[] strArray23 = deleteRequest12.indices();
        java.lang.String str24 = deleteRequest12.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str24, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        boolean boolean17 = deleteRequest14.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("delete {[][null][null]}");
        java.lang.String str20 = deleteRequest19.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest19.remoteAddress(transportAddress21);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest0.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.consistencyLevel(writeConsistencyLevel46);
        long long50 = deleteRequest49.version();
        boolean boolean51 = deleteRequest49.getShouldPersistResult();
        java.lang.String str52 = deleteRequest49.routing();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-3L) + "'", long50 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest22.readFrom(streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        long long16 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        deleteRequest17.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest32.shardId();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest25.createTask((long) ' ', "hi!", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest25.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest17.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest14.consistencyLevel(writeConsistencyLevel42);
        boolean boolean46 = deleteRequest45.refresh();
        java.lang.String[] strArray47 = deleteRequest45.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest48.validate();
        deleteRequest48.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest48.remoteAddress(transportAddress53);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest3.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest3.index("delete {[hi!][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.consistencyLevel(writeConsistencyLevel12);
        long long14 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest2.timeout(timeValue20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest2.validate();
        deleteRequest2.seqNo((long) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        java.lang.String str13 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        java.lang.String str21 = deleteRequest17.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.version((-1L));
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest28.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str43 = deleteRequest42.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("");
        org.elasticsearch.index.VersionType versionType50 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest42.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = null;
        deleteRequest58.remoteAddress(transportAddress59);
        boolean boolean61 = deleteRequest58.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.version(1L);
        deleteRequest63.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str72 = deleteRequest71.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId87 = deleteRequest86.shardId();
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest86.getParentTask();
        org.elasticsearch.tasks.Task task89 = deleteRequest79.createTask((long) ' ', "hi!", "", taskId88);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest79.getParentTask();
        org.elasticsearch.tasks.Task task91 = deleteRequest71.createTask((long) '#', "hi!", "", taskId90);
        deleteRequest67.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task93 = deleteRequest42.createTask((long) (short) 100, "delete {[null][null][null]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId90);
        deleteRequest36.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task95 = deleteRequest17.createTask((long) 1, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}", "delete {[delete {[hi!][][hi!]}][][null]}", taskId90);
        deleteRequest10.setParentTask(taskId90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest10.id("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        long long99 = deleteRequest98.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str43, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[hi!][][hi!]}" + "'", str72, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task91);
        org.junit.Assert.assertNotNull(task93);
        org.junit.Assert.assertNotNull(task95);
        org.junit.Assert.assertNotNull(deleteRequest98);
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 1L + "'", long99 == 1L);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        java.lang.String str51 = deleteRequest50.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.routing("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest5.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "", taskId50);
        deleteRequest5.seqNo((long) 1);
        java.lang.String str54 = deleteRequest5.parent();
        java.lang.String str55 = deleteRequest5.routing();
        java.lang.String str56 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.routing("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[hi!][][hi!]}" + "'", str56, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest38.remoteAddress();
        long long40 = deleteRequest38.seqNo();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(transportAddress39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout(timeValue5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.versionType(versionType28);
        java.lang.String str32 = deleteRequest3.parent();
        deleteRequest3.primaryTerm((long) (byte) 100);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.routing("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        deleteRequest13.primaryTerm((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.timeout("delete {[hi!][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.setShardId(shardId27);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(97L);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.setShardId(shardId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        java.lang.String str56 = deleteRequest52.id();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest52.timeout();
        org.elasticsearch.index.VersionType versionType58 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest47.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest62.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest71.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest62.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest61.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest42.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest36.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest15.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.common.transport.TransportAddress transportAddress78 = null;
        deleteRequest77.remoteAddress(transportAddress78);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        deleteRequest3.seqNo((long) (short) 100);
        java.lang.String str7 = deleteRequest3.getDescription();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str7, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        java.lang.String str22 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest35.createTask(1L, "", "", taskId42);
        deleteRequest26.setParentTask(taskId42);
        deleteRequest18.setParentTask(taskId42);
        org.elasticsearch.tasks.Task task46 = deleteRequest11.createTask((long) 0, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "hi!", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        deleteRequest58.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.index.VersionType versionType69 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest62.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = deleteRequest71.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = deleteRequest71.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId75);
        org.elasticsearch.tasks.Task task77 = deleteRequest11.createTask((long) (short) -1, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", "hi!", taskId75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest11.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest11.parent("delete {[delete {[hi!][null][null]}][][hi!]}");
        boolean boolean82 = deleteRequest11.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertNull(transportAddress73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest7.shardId();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest7.shardId();
        java.lang.String str12 = deleteRequest7.id();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str12, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str16 = deleteRequest12.parent();
        java.lang.String str17 = deleteRequest12.routing();
        java.lang.String str18 = deleteRequest12.index();
        java.lang.String str19 = deleteRequest12.parent();
        deleteRequest12.primaryTerm(0L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(true);
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest34.indicesOptions();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", "delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest14.createTask((long) ' ', "hi!", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest14.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest7.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest7.id("");
        java.lang.String str36 = deleteRequest35.id();
        deleteRequest35.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.index("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType52 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest35.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest3.versionType(versionType52);
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue55);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(false);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.timeout("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][delete {[hi!][hi!][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest27.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest23.createTask((-1L), "", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId30);
        boolean boolean32 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest23.shardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(shardId33);
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.routing("");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest12.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest12.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNull(actionRequestValidationException23);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.parent();
        java.lang.String[] strArray29 = deleteRequest27.indices();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest27.getParentTask();
        deleteRequest27.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (short) 100);
        java.lang.String str34 = deleteRequest27.parent();
        java.lang.String str35 = deleteRequest27.getDescription();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str35, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        deleteRequest3.seqNo((long) (short) 100);
        long long7 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }
}

