import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.refresh(false);
        deleteRequest23.setParentTask("delete {[null][][null]}", (long) 100);
        java.lang.String str31 = deleteRequest23.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][hi!]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException7, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        java.lang.Throwable throwable15 = shardFailure13.cause;
        java.lang.String str16 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.id("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest21.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure9.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting13);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        java.lang.String str5 = deleteRequest0.type();
        long long6 = deleteRequest0.primaryTerm();
        java.lang.String str7 = deleteRequest0.routing();
        long long8 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        deleteRequest14.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest18.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.versionType(versionType25);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}", deleteRequest28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", "delete {[delete {[hi!][][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][][hi!]}]}", "delete {[null][delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}][null]}");
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.refresh(false);
        java.lang.String str29 = deleteRequest28.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest28.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest36.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.timeout(timeValue38);
        java.lang.String str41 = deleteRequest40.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][][hi!]}" + "'", str29, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        java.lang.String[] strArray17 = deleteRequest15.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest15.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException19);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        java.lang.String str18 = deleteRequest16.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", deleteRequest22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        long long8 = deleteRequest6.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][hi!]}][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest23.createTask((long) ' ', "hi!", "", taskId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest37.remoteAddress(transportAddress38);
        java.lang.String str40 = deleteRequest37.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest44.createTask((long) ' ', "hi!", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest44.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest37.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId68 = deleteRequest67.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        boolean boolean75 = deleteRequest72.getShouldPersistResult();
        java.lang.String str76 = deleteRequest72.id();
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest72.timeout();
        org.elasticsearch.index.VersionType versionType78 = deleteRequest72.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest67.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest63.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest23.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest14.versionType(versionType78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest10.versionType(versionType78);
        java.lang.String str84 = deleteRequest10.getDescription();
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][][hi!]}" + "'", str40, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(shardId68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(versionType78);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "delete {[hi!][][hi!]}" + "'", str84, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version(1L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure9.routing;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.setShardId(shardId15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        deleteRequest3.primaryTerm((long) (byte) -1);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.routing("");
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest3.validate();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(taskId31);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        java.lang.String str2 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        long long18 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.version(10L);
        deleteRequest26.primaryTerm((long) '4');
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest26.getParentTask();
        deleteRequest11.setParentTask(taskId31);
        org.elasticsearch.tasks.Task task33 = deleteRequest1.createTask((-3L), "", "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", taskId31);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[null][null][null]}" + "'", str2, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][][hi!]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException9, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable16 = shardFailure15.cause;
        java.lang.Throwable throwable17 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", throwable17, "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.String str20 = shardFailure19.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}" + "'", str20, "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest8.index();
        deleteRequest8.setParentTask("delete {[delete {[null][null][null]}][][hi!]}", (long) (short) 10);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        deleteRequest8.primaryTerm((long) '4');
        java.lang.String str11 = deleteRequest8.type();
        deleteRequest8.setParentTask("delete {[][null][null]}", (long) 10);
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        long long33 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        deleteRequest34.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest42.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest34.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest31.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest25.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.version(35L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = deleteRequest66.validate();
        deleteRequest66.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = deleteRequest66.remoteAddress();
        java.lang.String str72 = deleteRequest66.routing();
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest65.timeout(timeValue73);
        java.lang.String str75 = deleteRequest65.parent();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
        org.junit.Assert.assertNull(transportAddress71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.setShardId(shardId15);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest11.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        java.lang.String str15 = deleteRequest14.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.refresh(true);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest14.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][null]}" + "'", str15, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.primaryTerm();
        boolean boolean8 = deleteRequest5.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        boolean boolean18 = deleteRequest3.refresh();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest5.createTask((long) ' ', "hi!", "", taskId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest38.createTask(1L, "", "", taskId45);
        deleteRequest29.setParentTask(taskId45);
        deleteRequest23.setParentTask(taskId45);
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest23.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId50 = null;
        deleteRequest23.setParentTask(taskId50);
        deleteRequest23.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest23.refresh(true);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}", deleteRequest56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        long long13 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest17.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str44 = deleteRequest17.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest5.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.refresh(false);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest50.versionType();
        deleteRequest50.setParentTask("delete {[hi!][][]}", (long) (byte) 0);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest0.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest0.indicesOptions();
        java.lang.String str38 = deleteRequest0.toString();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][null][null]}" + "'", str38, "delete {[hi!][null][null]}");
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        long long2 = deleteRequest0.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest0.validate();
        java.lang.String str4 = deleteRequest0.index();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.parent("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str8 = deleteRequest7.parent();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest7.shardId();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest7.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}" + "'", str8, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str20 = deleteRequest12.getDescription();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest12.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][]}" + "'", str20, "delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][]}");
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(97L);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest26.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("");
        deleteRequest53.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        deleteRequest53.setParentTask(taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId69 = deleteRequest68.shardId();
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task71 = deleteRequest61.createTask((long) ' ', "hi!", "", taskId70);
        long long72 = deleteRequest61.primaryTerm();
        java.lang.String str73 = deleteRequest61.index();
        org.elasticsearch.index.VersionType versionType74 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest53.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest47.versionType(versionType74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest19.versionType(versionType74);
        java.lang.String[] strArray78 = deleteRequest77.indices();
        java.lang.String str79 = deleteRequest77.parent();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput80 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest77.writeTo(streamOutput80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        long long33 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        deleteRequest34.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest42.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest34.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest31.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest25.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("");
        org.elasticsearch.index.VersionType versionType72 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest65.versionType(versionType72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel76 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest65.consistencyLevel(writeConsistencyLevel76);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel76 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel76.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.index.shard.IndexShard indexShard25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete26 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.type("delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest14, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest29.primaryTerm(1L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.setShardId(shardId14);
        deleteRequest15.seqNo((long) (short) 1);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.routing();
        long long13 = deleteRequest11.primaryTerm();
        java.lang.String str14 = deleteRequest11.id();
        java.lang.String str15 = deleteRequest11.getDescription();
        java.lang.String str16 = deleteRequest11.index();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        java.lang.String str12 = deleteRequest7.toString();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest7.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest7.timeout();
        java.lang.String str15 = deleteRequest7.type();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.routing("");
        deleteRequest5.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest5.validate();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.setShardId(shardId18);
        boolean boolean20 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest20.consistencyLevel();
        boolean boolean39 = deleteRequest20.getShouldPersistResult();
        java.lang.String str40 = deleteRequest20.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest12.createTask(1L, "", "", taskId19);
        deleteRequest3.setParentTask(taskId19);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str25 = deleteRequest3.id();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str25, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        long long11 = deleteRequest8.primaryTerm();
        java.lang.String str12 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.version((long) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.timeout("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        java.lang.String str13 = deleteRequest10.routing();
        long long14 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        deleteRequest25.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.index("delete {[hi!][][hi!]}");
        long long30 = deleteRequest29.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest29.remoteAddress(transportAddress31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.parent("hi!");
        java.lang.String str35 = deleteRequest34.parent();
        org.elasticsearch.index.VersionType versionType36 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest16.versionType(versionType36);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest3.validate();
        java.lang.String str8 = deleteRequest3.type();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str8, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 10);
        boolean boolean10 = deleteRequest9.refresh();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest3.indicesOptions();
        java.lang.String str15 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        java.lang.String str26 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest37.shardId();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest30.createTask((long) ' ', "hi!", "", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest30.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest23.consistencyLevel(writeConsistencyLevel47);
        java.lang.String str50 = deleteRequest23.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions51 = deleteRequest23.indicesOptions();
        long long52 = deleteRequest23.seqNo();
        long long53 = deleteRequest23.version();
        java.lang.String str54 = deleteRequest23.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("");
        boolean boolean66 = deleteRequest63.getShouldPersistResult();
        java.lang.String str67 = deleteRequest63.id();
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest63.timeout();
        org.elasticsearch.index.VersionType versionType69 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest58.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest58.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = deleteRequest73.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest80.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest82.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest73.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest72.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.tasks.TaskId taskId86 = deleteRequest85.getParentTask();
        deleteRequest23.setParentTask(taskId86);
        org.elasticsearch.tasks.Task task88 = deleteRequest14.createTask((long) (byte) -1, "hi!", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", taskId86);
        org.elasticsearch.index.shard.ShardId shardId89 = deleteRequest14.shardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput90 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][][hi!]}" + "'", str26, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-3L) + "'", long53 == (-3L));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(actionRequestValidationException74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(taskId86);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertNull(shardId89);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        java.lang.String str25 = deleteRequest21.id();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest21.timeout();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.routing("");
        long long40 = deleteRequest39.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest16.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest12.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.common.io.stream.StreamInput streamInput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest43.readFrom(streamInput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(actionRequestValidationException31);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[null][][null]}");
        java.lang.String str10 = deleteRequest9.parent();
        org.elasticsearch.common.unit.TimeValue timeValue11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.timeout(timeValue11);
        deleteRequest9.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (short) -1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest9.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][null][null]}", "delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.type("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest5.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest14.consistencyLevel();
        long long18 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        deleteRequest3.primaryTerm(0L);
        java.lang.String str18 = deleteRequest3.routing();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        long long7 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.routing("");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest20.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        java.lang.String str33 = deleteRequest30.index();
        java.lang.String str34 = deleteRequest30.toString();
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest30, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}" + "'", str34, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        long long16 = deleteRequest15.primaryTerm();
        deleteRequest15.seqNo((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest20.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        boolean boolean11 = deleteRequest7.refresh();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest7.validate();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest7.versionType();
        boolean boolean14 = deleteRequest7.refresh();
        java.lang.String[] strArray15 = deleteRequest7.indices();
        java.lang.String str16 = deleteRequest7.id();
        deleteRequest7.primaryTerm((long) 'a');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        java.lang.Throwable throwable13 = shardFailure9.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        boolean boolean28 = deleteRequest0.getShouldPersistResult();
        boolean boolean29 = deleteRequest0.refresh();
        boolean boolean30 = deleteRequest0.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        deleteRequest16.primaryTerm((long) 1);
        java.lang.String str19 = deleteRequest16.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest16.remoteAddress(transportAddress20);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        long long30 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.routing("");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest36.getParentTask();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest16.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.versionType(versionType42);
        java.lang.String[] strArray46 = deleteRequest45.indices();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        long long11 = deleteRequest10.primaryTerm();
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.versionType(versionType12);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version((long) (byte) -1);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest0.getParentTask();
        java.lang.String str5 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        java.lang.String str8 = deleteRequest7.routing();
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.versionType(versionType9);
        java.lang.String str11 = deleteRequest7.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][hi!][null]}" + "'", str11, "delete {[null][hi!][null]}");
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}", "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.refresh(false);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.timeout("delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure9.routing;
        java.lang.String str12 = shardFailure9.indexUUID;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.String str14 = shardFailure9.reason;
        java.lang.String str15 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        boolean boolean51 = deleteRequest50.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest50.timeout();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(timeValue52);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest20.versionType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.setShardId(shardId27);
        java.lang.String str29 = deleteRequest28.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version(97L);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.setShardId(shardId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        long long43 = deleteRequest42.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        java.lang.String str56 = deleteRequest52.id();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest52.timeout();
        org.elasticsearch.index.VersionType versionType58 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest47.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest62.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest71.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest62.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest61.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest42.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest36.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest15.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest15.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.parent("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        deleteRequest81.setParentTask("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}", (long) 1);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.timeout(timeValue11);
        deleteRequest5.primaryTerm((long) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][][hi!]}][]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        java.lang.String str16 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.index("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        deleteRequest3.primaryTerm((long) (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        java.lang.String str14 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.version(0L);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        boolean boolean27 = deleteRequest24.refresh();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest3.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) ' ');
        boolean boolean36 = deleteRequest3.refresh();
        java.lang.String str37 = deleteRequest3.index();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str16 = deleteRequest12.parent();
        java.lang.String str17 = deleteRequest12.routing();
        java.lang.String str18 = deleteRequest12.index();
        java.lang.String str19 = deleteRequest12.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}");
        long long22 = deleteRequest21.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.setShardId(shardId37);
        long long39 = deleteRequest29.seqNo();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.routing("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest8.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest8.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.index("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        java.lang.String str18 = deleteRequest17.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.readFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[][][hi!]}" + "'", str18, "delete {[][][hi!]}");
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest6.timeout();
        long long10 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        deleteRequest22.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.index("delete {[hi!][][hi!]}");
        java.lang.String str27 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest37.remoteAddress(transportAddress38);
        boolean boolean40 = deleteRequest37.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.version(1L);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest37.versionType();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest37.setShardId(shardId44);
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest29.createTask((-3L), "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", "delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}", taskId48);
        org.elasticsearch.tasks.Task task50 = deleteRequest6.createTask((long) 0, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}", taskId48);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        long long13 = deleteRequest12.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.String str12 = shardFailure11.reason;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        java.lang.Throwable throwable14 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][]}", throwable14, "delete {[][][]}");
        java.lang.String str17 = shardFailure16.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][]}" + "'", str17, "delete {[][][]}");
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(100L);
        java.lang.String str23 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.type("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.version(35L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.version(97L);
        long long30 = deleteRequest29.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest29.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 97L + "'", long30 == 97L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][null]}" + "'", str2, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions3);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.consistencyLevel(writeConsistencyLevel28);
        boolean boolean30 = deleteRequest29.getShouldPersistResult();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.getDescription();
        org.elasticsearch.common.io.stream.StreamInput streamInput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.readFrom(streamInput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        org.elasticsearch.index.VersionType versionType93 = deleteRequest89.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest89.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest89.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard indexShard98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete99 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest97, indexShard98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("");
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        deleteRequest25.primaryTerm((long) 1);
        java.lang.String str28 = deleteRequest25.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest25.remoteAddress(transportAddress29);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest13.timeout(timeValue31);
        long long33 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        deleteRequest39.primaryTerm((long) 1);
        java.lang.String str42 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str49 = deleteRequest46.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest53.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest46.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest13.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest8.timeout(timeValue58);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.setShardId(shardId62);
        deleteRequest63.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][][null]}" + "'", str9, "delete {[null][][null]}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.type("delete {[null][][null]}");
        java.lang.String str22 = deleteRequest21.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("");
        deleteRequest21.seqNo((long) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue3 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest16.createTask(1L, "", "", taskId23);
        deleteRequest7.setParentTask(taskId23);
        deleteRequest2.setParentTask(taskId23);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.setShardId(shardId29);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        boolean boolean38 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = deleteRequest42.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.index("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest52.remoteAddress(transportAddress53);
        boolean boolean55 = deleteRequest52.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest52.version(1L);
        deleteRequest57.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest57.index("delete {[hi!][][hi!]}");
        long long62 = deleteRequest61.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest61.remoteAddress(transportAddress63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest61.parent("hi!");
        java.lang.String[] strArray67 = deleteRequest61.indices();
        java.lang.String str68 = deleteRequest61.type();
        deleteRequest61.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = null;
        deleteRequest74.remoteAddress(transportAddress75);
        boolean boolean77 = deleteRequest74.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest74.version(1L);
        org.elasticsearch.index.VersionType versionType80 = deleteRequest74.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest61.versionType(versionType80);
        org.elasticsearch.index.VersionType versionType82 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest46.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest30.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.version((-1L));
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(transportAddress31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(actionRequestValidationException43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][][hi!]}][][hi!]}", throwable12, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}", throwable12, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        deleteRequest10.seqNo((long) (short) 10);
        java.lang.String str15 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.index("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        java.lang.String str18 = deleteRequest10.type();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest11.shardId();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        java.lang.String str17 = deleteRequest15.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest15.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        boolean boolean25 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.timeout(timeValue28);
        java.lang.Class<?> wildcardClass31 = deleteRequest3.getClass();
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        java.lang.String str14 = deleteRequest13.toString();
        java.lang.Class<?> wildcardClass15 = deleteRequest13.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str14, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        boolean boolean24 = deleteRequest12.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        deleteRequest12.primaryTerm((long) (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.routing("");
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel28);
        deleteRequest3.setParentTask("delete {[hi!][][delete {[hi!][][hi!]}]}", (-1L));
        java.lang.String[] strArray33 = deleteRequest3.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.timeout("delete {[hi!][delete {[delete {[hi!][][hi!]}][][]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[delete {[hi!][][hi!]}][][]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][hi!][hi!]}");
        java.lang.Class<?> wildcardClass22 = actionRequestValidationException11.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        deleteRequest15.primaryTerm((long) (-1));
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.setShardId(shardId18);
        java.lang.String str20 = deleteRequest19.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.timeout("delete {[null][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}");
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("");
        java.lang.String str9 = deleteRequest8.toString();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest8.versionType();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][][null]}" + "'", str9, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[hi!][][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest3.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}" + "'", str4, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][][null]}", "", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        long long16 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        deleteRequest17.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest32.shardId();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest25.createTask((long) ' ', "hi!", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest25.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest17.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest14.consistencyLevel(writeConsistencyLevel42);
        boolean boolean46 = deleteRequest45.refresh();
        java.lang.String[] strArray47 = deleteRequest45.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest48.validate();
        deleteRequest48.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest48.remoteAddress(transportAddress53);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest48.routing("");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest3.versionType(versionType58);
        long long61 = deleteRequest60.seqNo();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest8.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version(35L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setShardId(shardId34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest13.timeout(timeValue36);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        java.lang.String str24 = deleteRequest20.id();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        deleteRequest28.primaryTerm((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.refresh(false);
        long long35 = deleteRequest28.seqNo();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest10.remoteAddress(transportAddress11);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        long long12 = deleteRequest10.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.index("hi!");
        java.lang.String str8 = deleteRequest4.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest12.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest4.consistencyLevel(writeConsistencyLevel37);
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException41, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException41, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(actionRequestValidationException41);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        boolean boolean17 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.parent("delete {[hi!][][hi!]}");
        java.lang.String str24 = deleteRequest7.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest7.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest30.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task38 = deleteRequest30.createTask(1L, "", "", taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        boolean boolean45 = deleteRequest42.getShouldPersistResult();
        java.lang.String str46 = deleteRequest42.id();
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest30.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.setShardId(shardId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest26.timeout(timeValue55);
        java.lang.String str57 = deleteRequest56.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions58 = deleteRequest56.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(indicesOptions58);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        deleteRequest9.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest16.remoteAddress(transportAddress17);
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        deleteRequest27.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        deleteRequest27.setParentTask(taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest42.shardId();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest35.createTask((long) ' ', "hi!", "", taskId44);
        long long46 = deleteRequest35.primaryTerm();
        java.lang.String str47 = deleteRequest35.index();
        org.elasticsearch.index.VersionType versionType48 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest27.versionType(versionType48);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest16.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest9.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = deleteRequest52.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.index("delete {[hi!][delete {[null][null][null]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(transportAddress53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(deleteRequest56);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.parent();
        deleteRequest11.seqNo((long) (short) 100);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String[] strArray16 = deleteRequest11.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest11.consistencyLevel();
        java.lang.String str19 = deleteRequest11.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][][null]}" + "'", str19, "delete {[null][][null]}");
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest21.refresh(true);
        boolean boolean55 = deleteRequest54.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = deleteRequest62.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        deleteRequest67.remoteAddress(transportAddress68);
        java.lang.String str70 = deleteRequest67.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId82 = deleteRequest81.shardId();
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.Task task84 = deleteRequest74.createTask((long) ' ', "hi!", "", taskId83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest88.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel91 = deleteRequest90.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest74.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest67.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest62.consistencyLevel(writeConsistencyLevel91);
        org.elasticsearch.common.unit.TimeValue timeValue95 = deleteRequest62.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest54.timeout(timeValue95);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest96.type("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][null][null]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(actionRequestValidationException63);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[hi!][][hi!]}" + "'", str70, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId82);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel91 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel91.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(timeValue95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.setShardId(shardId45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest37.timeout(timeValue47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest37.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String[] strArray52 = deleteRequest37.indices();
        java.lang.String str53 = deleteRequest37.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.version((long) (short) 100);
        boolean boolean34 = deleteRequest3.refresh();
        org.elasticsearch.index.VersionType versionType35 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest3.refresh(false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        deleteRequest18.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest18.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest3.shardId();
        boolean boolean38 = deleteRequest3.refresh();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        boolean boolean10 = deleteRequest3.refresh();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.type("delete {[hi!][][hi!]}");
        java.lang.String str12 = deleteRequest11.type();
        boolean boolean13 = deleteRequest11.refresh();
        boolean boolean14 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.version((long) 'a');
        java.lang.String[] strArray19 = deleteRequest11.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        long long2 = deleteRequest1.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version(1L);
        deleteRequest28.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.index.VersionType versionType39 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.versionType(versionType39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest17.versionType(versionType39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest15.consistencyLevel(writeConsistencyLevel43);
        long long45 = deleteRequest15.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest15.remoteAddress();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(transportAddress46);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        boolean boolean14 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest16.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.timeout("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        boolean boolean11 = deleteRequest8.refresh();
        java.lang.String str12 = deleteRequest8.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest8.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        deleteRequest39.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest54.shardId();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest47.createTask((long) ' ', "hi!", "", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest47.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest39.consistencyLevel(writeConsistencyLevel64);
        java.lang.String str67 = deleteRequest66.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.routing("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest38.consistencyLevel(writeConsistencyLevel70);
        java.lang.Class<?> wildcardClass72 = writeConsistencyLevel70.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[null][null][null]}" + "'", str67, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.refresh(true);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest9, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.id("");
        java.lang.String str17 = deleteRequest16.index();
        long long18 = deleteRequest16.primaryTerm();
        org.elasticsearch.tasks.TaskId taskId19 = null;
        deleteRequest16.setParentTask(taskId19);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.parent();
        java.lang.String[] strArray29 = deleteRequest27.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.refresh(false);
        long long32 = deleteRequest31.seqNo();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest31.versionType();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(versionType33);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest17.id();
        java.lang.String str19 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        java.lang.String str27 = deleteRequest23.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        long long30 = deleteRequest17.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest17.validate();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str9 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest13.createTask((long) ' ', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest6.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.common.unit.TimeValue timeValue42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest3.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.id("delete {[delete {[hi!][][hi!]}][][null]}");
        long long46 = deleteRequest45.version();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-3L) + "'", long46 == (-3L));
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        deleteRequest10.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest10.consistencyLevel(writeConsistencyLevel35);
        java.lang.String str38 = deleteRequest37.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        deleteRequest44.primaryTerm((long) 1);
        java.lang.String str47 = deleteRequest44.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress48 = null;
        deleteRequest44.remoteAddress(transportAddress48);
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest44.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.timeout(timeValue50);
        org.elasticsearch.index.VersionType versionType52 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest5.versionType(versionType52);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest5.remoteAddress(transportAddress54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest5.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest57);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.version(97L);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest29.setShardId(shardId37);
        java.lang.String str39 = deleteRequest29.getDescription();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][hi!]}" + "'", str39, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest1.indicesOptions();
        org.elasticsearch.index.VersionType versionType3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.versionType(versionType3);
        long long5 = deleteRequest1.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest1.shardId();
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(shardId6);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest11.shardId();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.routing("");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest11.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest34.createTask(1L, "", "", taskId41);
        deleteRequest25.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task44 = deleteRequest18.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest18.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.setShardId(shardId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.index("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest53.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest13.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = deleteRequest57.shardId();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest57.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest50.createTask((long) ' ', "hi!", "", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest50.consistencyLevel(writeConsistencyLevel67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel75 = deleteRequest72.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest68.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest45.consistencyLevel(writeConsistencyLevel75);
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest77.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest36.createTask((-1L), "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}", "delete {[hi!][][delete {[hi!][null][null]}]}", taskId78);
        org.elasticsearch.tasks.Task task80 = deleteRequest13.createTask((long) (byte) 1, "delete {[hi!][hi!][hi!]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId78);
        java.lang.Class<?> wildcardClass81 = deleteRequest13.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel75 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel75.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.parent("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        java.lang.String str23 = deleteRequest12.toString();
        boolean boolean24 = deleteRequest12.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.index("delete {[][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest28.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(indicesOptions30);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.timeout("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String[] strArray26 = deleteRequest23.indices();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        java.lang.String[] strArray29 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        long long35 = deleteRequest33.version();
        long long36 = deleteRequest33.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        boolean boolean43 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.version(1L);
        deleteRequest45.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.index("delete {[hi!][][hi!]}");
        long long50 = deleteRequest49.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest49.remoteAddress(transportAddress51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest33.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest12.consistencyLevel(writeConsistencyLevel55);
        boolean boolean58 = deleteRequest57.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.parent();
        java.lang.String[] strArray29 = deleteRequest27.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.index("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        deleteRequest33.primaryTerm((long) '4');
        java.lang.String str36 = deleteRequest33.routing();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        java.lang.String[] strArray24 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(false);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest21.shardId();
        deleteRequest21.primaryTerm((long) (short) -1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(shardId23);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.version(0L);
        java.lang.String str44 = deleteRequest43.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.index("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.routing("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        long long49 = deleteRequest43.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest8.remoteAddress(transportAddress9);
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version(1L);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest8.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.timeout(timeValue20);
        long long23 = deleteRequest22.version();
        long long24 = deleteRequest22.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.type("delete {[null][][null]}");
        java.lang.String str27 = deleteRequest26.id();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        boolean boolean29 = deleteRequest26.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.seqNo();
        boolean boolean11 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.parent("delete {[hi!][][delete {[hi!][][hi!]}]}");
        deleteRequest13.seqNo(35L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest1.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("");
        boolean boolean47 = deleteRequest44.getShouldPersistResult();
        java.lang.String str48 = deleteRequest44.id();
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest44.timeout();
        org.elasticsearch.index.VersionType versionType50 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest39.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest39.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = deleteRequest54.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest54.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest53.consistencyLevel(writeConsistencyLevel64);
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest66.getParentTask();
        deleteRequest1.setParentTask(taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest1.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest70.id("delete {[delete {[hi!][][hi!]}][][delete {[hi!][delete {[null][null][null]}][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel64 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel64.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest12.type("");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str43 = deleteRequest12.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][][hi!]}" + "'", str43, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        boolean boolean23 = deleteRequest22.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        long long13 = deleteRequest5.version();
        boolean boolean14 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.index("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        long long17 = deleteRequest16.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        long long35 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest20.refresh(true);
        deleteRequest37.primaryTerm(0L);
        java.lang.String str40 = deleteRequest37.getDescription();
        java.lang.String str41 = deleteRequest37.getDescription();
        org.elasticsearch.index.shard.IndexShard indexShard42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete43 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest37, indexShard42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str40, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str41, "delete {[hi!][hi!][hi!]}");
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        java.lang.String str16 = deleteRequest11.routing();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        long long23 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.version((long) '#');
        deleteRequest25.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.refresh(false);
        java.lang.String[] strArray31 = deleteRequest30.indices();
        java.lang.Class<?> wildcardClass32 = strArray31.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        java.lang.String str15 = deleteRequest12.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.timeout("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        java.lang.String[] strArray32 = deleteRequest30.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.parent("");
        java.lang.String str35 = deleteRequest34.toString();
        boolean boolean36 = deleteRequest34.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}" + "'", str35, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        long long15 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.refresh(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest7.seqNo((-3L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest7.validate();
        java.lang.String str11 = deleteRequest7.index();
        java.lang.Class<?> wildcardClass12 = deleteRequest7.getClass();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        java.lang.String str16 = deleteRequest3.toString();
        java.lang.String[] strArray17 = deleteRequest3.indices();
        org.elasticsearch.common.unit.TimeValue timeValue18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.timeout(timeValue18);
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest19.indicesOptions();
        boolean boolean21 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][][hi!]}" + "'", str16, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = deleteRequest17.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest16.setParentTask(taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str26 = deleteRequest16.parent();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.setShardId(shardId27);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        deleteRequest3.setParentTask("delete {[null][][null]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        java.lang.String str25 = deleteRequest21.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.timeout(timeValue28);
        java.lang.Class<?> wildcardClass30 = deleteRequest29.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][][null]}" + "'", str25, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable9, "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest3.validate();
        deleteRequest3.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        boolean boolean27 = deleteRequest24.refresh();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest24.getParentTask();
        deleteRequest3.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.routing("delete {[delete {[hi!][][hi!]}][][]}");
        long long34 = deleteRequest33.version();
        java.lang.String str35 = deleteRequest33.getDescription();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][][hi!]}" + "'", str35, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.routing("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        deleteRequest9.seqNo((long) 10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest9.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        java.lang.String str34 = deleteRequest20.type();
        java.lang.String[] strArray35 = deleteRequest20.indices();
        long long36 = deleteRequest20.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-3L) + "'", long36 == (-3L));
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((long) ' ');
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.readFrom(streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[][][]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long13 = deleteRequest12.version();
        java.lang.String str14 = deleteRequest12.getDescription();
        java.lang.String str15 = deleteRequest12.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest37.remoteAddress();
        boolean boolean39 = deleteRequest37.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamInput streamInput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest37.readFrom(streamInput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][null]}", "delete {[hi!][hi!][hi!]}", "delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest5.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "", taskId50);
        deleteRequest5.seqNo((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.type("");
        java.lang.String str60 = deleteRequest59.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest5.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest5.parent("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest5.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(transportAddress67);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        boolean boolean22 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest26.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest49.createTask(1L, "", "", taskId56);
        deleteRequest40.setParentTask(taskId56);
        org.elasticsearch.tasks.Task task59 = deleteRequest33.createTask((long) '#', "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest18.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest12.timeout(timeValue69);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput71 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest21.setShardId(shardId47);
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest21.indicesOptions();
        long long50 = deleteRequest21.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest21.index("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(shardId53);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        java.lang.String str53 = deleteRequest21.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest21.remoteAddress(transportAddress54);
        deleteRequest21.seqNo((long) (byte) 100);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        long long8 = deleteRequest6.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][][hi!]}", throwable13, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str18 = shardFailure17.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str18, "delete {[delete {[hi!][][hi!]}][][hi!]}");
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest36.refresh(true);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest36.getParentTask();
        deleteRequest28.setParentTask(taskId49);
        org.elasticsearch.tasks.Task task51 = deleteRequest11.createTask((long) (byte) -1, "delete {[null][null][null]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", taskId49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest11.setShardId(shardId52);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        long long11 = deleteRequest10.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest10, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest5.versionType();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest5.versionType();
        deleteRequest5.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.parent("delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        deleteRequest18.setParentTask(taskId37);
        java.lang.String[] strArray39 = deleteRequest18.indices();
        long long40 = deleteRequest18.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.parent("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        boolean boolean32 = deleteRequest29.refresh();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest26.createTask((long) ' ', "hi!", "", taskId35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest26.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest59.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest59.createTask(1L, "", "", taskId66);
        deleteRequest50.setParentTask(taskId66);
        deleteRequest44.setParentTask(taskId66);
        org.elasticsearch.action.support.IndicesOptions indicesOptions70 = deleteRequest44.indicesOptions();
        org.elasticsearch.index.VersionType versionType71 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest12.versionType(versionType71);
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = null;
        deleteRequest72.remoteAddress(transportAddress73);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(indicesOptions70);
        org.junit.Assert.assertNotNull(versionType71);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest31.createTask(1L, "", "", taskId38);
        deleteRequest22.setParentTask(taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest22.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest46.createTask((long) ' ', "hi!", "", taskId55);
        long long57 = deleteRequest46.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("");
        deleteRequest63.primaryTerm((long) 1);
        java.lang.String str66 = deleteRequest63.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest63.remoteAddress(transportAddress67);
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest46.timeout(timeValue69);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest22.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest11.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.type("delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}");
        java.lang.String str76 = deleteRequest75.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[hi!][delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}][hi!]}" + "'", str76, "delete {[hi!][delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}][hi!]}");
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest11.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        boolean boolean40 = deleteRequest38.refresh();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest20.setShardId(shardId38);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.timeout("delete {[hi!][delete {[hi!][][hi!]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[hi!][][hi!]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        java.lang.String str13 = deleteRequest9.type();
        boolean boolean14 = deleteRequest9.refresh();
        java.lang.String str15 = deleteRequest9.index();
        boolean boolean16 = deleteRequest9.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest29.parent();
        long long31 = deleteRequest29.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        deleteRequest43.primaryTerm((long) 'a');
        long long46 = deleteRequest43.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest50.remoteAddress(transportAddress51);
        boolean boolean53 = deleteRequest50.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest50.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest50.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest50.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest64.remoteAddress(transportAddress65);
        boolean boolean67 = deleteRequest64.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = deleteRequest64.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest64.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest64.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest74.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest60.timeout(timeValue75);
        org.elasticsearch.common.transport.TransportAddress transportAddress77 = deleteRequest60.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest60.getParentTask();
        deleteRequest43.setParentTask(taskId78);
        org.elasticsearch.tasks.Task task80 = deleteRequest29.createTask((long) (byte) 1, "delete {[hi!][][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}", taskId78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = null;
        deleteRequest84.remoteAddress(transportAddress85);
        boolean boolean87 = deleteRequest84.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest84.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress94 = deleteRequest91.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId95 = deleteRequest91.getParentTask();
        deleteRequest29.setParentTask(taskId95);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(transportAddress70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(transportAddress77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNull(transportAddress94);
        org.junit.Assert.assertNotNull(taskId95);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        boolean boolean9 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        boolean boolean27 = deleteRequest24.getShouldPersistResult();
        java.lang.String str28 = deleteRequest24.id();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest24.timeout();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        java.lang.String str38 = deleteRequest35.toString();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest35.getParentTask();
        deleteRequest31.setParentTask(taskId39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest11.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str43 = deleteRequest11.routing();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][][hi!]}" + "'", str38, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest1.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest1.routing("delete {[hi!][null][null]}");
        java.lang.String str38 = deleteRequest37.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest37.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}" + "'", str38, "delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest19.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = deleteRequest30.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest30.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest41.createTask((long) ' ', "hi!", "", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest41.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest53.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest37.versionType(versionType58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest12.versionType(versionType58);
        java.lang.String str62 = deleteRequest12.parent();
        deleteRequest12.setParentTask("delete {[delete {[hi!][][hi!]}][][null]}", 10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(transportAddress35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][][]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.Throwable throwable22 = shardFailure21.cause;
        java.lang.String str23 = shardFailure21.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure21.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][][hi!]}][][]}" + "'", str23, "delete {[delete {[hi!][][hi!]}][][]}");
        org.junit.Assert.assertNull(shardRouting24);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest57.setShardId(shardId63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest57.type("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        java.lang.String str67 = deleteRequest57.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest1.shardId();
        org.junit.Assert.assertNull(shardId2);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version((long) (byte) 10);
        java.lang.String str21 = deleteRequest20.id();
        java.lang.String str22 = deleteRequest20.parent();
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest20, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str16, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest3.consistencyLevel();
        boolean boolean32 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.refresh(true);
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.type("delete {[hi!][][hi!]}");
        java.lang.String str12 = deleteRequest11.type();
        boolean boolean13 = deleteRequest11.refresh();
        boolean boolean14 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.parent("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest18.shardId();
        java.lang.Class<?> wildcardClass21 = deleteRequest18.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        java.lang.String str12 = deleteRequest7.toString();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest7.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest7.timeout();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(timeValue14);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        deleteRequest17.setParentTask("delete {[null][null][null]}", 35L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest32.shardId();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest25.createTask((long) ' ', "hi!", "", taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest25.id("delete {[hi!][][hi!]}");
        boolean boolean38 = deleteRequest37.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        boolean boolean45 = deleteRequest42.getShouldPersistResult();
        java.lang.String str46 = deleteRequest42.id();
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest37.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("");
        boolean boolean57 = deleteRequest54.getShouldPersistResult();
        java.lang.String str58 = deleteRequest54.id();
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest54.getParentTask();
        deleteRequest50.setParentTask(taskId59);
        deleteRequest17.setParentTask(taskId59);
        long long62 = deleteRequest17.version();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest16.toString();
        java.lang.String str32 = deleteRequest16.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str31, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest12.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest12.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest2.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest2.getParentTask();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest2.getParentTask();
        java.lang.String str7 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.routing("delete {[null][][null]}");
        java.lang.String str12 = deleteRequest11.parent();
        org.elasticsearch.common.unit.TimeValue timeValue13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.timeout(timeValue13);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", deleteRequest14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        org.elasticsearch.index.VersionType versionType19 = deleteRequest11.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.setParentTask("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", (long) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.timeout("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType19);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        java.lang.String str13 = deleteRequest11.toString();
        long long14 = deleteRequest11.seqNo();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        deleteRequest22.primaryTerm((long) 1);
        java.lang.String str25 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str32 = deleteRequest29.routing();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.versionType(versionType33);
        boolean boolean35 = deleteRequest14.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest14.consistencyLevel();
        long long37 = deleteRequest14.seqNo();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.type("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        long long29 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.type("");
        deleteRequest35.primaryTerm((long) 1);
        java.lang.String str38 = deleteRequest35.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest35.remoteAddress(transportAddress39);
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest18.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest14.timeout(timeValue41);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.consistencyLevel(writeConsistencyLevel29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest22.timeout("delete {[null][][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.indexUUID;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String str2 = deleteRequest1.routing();
        java.lang.Class<?> wildcardClass3 = deleteRequest1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        long long16 = deleteRequest12.seqNo();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest12.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.versionType(versionType23);
        java.lang.String[] strArray27 = deleteRequest1.indices();
        deleteRequest1.seqNo((long) 'a');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.id("delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        long long2 = deleteRequest0.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest0.validate();
        java.lang.String str4 = deleteRequest0.index();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.parent("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[hi!][delete {[hi!][null][null]}][hi!]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.parent("delete {[delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        deleteRequest7.primaryTerm((long) 1);
        deleteRequest7.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.refresh(true);
        long long14 = deleteRequest13.primaryTerm();
        deleteRequest13.seqNo((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest20.consistencyLevel(writeConsistencyLevel30);
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest34.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions42 = deleteRequest41.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest41.getParentTask();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest37.versionType(versionType44);
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest45.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest53.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest62.remoteAddress(transportAddress63);
        boolean boolean65 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest62.version(1L);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest62.versionType();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest62.setShardId(shardId69);
        java.lang.String str71 = deleteRequest70.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest70.version(97L);
        org.elasticsearch.index.VersionType versionType76 = deleteRequest75.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest56.versionType(versionType76);
        java.lang.String str78 = deleteRequest77.parent();
        java.lang.String[] strArray79 = deleteRequest77.indices();
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest77.getParentTask();
        org.elasticsearch.tasks.Task task81 = deleteRequest45.createTask((long) ' ', "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[hi!][null][null]}", taskId80);
        org.elasticsearch.tasks.Task task82 = deleteRequest13.createTask((-1L), "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", taskId80);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException83 = deleteRequest13.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", deleteRequest13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(indicesOptions42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNull(actionRequestValidationException83);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.getDescription();
        java.lang.String str17 = deleteRequest14.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.parent("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        long long21 = deleteRequest19.primaryTerm();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][][null]}" + "'", str16, "delete {[null][][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][][null]}" + "'", str17, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest3.versionType();
        java.lang.String str17 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest23.remoteAddress(transportAddress24);
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest23.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest23.parent("delete {[hi!][][hi!]}");
        long long34 = deleteRequest33.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.consistencyLevel(writeConsistencyLevel41);
        boolean boolean43 = deleteRequest42.refresh();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[hi!][][hi!]}]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        java.lang.String str8 = deleteRequest5.index();
        java.lang.String str9 = deleteRequest5.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.parent("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest28.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("hi!");
        deleteRequest33.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.id("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest23.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest48.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        java.lang.String str11 = deleteRequest3.parent();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest3.versionType();
        deleteRequest3.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        deleteRequest23.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("delete {[hi!][][hi!]}");
        long long28 = deleteRequest27.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest27.remoteAddress(transportAddress29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest44.remoteAddress(transportAddress45);
        java.lang.String str47 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest58.getParentTask();
        org.elasticsearch.tasks.Task task61 = deleteRequest51.createTask((long) ' ', "hi!", "", taskId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest51.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest44.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest39.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest32.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = deleteRequest72.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest72.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest72.setShardId(shardId78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest72.type("delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest72.getParentTask();
        deleteRequest3.setParentTask(taskId82);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[hi!][][hi!]}" + "'", str47, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(transportAddress75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(taskId82);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest37.id("delete {[delete {[hi!][null][null]}][][hi!]}");
        java.lang.String str44 = deleteRequest43.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        java.lang.String str47 = deleteRequest46.type();
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest46.shardId();
        long long49 = deleteRequest46.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}" + "'", str44, "delete {[hi!][][delete {[delete {[hi!][null][null]}][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}" + "'", str47, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest36.createTask((long) ' ', "hi!", "", taskId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest36.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest29.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest24.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest17.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = deleteRequest57.remoteAddress();
        java.lang.String str61 = deleteRequest57.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest57.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest63.timeout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][][hi!]}" + "'", str32, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(transportAddress60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str61, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(timeValue64);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str21 = deleteRequest20.type();
        java.lang.String str22 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.version((long) (byte) 100);
        java.lang.String str25 = deleteRequest24.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.index("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.id("delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest3.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(timeValue9);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.index("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        deleteRequest10.seqNo((-1L));
        long long18 = deleteRequest10.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        deleteRequest30.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(true);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task38 = deleteRequest10.createTask(35L, "delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}", "delete {[][][hi!]}", taskId37);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task38);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        long long4 = deleteRequest3.seqNo();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(shardId5);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        boolean boolean14 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(1L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest11.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest11.setShardId(shardId18);
        java.lang.String str20 = deleteRequest19.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest24.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) (byte) -1, "", "hi!", taskId27);
        deleteRequest7.setParentTask(taskId27);
        java.lang.String str30 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest7.type("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        java.lang.String str34 = deleteRequest7.routing();
        long long35 = deleteRequest7.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][][]}" + "'", str30, "delete {[][][]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        deleteRequest11.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest11.remoteAddress(transportAddress16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.versionType(versionType37);
        deleteRequest30.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest30.remoteAddress(transportAddress41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest11.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest10.versionType(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        java.lang.String str17 = deleteRequest16.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("delete {[hi!][][hi!]}");
        java.lang.String str16 = deleteRequest3.toString();
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest22.createTask(1L, "", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        boolean boolean37 = deleteRequest34.getShouldPersistResult();
        java.lang.String str38 = deleteRequest34.id();
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest22.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        org.elasticsearch.index.VersionType versionType51 = deleteRequest50.versionType();
        long long52 = deleteRequest50.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        deleteRequest53.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId69 = deleteRequest68.shardId();
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task71 = deleteRequest61.createTask((long) ' ', "hi!", "", taskId70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest77.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest61.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest53.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest50.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest44.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest88.id("");
        org.elasticsearch.index.VersionType versionType91 = deleteRequest88.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest84.versionType(versionType91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest3.versionType(versionType91);
        java.lang.String[] strArray94 = deleteRequest93.indices();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][][delete {[hi!][][hi!]}]}" + "'", str16, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(versionType91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(strArray94);
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        java.lang.String str26 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version((long) ' ');
        java.lang.String str29 = deleteRequest23.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest23.remoteAddress();
        deleteRequest23.primaryTerm((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(transportAddress30);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        long long28 = deleteRequest26.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 35L + "'", long28 == 35L);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.parent("hi!");
        java.lang.String str7 = deleteRequest1.type();
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest1.shardId();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(shardId8);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest12.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest12.versionType(versionType30);
        java.lang.String[] strArray32 = deleteRequest31.indices();
        java.lang.Class<?> wildcardClass33 = deleteRequest31.getClass();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        java.lang.String str2 = deleteRequest0.toString();
        java.lang.String str3 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[null][null][null]}" + "'", str2, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        long long14 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        java.lang.String str34 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.refresh(false);
        boolean boolean37 = deleteRequest33.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest13.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest39.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(transportAddress40);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.indexUUID;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.String str8 = shardFailure5.indexUUID;
        java.lang.String str9 = shardFailure5.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure5.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(shardRouting10);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.version((long) 0);
        boolean boolean26 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.type("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        java.lang.String str30 = deleteRequest3.index();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.Throwable throwable6 = shardFailure4.cause;
        java.lang.String str7 = shardFailure4.indexUUID;
        java.lang.Throwable throwable8 = shardFailure4.cause;
        java.lang.Throwable throwable9 = shardFailure4.cause;
        java.lang.Throwable throwable10 = shardFailure4.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure4.routing;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(throwable6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(throwable8);
        org.junit.Assert.assertNull(throwable9);
        org.junit.Assert.assertNull(throwable10);
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        long long33 = deleteRequest3.version();
        java.lang.String str34 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        java.lang.String str47 = deleteRequest43.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest38.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest38.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = deleteRequest53.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest53.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest52.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest65.getParentTask();
        deleteRequest3.setParentTask(taskId66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest3.version((long) 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        boolean boolean6 = deleteRequest5.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        boolean boolean21 = deleteRequest20.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest31.createTask(1L, "", "", taskId38);
        deleteRequest22.setParentTask(taskId38);
        deleteRequest17.setParentTask(taskId38);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest16.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest16.refresh(false);
        java.lang.String str46 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest50.shardId();
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest50.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.routing("");
        long long55 = deleteRequest54.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions56 = deleteRequest54.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest54.timeout();
        long long58 = deleteRequest54.seqNo();
        java.lang.String str59 = deleteRequest54.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("");
        deleteRequest65.primaryTerm((long) 1);
        java.lang.String str68 = deleteRequest65.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest65.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest70.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest54.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest16.timeout(timeValue71);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest16.timeout("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions56);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest36.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest36.createTask(1L, "", "", taskId43);
        deleteRequest27.setParentTask(taskId43);
        deleteRequest21.setParentTask(taskId43);
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest21.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId48 = null;
        deleteRequest21.setParentTask(taskId48);
        deleteRequest21.setParentTask("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest21.refresh(true);
        boolean boolean55 = deleteRequest54.getShouldPersistResult();
        java.lang.String[] strArray56 = deleteRequest54.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest54.writeTo(streamOutput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest10.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.routing("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        long long24 = deleteRequest22.version();
        java.lang.String str25 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest29.createTask(1L, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        java.lang.String str45 = deleteRequest41.id();
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        long long59 = deleteRequest57.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest60.validate();
        deleteRequest60.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId76 = deleteRequest75.shardId();
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest75.getParentTask();
        org.elasticsearch.tasks.Task task78 = deleteRequest68.createTask((long) ' ', "hi!", "", taskId77);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel85 = deleteRequest84.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest68.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest60.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest57.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest51.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest22.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest10.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}");
        java.lang.String str94 = deleteRequest91.getDescription();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-3L) + "'", long24 == (-3L));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException61);
        org.junit.Assert.assertNull(shardId76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel85 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel85.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "delete {[hi!][delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}][hi!]}" + "'", str94, "delete {[hi!][delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}][hi!]}");
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        deleteRequest14.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[hi!][][hi!]}");
        long long19 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (byte) -1);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.index("");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setShardId(shardId25);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str35 = deleteRequest32.parent();
        java.lang.String[] strArray36 = deleteRequest32.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) (short) 1);
        long long41 = deleteRequest40.version();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.timeout(timeValue42);
        java.lang.String str45 = deleteRequest0.index();
        java.lang.String str46 = deleteRequest0.id();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str22, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str45, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.refresh(true);
        java.lang.String str18 = deleteRequest17.id();
        java.lang.String str19 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        boolean boolean26 = deleteRequest23.getShouldPersistResult();
        java.lang.String str27 = deleteRequest23.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest17.remoteAddress(transportAddress30);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        boolean boolean17 = deleteRequest14.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        java.lang.String str26 = deleteRequest25.type();
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest25.shardId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.setShardId(shardId28);
        java.lang.String str30 = deleteRequest29.parent();
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue31);
        long long33 = deleteRequest19.seqNo();
        boolean boolean34 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest9.versionType();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest17.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest22.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) (byte) -1, "", "hi!", taskId25);
        deleteRequest0.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest29, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}][][hi!]}");
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.versionType(versionType23);
        java.lang.String[] strArray27 = deleteRequest1.indices();
        java.lang.String str28 = deleteRequest1.parent();
        java.lang.String[] strArray29 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        java.lang.String str32 = deleteRequest30.toString();
        java.lang.String str33 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.version(1L);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest39.versionType();
        java.lang.String[] strArray46 = deleteRequest39.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest39.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.version((-1L));
        java.lang.String str57 = deleteRequest52.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest58.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest58.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest52.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest39.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest35.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest1.consistencyLevel(writeConsistencyLevel68);
        java.lang.String[] strArray74 = deleteRequest73.indices();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[null][null][null]}" + "'", str32, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.index("delete {[hi!][][hi!]}");
        long long15 = deleteRequest14.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest14.remoteAddress(transportAddress16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.parent("hi!");
        java.lang.String[] strArray20 = deleteRequest14.indices();
        java.lang.String str21 = deleteRequest14.type();
        deleteRequest14.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.version(1L);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.index("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        boolean boolean37 = deleteRequest36.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", deleteRequest36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        boolean boolean4 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest18.remoteAddress(transportAddress19);
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.version(1L);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest18.setShardId(shardId25);
        java.lang.String str27 = deleteRequest26.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version(97L);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        deleteRequest39.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        deleteRequest39.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest54.shardId();
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task57 = deleteRequest47.createTask((long) ' ', "hi!", "", taskId56);
        long long58 = deleteRequest47.primaryTerm();
        java.lang.String str59 = deleteRequest47.index();
        org.elasticsearch.index.VersionType versionType60 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest39.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest33.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest0.versionType(versionType60);
        org.elasticsearch.action.support.IndicesOptions indicesOptions64 = deleteRequest63.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.parent("delete {[delete {[hi!][][hi!]}][][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest66.remoteAddress();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(indicesOptions64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(transportAddress67);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.refresh(true);
        deleteRequest14.seqNo((long) 100);
        java.lang.String str17 = deleteRequest14.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest14.remoteAddress();
        long long19 = deleteRequest14.primaryTerm();
        java.lang.String[] strArray20 = deleteRequest14.indices();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.index("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest0.createTask(10L, "delete {[hi!][][hi!]}", "hi!", taskId29);
        deleteRequest0.primaryTerm((long) 1);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}", "delete {[null][hi!][null]}", "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}");
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest43.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str49 = deleteRequest46.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = deleteRequest60.shardId();
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task63 = deleteRequest53.createTask((long) ' ', "hi!", "", taskId62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest53.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest71.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest46.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest43.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest37.consistencyLevel(writeConsistencyLevel78);
        java.lang.String str83 = deleteRequest82.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(taskId62);
        org.junit.Assert.assertNotNull(task63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException9, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException9, "");
        java.lang.Throwable throwable18 = shardFailure17.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = shardFailure17.routing;
        java.lang.String str20 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest3.validate();
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException19);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions2 = deleteRequest1.indicesOptions();
        org.elasticsearch.index.VersionType versionType3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest8.getParentTask();
        boolean boolean11 = deleteRequest8.refresh();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        deleteRequest4.setParentTask(taskId12);
        org.junit.Assert.assertNotNull(indicesOptions2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        deleteRequest0.primaryTerm((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest9.versionType();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest17.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest22.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) (byte) -1, "", "hi!", taskId25);
        deleteRequest0.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str30 = deleteRequest0.getDescription();
        boolean boolean31 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}" + "'", str30, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][null][null]}][hi!]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}");
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}");
        boolean boolean11 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) 'a');
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][null][delete {[hi!][hi!][delete {[hi!][][hi!]}]}]}", "delete {[delete {[hi!][null][null]}][][hi!]}", "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.type("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.parent("delete {[hi!][][delete {[hi!][null][null]}]}");
        long long17 = deleteRequest7.seqNo();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest0.remoteAddress(transportAddress9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.refresh(false);
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][null][null]}", "delete {[hi!][][delete {[null][][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        boolean boolean5 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        java.lang.String str30 = deleteRequest29.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.type("delete {[hi!][hi!][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest32.setParentTask("", (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest45.createTask((long) ' ', "hi!", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest38.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest26.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest8.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = deleteRequest8.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest8.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(transportAddress68);
        org.junit.Assert.assertNotNull(timeValue69);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.timeout(timeValue24);
        org.elasticsearch.index.shard.IndexShard indexShard26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete27 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest25, indexShard26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        boolean boolean14 = deleteRequest7.getShouldPersistResult();
        boolean boolean15 = deleteRequest7.getShouldPersistResult();
        java.lang.String str16 = deleteRequest7.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][][hi!]}" + "'", str16, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        java.lang.String str30 = deleteRequest28.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest3.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.timeout("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure7.routing;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", throwable9, "");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure11.routing;
        java.lang.String str15 = shardFailure11.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        boolean boolean44 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.setShardId(shardId45);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest37.timeout(timeValue47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest37.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.type("delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.String[] strArray52 = deleteRequest37.indices();
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest37.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest37.writeTo(streamOutput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNull(shardId53);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        deleteRequest5.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = null;
        deleteRequest26.remoteAddress(transportAddress29);
        java.lang.String str31 = deleteRequest26.getDescription();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest26.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][][hi!]}" + "'", str31, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(versionType32);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        boolean boolean26 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest30.remoteAddress(transportAddress31);
        boolean boolean33 = deleteRequest30.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.version(1L);
        org.elasticsearch.index.VersionType versionType36 = deleteRequest30.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest30.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest22.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest3.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(true);
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = deleteRequest47.indicesOptions();
        boolean boolean49 = deleteRequest47.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest0.versionType();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        java.lang.String str20 = deleteRequest18.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.refresh(false);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.timeout("delete {[][][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.version((long) (byte) 10);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        java.lang.String[] strArray2 = deleteRequest1.indices();
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest8.remoteAddress();
        deleteRequest8.seqNo((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.id("delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][][hi!]}" + "'", str9, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][]}", "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}", "delete {[hi!][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        deleteRequest4.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest12.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest4.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.common.io.stream.StreamInput streamInput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest32.readFrom(streamInput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest3.validate();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(taskId25);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(true);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        long long7 = deleteRequest3.version();
        deleteRequest3.primaryTerm((long) '#');
        java.lang.String str10 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.parent("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest12, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest12.shardId();
        long long20 = deleteRequest12.seqNo();
        java.lang.String str21 = deleteRequest12.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[hi!][][hi!]}][][]}" + "'", str21, "delete {[delete {[hi!][][hi!]}][][]}");
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        java.lang.String str8 = deleteRequest3.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest13.parent();
        java.lang.String str15 = deleteRequest13.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][][hi!]}" + "'", str15, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        long long8 = deleteRequest6.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        java.lang.Throwable throwable13 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable13, "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure17.routing;
        java.lang.String str19 = shardFailure17.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}" + "'", str19, "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}");
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        java.lang.String str34 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest52.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest52.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest51.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest47.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.refresh(true);
        long long68 = deleteRequest67.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = null;
        deleteRequest67.remoteAddress(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) ' ', "hi!", "", taskId20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest11.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest3.createTask((long) '#', "hi!", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest25.validate();
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        java.lang.String str29 = deleteRequest25.type();
        deleteRequest25.setParentTask("delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}", 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][][hi!]}" + "'", str4, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNull(actionRequestValidationException27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        long long37 = deleteRequest35.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.id("delete {[hi!][delete {[null][null][null]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 10);
        java.lang.String str10 = deleteRequest9.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (short) 0);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str10, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][delete {[hi!][delete {[null][null][null]}][hi!]}]}");
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        long long13 = deleteRequest8.seqNo();
        boolean boolean14 = deleteRequest8.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest10.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.timeout(timeValue21);
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest22, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest27.remoteAddress(transportAddress30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.setShardId(shardId32);
        java.lang.String str34 = deleteRequest27.id();
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest27.readFrom(streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure9.routing;
        java.lang.String str11 = shardFailure9.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][delete {[hi!][][hi!]}]}" + "'", str11, "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        java.lang.String str12 = shardFailure9.reason;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure9.routing;
        java.lang.String str16 = shardFailure9.reason;
        java.lang.String str17 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][][hi!]}" + "'", str10, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("");
        deleteRequest15.primaryTerm((long) (-1));
        long long18 = deleteRequest15.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        org.elasticsearch.tasks.TaskId taskId8 = null;
        deleteRequest5.setParentTask(taskId8);
        java.lang.String str10 = deleteRequest5.index();
        long long11 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.id("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.routing("delete {[hi!][delete {[null][null][null]}][hi!]}");
        boolean boolean16 = deleteRequest5.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest5.timeout("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        java.lang.String[] strArray22 = deleteRequest3.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest3.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNull(shardId25);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.index("hi!");
        java.lang.String str8 = deleteRequest4.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest12.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest4.consistencyLevel(writeConsistencyLevel37);
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][hi!]}", (java.lang.Throwable) actionRequestValidationException41, "delete {[null][][null]}");
        java.lang.Throwable throwable44 = shardFailure43.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}", throwable44, "delete {[hi!][][delete {[hi!][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(actionRequestValidationException41);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable44.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.refresh(false);
        deleteRequest23.setParentTask("delete {[null][][null]}", (long) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = deleteRequest23.remoteAddress();
        org.elasticsearch.common.io.stream.StreamInput streamInput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest23.readFrom(streamInput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(transportAddress31);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.setShardId(shardId12);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest13.indicesOptions();
        java.lang.String str19 = deleteRequest13.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        java.lang.String str9 = deleteRequest6.getDescription();
        java.lang.String str10 = deleteRequest6.index();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest15.createTask((long) ' ', "hi!", "", taskId24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest15.indicesOptions();
        java.lang.String str27 = deleteRequest15.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.index("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        deleteRequest6.setParentTask(taskId30);
        java.lang.String str32 = deleteRequest6.getDescription();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str9, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str32, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        deleteRequest5.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        java.lang.String str22 = deleteRequest18.id();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        long long26 = deleteRequest18.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest5.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.IndexShard indexShard29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete30 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.toString();
        java.lang.String str13 = deleteRequest11.getDescription();
        boolean boolean14 = deleteRequest11.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("hi!");
        deleteRequest10.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.version((long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest10.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        java.lang.String str20 = deleteRequest18.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("delete {[delete {[hi!][null][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        java.lang.String str25 = deleteRequest22.id();
        java.lang.String str26 = deleteRequest22.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest22.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][][hi!]}" + "'", str20, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(transportAddress27);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String str6 = deleteRequest0.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest0.validate();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest0.versionType();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(versionType8);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.String str8 = shardFailure7.indexUUID;
        java.lang.String str9 = shardFailure7.reason;
        java.lang.String str10 = shardFailure7.reason;
        java.lang.String str11 = shardFailure7.indexUUID;
        java.lang.Throwable throwable12 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable12, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure14.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.timeout("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest11.validate();
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest11.createTask((long) ' ', "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        deleteRequest23.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = deleteRequest38.shardId();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest31.createTask((long) ' ', "hi!", "", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest23.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest59.createTask((long) ' ', "hi!", "", taskId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest59.refresh(true);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest52.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId72);
        org.elasticsearch.tasks.Task task74 = deleteRequest11.createTask(35L, "hi!", "", taskId72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest11.type("delete {[hi!][][hi!]}");
        java.lang.String str77 = deleteRequest11.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("");
        deleteRequest2.primaryTerm((long) (short) -1);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest2.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.refresh(false);
        java.lang.String str11 = deleteRequest2.routing();
        boolean boolean12 = deleteRequest2.refresh();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        long long16 = deleteRequest15.version();
        java.lang.String str17 = deleteRequest15.index();
        java.lang.String str18 = deleteRequest15.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        long long33 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        deleteRequest34.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest42.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest34.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest31.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest25.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.id("");
        org.elasticsearch.index.VersionType versionType72 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest65.versionType(versionType72);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput74 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest65.writeTo(streamOutput74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.indexUUID;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.String str8 = shardFailure5.indexUUID;
        java.lang.Throwable throwable9 = shardFailure5.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        java.lang.String str21 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.version(97L);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.versionType(versionType26);
        java.lang.String str28 = deleteRequest6.getDescription();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][hi!][delete {[hi!][][hi!]}]}" + "'", str28, "delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[hi!][][]}");
        org.elasticsearch.index.shard.IndexShard indexShard14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete15 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest13, indexShard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.type("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String[] strArray26 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.id("delete {[hi!][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        deleteRequest10.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest1.versionType(versionType21);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.setShardId(shardId25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest26.remoteAddress();
        deleteRequest26.primaryTerm(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest33.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("hi!");
        java.lang.String str39 = deleteRequest36.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.parent("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest45.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType52 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest36.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest26.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest55.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest26.consistencyLevel(writeConsistencyLevel61);
        java.lang.String str63 = deleteRequest26.parent();
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest26.timeout();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][hi!]}" + "'", str39, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(timeValue64);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        java.lang.String str48 = deleteRequest46.getDescription();
        java.lang.String str49 = deleteRequest46.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        deleteRequest58.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.index("delete {[hi!][][hi!]}");
        java.lang.String str63 = deleteRequest62.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest62.id("");
        java.lang.String str66 = deleteRequest62.index();
        org.elasticsearch.index.VersionType versionType67 = deleteRequest62.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest46.versionType(versionType67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest46.parent("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][][hi!]}" + "'", str48, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][][hi!]}" + "'", str66, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(versionType67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        long long7 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str37 = deleteRequest36.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        java.lang.String[] strArray21 = deleteRequest16.indices();
        java.lang.String str22 = deleteRequest16.index();
        java.lang.String str23 = deleteRequest16.index();
        long long24 = deleteRequest16.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}");
        deleteRequest28.seqNo(10L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest16.versionType(versionType31);
        java.lang.String[] strArray33 = deleteRequest32.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        java.lang.String str34 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest20.consistencyLevel(writeConsistencyLevel45);
        java.lang.String str48 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest20.version((long) (short) 0);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str48, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest0.parent();
        java.lang.String str5 = deleteRequest0.routing();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest0.versionType();
        java.lang.String str7 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest11.timeout();
        java.lang.String str15 = deleteRequest11.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.setShardId(shardId16);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest11.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        boolean boolean24 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        deleteRequest11.seqNo(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest11.refresh(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest13.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        java.lang.String str18 = deleteRequest16.getDescription();
        java.lang.String[] strArray19 = deleteRequest16.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.index("delete {[hi!][][hi!]}");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        java.lang.String str23 = deleteRequest21.toString();
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][null][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}][hi!]}", deleteRequest26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][][null]}" + "'", str18, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][][hi!]}][][null]}" + "'", str23, "delete {[delete {[hi!][][hi!]}][][null]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[hi!][][hi!]}][][null]}" + "'", str24, "delete {[delete {[hi!][][hi!]}][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest12.type("");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest12.getParentTask();
        deleteRequest12.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}", "delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}", "");
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        boolean boolean14 = deleteRequest7.getShouldPersistResult();
        boolean boolean15 = deleteRequest7.getShouldPersistResult();
        long long16 = deleteRequest7.version();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest5.createTask((long) ' ', "hi!", "", taskId14);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest5.type("delete {[hi!][][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest12.versionType();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        deleteRequest12.setParentTask("delete {[delete {[][][]}][null][null]}", 100L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(versionType21);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.index("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue26 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest13.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest9.timeout(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest5.remoteAddress(transportAddress9);
        deleteRequest5.setParentTask("delete {[hi!][][hi!]}", (long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        java.lang.String str22 = deleteRequest18.id();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        long long26 = deleteRequest18.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest5.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest5.setShardId(shardId29);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest15.remoteAddress(transportAddress16);
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version(1L);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.setShardId(shardId22);
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.version(97L);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType29);
        deleteRequest30.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest30.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest30.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(indicesOptions34);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        deleteRequest20.seqNo((long) (byte) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = deleteRequest20.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest20.setShardId(shardId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.parent("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        java.lang.String[] strArray42 = deleteRequest41.indices();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.setShardId(shardId43);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        long long13 = deleteRequest11.seqNo();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest11.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        java.lang.String str23 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest27.createTask((long) ' ', "hi!", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest27.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest20.consistencyLevel(writeConsistencyLevel44);
        java.lang.String str47 = deleteRequest20.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest20.version((long) (short) 100);
        boolean boolean51 = deleteRequest20.refresh();
        org.elasticsearch.index.VersionType versionType52 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest16.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        java.lang.String str60 = deleteRequest57.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId72 = deleteRequest71.shardId();
        org.elasticsearch.tasks.TaskId taskId73 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.Task task74 = deleteRequest64.createTask((long) ' ', "hi!", "", taskId73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest64.consistencyLevel(writeConsistencyLevel81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest57.consistencyLevel(writeConsistencyLevel81);
        java.lang.String str84 = deleteRequest57.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel85 = deleteRequest57.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest16.consistencyLevel(writeConsistencyLevel85);
        org.elasticsearch.common.io.stream.StreamInput streamInput87 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest86.readFrom(streamInput87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId72);
        org.junit.Assert.assertNotNull(taskId73);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel85 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel85.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.version(1L);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.setShardId(shardId12);
        deleteRequest5.setParentTask("delete {[hi!][][hi!]}", (long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("");
        deleteRequest22.primaryTerm((long) 1);
        java.lang.String str25 = deleteRequest22.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest35.remoteAddress(transportAddress36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest29.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest5.consistencyLevel(writeConsistencyLevel40);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest17.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.versionType(versionType37);
        deleteRequest40.seqNo((long) (byte) 0);
        java.lang.String str43 = deleteRequest40.type();
        long long44 = deleteRequest40.primaryTerm();
        java.lang.String str45 = deleteRequest40.getDescription();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[null][][null]}" + "'", str45, "delete {[null][][null]}");
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) (short) 100);
        java.lang.String str18 = deleteRequest3.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.refresh(false);
        deleteRequest18.primaryTerm(10L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        java.lang.String str30 = deleteRequest29.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.id("delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String[] strArray18 = deleteRequest12.indices();
        java.lang.String str19 = deleteRequest12.type();
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest25.remoteAddress(transportAddress26);
        boolean boolean28 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.version(1L);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.versionType(versionType31);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.routing("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        long long42 = deleteRequest41.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        java.lang.String str50 = deleteRequest46.id();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest41.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId64 = deleteRequest63.shardId();
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest63.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.routing("");
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest63.getParentTask();
        org.elasticsearch.tasks.Task task69 = deleteRequest56.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId68);
        deleteRequest12.setParentTask(taskId68);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest12.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        deleteRequest15.primaryTerm((long) 1);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest15.remoteAddress(transportAddress19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        java.lang.String str23 = deleteRequest3.toString();
        deleteRequest3.setParentTask("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}", (long) (short) -1);
        java.lang.String str27 = deleteRequest3.parent();
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.setParentTask("", (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][hi!]}" + "'", str23, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest27.remoteAddress();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest27.versionType();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(versionType30);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version((long) (byte) 10);
        boolean boolean19 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest18.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest18.indicesOptions();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("");
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        java.lang.String str12 = deleteRequest8.id();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(100L);
        java.lang.String str23 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.type("delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.version(35L);
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest20.createTask((long) 1, "hi!", "delete {[hi!][][hi!]}", taskId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        long long35 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest20.refresh(true);
        deleteRequest37.primaryTerm(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest37.remoteAddress(transportAddress40);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest37.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest37.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue43);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.timeout(timeValue18);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest19.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest24.createTask((long) ' ', "hi!", "", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.id("delete {[hi!][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        deleteRequest18.setParentTask(taskId37);
        long long39 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest18.refresh(true);
        long long42 = deleteRequest41.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.type("delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-3L) + "'", long39 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str8 = deleteRequest7.routing();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str8, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str22 = shardFailure21.reason;
        java.lang.Throwable throwable23 = shardFailure21.cause;
        java.lang.Throwable throwable24 = shardFailure21.cause;
        java.lang.String str25 = shardFailure21.indexUUID;
        java.lang.String str26 = shardFailure21.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[null][null][null]}" + "'", str22, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str25, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str26, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        java.lang.String str16 = deleteRequest12.id();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.type("hi!");
        java.lang.String[] strArray23 = deleteRequest18.indices();
        java.lang.String str24 = deleteRequest18.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest18.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}", deleteRequest27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        boolean boolean14 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(1L);
        deleteRequest16.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.index("delete {[hi!][][hi!]}");
        long long21 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.version((long) (byte) -1);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.index("");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.setShardId(shardId27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str37 = deleteRequest34.parent();
        java.lang.String[] strArray38 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.version((long) (short) 1);
        long long43 = deleteRequest42.version();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest32.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest7.timeout(timeValue44);
        deleteRequest7.seqNo(1L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str24, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][][hi!]}][null][null]}][][delete {[null][hi!][null]}]}", "", "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][delete {[hi!][hi!][hi!]}]}");
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        deleteRequest3.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.type("hi!");
        long long23 = deleteRequest20.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.id("delete {[delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task53 = deleteRequest45.createTask(1L, "", "", taskId52);
        deleteRequest36.setParentTask(taskId52);
        deleteRequest31.setParentTask(taskId52);
        org.elasticsearch.index.VersionType versionType56 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest29.versionType(versionType56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest29.setShardId(shardId58);
        java.lang.String str60 = deleteRequest29.index();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task62 = deleteRequest25.createTask(0L, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[][][]}", taskId61);
        org.elasticsearch.tasks.Task task63 = deleteRequest3.createTask((long) '4', "delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}", "delete {[null][hi!][null]}", taskId61);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(task63);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        deleteRequest5.primaryTerm(97L);
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest5.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[hi!][][delete {[hi!][][delete {[hi!][null][null]}]}]}][hi!]}");
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][][hi!]}" + "'", str18, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        long long7 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest5.consistencyLevel(writeConsistencyLevel33);
        boolean boolean37 = deleteRequest36.refresh();
        java.lang.String[] strArray38 = deleteRequest36.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        deleteRequest39.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest39.remoteAddress(transportAddress44);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest39.routing("");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.versionType(versionType49);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.timeout("delete {[hi!][delete {[hi!][null][null]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[hi!][null][null]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        java.lang.String str4 = deleteRequest3.routing();
        boolean boolean5 = deleteRequest3.refresh();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        java.lang.String str7 = deleteRequest5.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest5.remoteAddress(transportAddress8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest5.remoteAddress(transportAddress10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest5.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][hi!]}", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure4.routing;
        java.lang.String str7 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][][hi!]}" + "'", str7, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.index();
        boolean boolean7 = deleteRequest5.refresh();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest5.versionType();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest5.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.id("");
        java.lang.String str32 = deleteRequest31.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest31.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long39 = deleteRequest31.seqNo();
        org.elasticsearch.common.io.stream.StreamInput streamInput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest31.readFrom(streamInput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        java.lang.Throwable throwable7 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure5.routing;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version((long) (byte) 10);
        boolean boolean19 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest18.versionType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(versionType20);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest16.createTask((long) (byte) 10, "", "delete {[hi!][][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        deleteRequest37.primaryTerm((long) 1);
        java.lang.String str40 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest37.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest37.routing("");
        deleteRequest37.primaryTerm((long) (byte) 1);
        deleteRequest37.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", (long) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest37.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest57.remoteAddress(transportAddress58);
        boolean boolean60 = deleteRequest57.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.version(1L);
        deleteRequest62.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest62.index("delete {[hi!][][hi!]}");
        java.lang.String str67 = deleteRequest66.routing();
        java.lang.String str68 = deleteRequest66.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = null;
        deleteRequest72.remoteAddress(transportAddress73);
        boolean boolean75 = deleteRequest72.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest72.version(1L);
        deleteRequest77.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest77.index("delete {[hi!][][hi!]}");
        long long82 = deleteRequest81.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress83 = null;
        deleteRequest81.remoteAddress(transportAddress83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest81.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions87 = deleteRequest81.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest81.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str90 = deleteRequest89.type();
        java.lang.String str91 = deleteRequest89.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel92 = deleteRequest89.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest66.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest37.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest16.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.index.shard.IndexShard indexShard96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete97 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest95, indexShard96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][hi!][hi!]}" + "'", str31, "delete {[hi!][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "delete {[hi!][][hi!]}" + "'", str68, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(indicesOptions87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel92 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel92.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.setShardId(shardId28);
        long long30 = deleteRequest29.primaryTerm();
        java.lang.String str31 = deleteRequest29.id();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.routing("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        long long11 = deleteRequest9.seqNo();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        boolean boolean9 = deleteRequest7.refresh();
        deleteRequest7.seqNo((long) 0);
        deleteRequest7.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        deleteRequest16.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest16.remoteAddress();
        java.lang.String str22 = deleteRequest16.parent();
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.routing("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.consistencyLevel(writeConsistencyLevel26);
        java.lang.String str28 = deleteRequest27.routing();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        deleteRequest3.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest39.remoteAddress(transportAddress40);
        boolean boolean42 = deleteRequest39.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest39.version(1L);
        deleteRequest44.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.index("delete {[hi!][][hi!]}");
        java.lang.String str49 = deleteRequest48.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.id("");
        long long52 = deleteRequest48.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest48.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest48.versionType();
        org.elasticsearch.index.VersionType versionType57 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest3.versionType(versionType57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = null;
        deleteRequest62.remoteAddress(transportAddress63);
        java.lang.String str65 = deleteRequest62.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId77 = deleteRequest76.shardId();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest76.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest69.createTask((long) ' ', "hi!", "", taskId78);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest83.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel86 = deleteRequest85.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest69.consistencyLevel(writeConsistencyLevel86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest62.consistencyLevel(writeConsistencyLevel86);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest62.id("");
        java.lang.String str91 = deleteRequest90.id();
        deleteRequest90.primaryTerm((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId94 = deleteRequest90.getParentTask();
        deleteRequest58.setParentTask(taskId94);
        deleteRequest58.primaryTerm(1L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 97L + "'", long52 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[hi!][][hi!]}" + "'", str65, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel86 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel86.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(taskId94);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.Throwable throwable20 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", throwable20, "delete {[hi!][][delete {[hi!][null][null]}]}");
        java.lang.Throwable throwable23 = shardFailure22.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        deleteRequest8.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest8.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions42 = deleteRequest41.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest41.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.type("hi!");
        deleteRequest46.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest46.version((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest50.remoteAddress(transportAddress51);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest37.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.consistencyLevel(writeConsistencyLevel53);
        java.lang.String str56 = deleteRequest55.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.routing("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.refresh(false);
        java.lang.String str72 = deleteRequest71.parent();
        deleteRequest71.seqNo((long) '#');
        boolean boolean75 = deleteRequest71.refresh();
        long long76 = deleteRequest71.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest71.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId79);
        deleteRequest55.setParentTask(taskId79);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(indicesOptions42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str56, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 35L + "'", long76 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(taskId79);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        java.lang.Throwable throwable7 = shardFailure5.cause;
        java.lang.Throwable throwable8 = shardFailure5.cause;
        java.lang.String str9 = shardFailure5.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure5.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure5.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", "");
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}", "delete {[hi!][delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest7.remoteAddress(transportAddress9);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.type("delete {[delete {[hi!][hi!][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest7.validate();
        deleteRequest7.primaryTerm((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.refresh(false);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        deleteRequest7.primaryTerm((long) 1);
        java.lang.String str10 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        deleteRequest19.primaryTerm((long) 1);
        java.lang.String str22 = deleteRequest19.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str29 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest26.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest43.remoteAddress(transportAddress44);
        boolean boolean46 = deleteRequest43.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.version(1L);
        deleteRequest48.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest48.index("delete {[hi!][][hi!]}");
        java.lang.String str53 = deleteRequest52.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.id("");
        long long56 = deleteRequest52.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest52.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest52.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType60 = deleteRequest52.versionType();
        org.elasticsearch.index.VersionType versionType61 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest26.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest12.versionType(versionType61);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}", deleteRequest63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 97L + "'", long56 == 97L);
        org.junit.Assert.assertNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest11.createTask((long) (byte) 10, "delete {[hi!][][hi!]}", "", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("hi!");
        deleteRequest30.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.parent("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest47.shardId();
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest40.createTask((long) ' ', "hi!", "", taskId49);
        long long51 = deleteRequest40.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("");
        deleteRequest57.primaryTerm((long) 1);
        java.lang.String str60 = deleteRequest57.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        deleteRequest57.remoteAddress(transportAddress61);
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest57.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest40.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest30.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest11.timeout(timeValue63);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput67 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.routing();
        deleteRequest3.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) 1);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        java.lang.String str8 = deleteRequest3.index();
        org.elasticsearch.common.unit.TimeValue timeValue9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.version((long) '#');
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[hi!][][hi!]}][][]}][hi!]}", "delete {[hi!][][hi!]}", "delete {[delete {[hi!][delete {[null][null][null]}][hi!]}][delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][delete {[hi!][][delete {[hi!][][hi!]}]}]}");
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        java.lang.String str13 = deleteRequest10.routing();
        java.lang.String str14 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest18.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((-1L));
        long long23 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.version(1L);
        deleteRequest32.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.index("delete {[hi!][][hi!]}");
        long long37 = deleteRequest36.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest36.remoteAddress(transportAddress38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest18.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest10.consistencyLevel(writeConsistencyLevel42);
        long long45 = deleteRequest10.seqNo();
        boolean boolean46 = deleteRequest10.refresh();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        java.lang.String[] strArray5 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (short) 10);
        java.lang.String str10 = deleteRequest7.type();
        boolean boolean11 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest7.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("");
        java.lang.String str10 = deleteRequest9.toString();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest9.timeout();
        long long12 = deleteRequest9.version();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        long long12 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue18 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("");
        deleteRequest22.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}", 35L);
        boolean boolean26 = deleteRequest22.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest5.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest5.version((long) (byte) 100);
        java.lang.String str41 = deleteRequest5.getDescription();
        long long42 = deleteRequest5.seqNo();
        java.lang.Class<?> wildcardClass43 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        long long13 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.type("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest8.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][hi!]}]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}");
        deleteRequest21.seqNo((long) ' ');
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        long long27 = deleteRequest8.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}" + "'", str24, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.consistencyLevel(writeConsistencyLevel25);
        deleteRequest0.setParentTask("hi!", (long) (short) 1);
        long long31 = deleteRequest0.version();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        deleteRequest17.setParentTask("delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}", (long) (short) 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.id("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version(10L);
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest7.createTask(0L, "delete {[hi!][null][null]}", "delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}", taskId18);
        java.lang.Class<?> wildcardClass20 = task19.getClass();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        deleteRequest20.primaryTerm((long) 1);
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue26);
        java.lang.String str28 = deleteRequest27.parent();
        boolean boolean29 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest27.validate();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.setShardId(shardId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.timeout("delete {[hi!][delete {[hi!][][hi!]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][delete {[hi!][][hi!]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest19.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest5.createTask((long) ' ', "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[null][null][null]}", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.type("delete {[delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest27.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest36.remoteAddress(transportAddress37);
        boolean boolean39 = deleteRequest36.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version(1L);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest36.versionType();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.setShardId(shardId43);
        java.lang.String str45 = deleteRequest44.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.version(97L);
        org.elasticsearch.index.VersionType versionType50 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest30.versionType(versionType50);
        java.lang.String str52 = deleteRequest51.parent();
        java.lang.String[] strArray53 = deleteRequest51.indices();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}", taskId54);
        boolean boolean56 = deleteRequest15.getShouldPersistResult();
        java.lang.String str57 = deleteRequest15.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress58 = null;
        deleteRequest15.remoteAddress(transportAddress58);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str16, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest12.createTask((long) ' ', "hi!", "", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest12.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest7.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        deleteRequest39.setParentTask("delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest39.version(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][hi!]}", deleteRequest39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel37 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel37.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(actionRequestValidationException40);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version(1L);
        deleteRequest12.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest20.getParentTask();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest1.versionType(versionType23);
        java.lang.String str27 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest32.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest31.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest1.consistencyLevel(writeConsistencyLevel42);
        java.lang.String str46 = deleteRequest45.toString();
        deleteRequest45.seqNo((long) (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str27, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][null][null]}" + "'", str46, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][null][null]}");
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        java.lang.String str8 = deleteRequest3.id();
        java.lang.String str9 = deleteRequest3.id();
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.index("delete {[hi!][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.routing("delete {[delete {[hi!][][hi!]}][][hi!]}");
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest18.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest18.indicesOptions();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest12.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest12.parent();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest12.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest12.validate();
        java.lang.String str39 = deleteRequest12.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNull(actionRequestValidationException38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][][hi!]}" + "'", str39, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        long long7 = deleteRequest5.version();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        long long10 = deleteRequest9.version();
        deleteRequest9.seqNo((long) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest9.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[null][null][null]}][hi!]}");
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        java.lang.String[] strArray22 = deleteRequest3.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest3.validate();
        boolean boolean24 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][delete {[hi!][][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest3.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest3.timeout();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(actionRequestValidationException23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(timeValue28);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.index.shard.IndexShard indexShard5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete6 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest34.readFrom(streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str8 = deleteRequest7.id();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        deleteRequest5.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.refresh(true);
        long long12 = deleteRequest11.primaryTerm();
        deleteRequest11.seqNo((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.consistencyLevel(writeConsistencyLevel28);
        java.lang.String str30 = deleteRequest29.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest32.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest39.getParentTask();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.versionType(versionType42);
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest43.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest51.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress61 = null;
        deleteRequest60.remoteAddress(transportAddress61);
        boolean boolean63 = deleteRequest60.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.version(1L);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest60.versionType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest60.setShardId(shardId67);
        java.lang.String str69 = deleteRequest68.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest68.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest68.version(97L);
        org.elasticsearch.index.VersionType versionType74 = deleteRequest73.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest54.versionType(versionType74);
        java.lang.String str76 = deleteRequest75.parent();
        java.lang.String[] strArray77 = deleteRequest75.indices();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest75.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest43.createTask((long) ' ', "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[hi!][null][null]}", taskId78);
        org.elasticsearch.tasks.Task task80 = deleteRequest11.createTask((-1L), "delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}", taskId78);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException81 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest11.id("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest83.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNull(actionRequestValidationException81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        deleteRequest5.primaryTerm((long) 1);
        java.lang.String str8 = deleteRequest5.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        java.lang.String str15 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version((long) (byte) -1);
        java.lang.String str18 = deleteRequest17.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.routing("delete {[delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][][hi!]}");
        java.lang.String str21 = deleteRequest17.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.type("delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.String str22 = deleteRequest21.getDescription();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.type("delete {[hi!][][delete {[hi!][][hi!]}]}");
        boolean boolean27 = deleteRequest21.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}" + "'", str22, "delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        java.lang.String str13 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("");
        long long16 = deleteRequest12.primaryTerm();
        boolean boolean17 = deleteRequest12.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.type("delete {[null][][null]}");
        java.lang.String str22 = deleteRequest21.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("");
        org.elasticsearch.index.shard.IndexShard indexShard25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete26 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest24, indexShard25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        java.lang.String str16 = deleteRequest14.index();
        boolean boolean17 = deleteRequest14.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        java.lang.String str26 = deleteRequest25.type();
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest25.shardId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.setShardId(shardId28);
        java.lang.String str30 = deleteRequest29.parent();
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest19.timeout(timeValue31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest32.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.versionType(versionType36);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        java.lang.String str19 = deleteRequest3.getDescription();
        java.lang.String str20 = deleteRequest3.index();
        long long21 = deleteRequest3.seqNo();
        boolean boolean22 = deleteRequest3.getShouldPersistResult();
        java.lang.String str23 = deleteRequest3.id();
        long long24 = deleteRequest3.primaryTerm();
        java.lang.String str25 = deleteRequest3.id();
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][][hi!]}" + "'", str19, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest13.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest13.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest13.validate();
        java.lang.String str33 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest13.index("delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.type("");
        java.lang.String str44 = deleteRequest43.type();
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest43.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest43.type("delete {[hi!][][hi!]}");
        java.lang.String str50 = deleteRequest49.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = deleteRequest49.remoteAddress();
        java.lang.String str52 = deleteRequest49.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.common.unit.TimeValue timeValue62 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest59.id("delete {[null][][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions66 = deleteRequest59.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest59.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest49.createTask((long) '#', "delete {[hi!][delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}][hi!]}", "delete {[delete {[null][null][null]}][][hi!]}", taskId67);
        deleteRequest37.setParentTask(taskId67);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNull(actionRequestValidationException32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][][hi!]}" + "'", str33, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[hi!][][hi!]}" + "'", str50, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(indicesOptions66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.id("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest27.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest27.getParentTask();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.versionType(versionType30);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        long long18 = deleteRequest16.primaryTerm();
        java.lang.String str19 = deleteRequest16.index();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.version();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        java.lang.String str41 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId53 = deleteRequest52.shardId();
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest45.createTask((long) ' ', "hi!", "", taskId54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest38.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest33.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest26.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.version(10L);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.index("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String[] strArray72 = deleteRequest71.indices();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest71.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest3.versionType(versionType73);
        deleteRequest74.setParentTask("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", (long) (short) -1);
        java.lang.String str78 = deleteRequest74.type();
        java.lang.String str79 = deleteRequest74.toString();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str78, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][hi!]}" + "'", str79, "delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[delete {[hi!][][hi!]}][][hi!]}][hi!]}");
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        long long16 = deleteRequest3.primaryTerm();
        java.lang.String str17 = deleteRequest3.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        java.lang.String[] strArray18 = deleteRequest12.indices();
        java.lang.String str19 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest26.remoteAddress(transportAddress27);
        boolean boolean29 = deleteRequest26.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version(1L);
        deleteRequest31.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.index("delete {[hi!][][hi!]}");
        java.lang.String str36 = deleteRequest35.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.id("");
        long long39 = deleteRequest35.primaryTerm();
        boolean boolean40 = deleteRequest35.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("delete {[null][][null]}");
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("");
        boolean boolean57 = deleteRequest54.getShouldPersistResult();
        java.lang.String str58 = deleteRequest54.id();
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest54.timeout();
        org.elasticsearch.index.VersionType versionType60 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest49.versionType(versionType60);
        org.elasticsearch.index.shard.ShardId shardId62 = deleteRequest61.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest66.remoteAddress(transportAddress67);
        boolean boolean69 = deleteRequest66.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest66.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress72 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest66.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest66.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest76.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest76.routing("");
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest79.getParentTask();
        deleteRequest61.setParentTask(taskId80);
        deleteRequest44.setParentTask(taskId80);
        org.elasticsearch.tasks.Task task83 = deleteRequest12.createTask((long) 100, "delete {[hi!][][hi!]}", "delete {[null][][null]}", taskId80);
        deleteRequest12.primaryTerm((long) '4');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 97L + "'", long39 == 97L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}" + "'", str45, "delete {[delete {[hi!][][hi!]}][delete {[null][][null]}][]}");
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(transportAddress72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task83);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.index("delete {[][][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.timeout("delete {[hi!][][delete {[hi!][hi!][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][hi!][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.parent("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.setShardId(shardId18);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.parent("hi!");
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("delete {[null][null][delete {[delete {[hi!][][hi!]}][][hi!]}]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId1 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest8.createTask((long) ' ', "hi!", "", taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest35.id();
        deleteRequest35.setParentTask("delete {[hi!][hi!][hi!]}", 97L);
        boolean boolean40 = deleteRequest35.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.timeout("delete {[hi!][][delete {[hi!][][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][][delete {[hi!][][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.version((long) (byte) 10);
        java.lang.String str17 = deleteRequest16.getDescription();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest16.shardId();
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][][hi!]}" + "'", str17, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        deleteRequest3.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        boolean boolean14 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(1L);
        deleteRequest16.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.versionType(versionType27);
        deleteRequest20.primaryTerm((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = deleteRequest41.shardId();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest34.createTask((long) ' ', "hi!", "", taskId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest34.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest52.remoteAddress(transportAddress53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId68 = deleteRequest67.shardId();
        org.elasticsearch.tasks.TaskId taskId69 = deleteRequest67.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task75 = deleteRequest67.createTask(1L, "", "", taskId74);
        deleteRequest58.setParentTask(taskId74);
        deleteRequest52.setParentTask(taskId74);
        org.elasticsearch.action.support.IndicesOptions indicesOptions78 = deleteRequest52.indicesOptions();
        org.elasticsearch.index.VersionType versionType79 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest20.versionType(versionType79);
        long long81 = deleteRequest20.seqNo();
        java.lang.String str82 = deleteRequest20.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest5.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.index.shard.ShardId shardId85 = deleteRequest84.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(shardId68);
        org.junit.Assert.assertNotNull(taskId69);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(indicesOptions78);
        org.junit.Assert.assertNotNull(versionType79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNull(shardId85);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("");
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest7.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest7.timeout();
        long long11 = deleteRequest7.seqNo();
        java.lang.String str12 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        deleteRequest18.primaryTerm((long) 1);
        java.lang.String str21 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        deleteRequest26.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.parent("delete {[hi!][][hi!]}");
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.index("hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest39.createTask((long) (byte) 10, "delete {[delete {[hi!][][hi!]}][][hi!]}", "delete {[delete {[hi!][][hi!]}][][hi!]}", taskId47);
        deleteRequest32.setParentTask(taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress63 = deleteRequest60.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest60.getParentTask();
        deleteRequest32.setParentTask(taskId64);
        deleteRequest7.setParentTask(taskId64);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest7.setShardId(shardId67);
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest68.remoteAddress();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(transportAddress63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(transportAddress69);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.version(1L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest8.remoteAddress(transportAddress9);
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest15.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.routing("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        long long29 = deleteRequest27.version();
        java.lang.String str30 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest34.shardId();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest34.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest34.createTask(1L, "", "", taskId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        boolean boolean49 = deleteRequest46.getShouldPersistResult();
        java.lang.String str50 = deleteRequest46.id();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest34.timeout(timeValue51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.type("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.type("");
        org.elasticsearch.index.VersionType versionType63 = deleteRequest62.versionType();
        long long64 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException66 = deleteRequest65.validate();
        deleteRequest65.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId81 = deleteRequest80.shardId();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest73.createTask((long) ' ', "hi!", "", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest89.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest73.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest65.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest62.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest56.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest27.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest15.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest97 = deleteRequest0.consistencyLevel(writeConsistencyLevel90);
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(versionType63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException66);
        org.junit.Assert.assertNull(shardId81);
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(deleteRequest97);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest17.remoteAddress(transportAddress18);
        boolean boolean20 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest17.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.setShardId(shardId30);
        java.lang.String str32 = deleteRequest31.id();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.parent("delete {[hi!][][]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.String str12 = shardFailure9.reason;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", throwable14, "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}]}", throwable17, "delete {[null][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}][null]}");
        java.lang.Throwable throwable20 = shardFailure19.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "delete {[delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}][][hi!]}", "delete {[hi!][][hi!]}");
        java.lang.Class<?> wildcardClass4 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest11.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest18.createTask((long) ' ', "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest18.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest11.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        long long39 = deleteRequest38.primaryTerm();
        java.lang.String[] strArray40 = deleteRequest38.indices();
        java.lang.String str41 = deleteRequest38.id();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest31.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest31.createTask(1L, "", "", taskId38);
        deleteRequest22.setParentTask(taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest22.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest53.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest46.createTask((long) ' ', "hi!", "", taskId55);
        long long57 = deleteRequest46.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("");
        deleteRequest63.primaryTerm((long) 1);
        java.lang.String str66 = deleteRequest63.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest63.remoteAddress(transportAddress67);
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest63.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest46.timeout(timeValue69);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest70.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest22.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest11.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest11.parent("delete {[hi!][delete {[hi!][][delete {[hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}][hi!]}]}][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.index("delete {[hi!][][hi!]}");
        long long13 = deleteRequest12.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest12.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.parent("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.routing("delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.type("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}");
        boolean boolean27 = deleteRequest26.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str19 = deleteRequest16.parent();
        java.lang.String[] strArray20 = deleteRequest16.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        deleteRequest25.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest25.remoteAddress();
        java.lang.String str31 = deleteRequest25.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("");
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.timeout(timeValue39);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = deleteRequest40.validate();
        java.lang.String str42 = deleteRequest40.type();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest25.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest48.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest48.createTask(1L, "", "", taskId55);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest48.getParentTask();
        deleteRequest44.setParentTask(taskId57);
        deleteRequest24.setParentTask(taskId57);
        deleteRequest14.setParentTask(taskId57);
        deleteRequest14.setParentTask("delete {[null][][]}", (long) '#');
        long long64 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(actionRequestValidationException41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("");
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.refresh(false);
        java.lang.String str33 = deleteRequest32.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest32.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.timeout(timeValue42);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = deleteRequest44.remoteAddress();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][][hi!]}" + "'", str33, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(transportAddress45);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[hi!][][hi!]}][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        boolean boolean4 = deleteRequest1.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        java.lang.String str12 = deleteRequest9.type();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        long long8 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest12.remoteAddress(transportAddress13);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version(1L);
        deleteRequest17.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.index("delete {[hi!][][hi!]}");
        long long22 = deleteRequest21.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        long long9 = deleteRequest3.version();
        deleteRequest3.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest15.createTask(1L, "", "", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        boolean boolean30 = deleteRequest27.getShouldPersistResult();
        java.lang.String str31 = deleteRequest27.id();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.refresh(true);
        boolean boolean36 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType37 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.versionType(versionType37);
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(indicesOptions39);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        deleteRequest11.primaryTerm((long) '#');
        java.lang.String str19 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest11.remoteAddress(transportAddress20);
        deleteRequest11.seqNo((long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest11.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.index("delete {[hi!][][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest11.versionType();
        java.lang.String str28 = deleteRequest11.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        java.lang.String str11 = deleteRequest7.type();
        boolean boolean12 = deleteRequest7.refresh();
        java.lang.String str13 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[hi!][hi!][hi!]}");
        long long16 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("");
        deleteRequest17.primaryTerm((long) (short) -1);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest17.getParentTask();
        deleteRequest15.setParentTask(taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.setShardId(shardId25);
        java.lang.String str27 = deleteRequest26.parent();
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest26.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(taskId28);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[hi!][][hi!]}]}", "delete {[hi!][hi!][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        boolean boolean5 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        deleteRequest6.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest14.createTask((long) ' ', "hi!", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest14.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest6.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str34 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        deleteRequest40.primaryTerm((long) 1);
        java.lang.String str43 = deleteRequest40.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        deleteRequest40.remoteAddress(transportAddress44);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest33.timeout(timeValue46);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest53.getParentTask();
        deleteRequest49.setParentTask(taskId54);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId54);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        boolean boolean10 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId11 = null;
        deleteRequest8.setParentTask(taskId11);
        long long13 = deleteRequest8.primaryTerm();
        java.lang.String str14 = deleteRequest8.getDescription();
        java.lang.String str15 = deleteRequest8.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][][hi!]}" + "'", str14, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        boolean boolean24 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version(1L);
        deleteRequest26.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest42.createTask((long) ' ', "hi!", "", taskId51);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest34.createTask((long) '#', "hi!", "", taskId53);
        deleteRequest30.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest5.createTask((long) (short) 100, "delete {[null][null][null]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest5.id("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest59.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel69 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest59.consistencyLevel(writeConsistencyLevel69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = null;
        deleteRequest74.remoteAddress(transportAddress75);
        boolean boolean77 = deleteRequest74.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest74.version(1L);
        org.elasticsearch.index.VersionType versionType80 = deleteRequest74.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest70.versionType(versionType80);
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest5.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest5.type("delete {[hi!][][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest85.writeTo(streamOutput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][][hi!]}" + "'", str35, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel69 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel69.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException5, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.String str11 = shardFailure9.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure9.routing;
        java.lang.String str13 = shardFailure9.indexUUID;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        java.lang.Throwable throwable15 = shardFailure9.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure9.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = shardFailure9.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][hi!]}" + "'", str11, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNull(shardRouting17);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        deleteRequest12.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest12.versionType(versionType30);
        java.lang.String[] strArray32 = deleteRequest31.indices();
        deleteRequest31.seqNo(1L);
        boolean boolean35 = deleteRequest31.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String str9 = deleteRequest8.parent();
        deleteRequest8.seqNo((long) '#');
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest8.indicesOptions();
        java.lang.String str14 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.routing("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}][hi!]}");
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        deleteRequest3.seqNo(0L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        long long9 = deleteRequest3.primaryTerm();
        java.lang.String str10 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.index("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.routing("delete {[hi!][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("delete {[][null][null]}");
        java.lang.String str17 = deleteRequest16.toString();
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][null][null]}][][hi!]}" + "'", str17, "delete {[delete {[][null][null]}][][hi!]}");
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        boolean boolean9 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(actionRequestValidationException12);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", throwable2, "delete {[hi!][][hi!]}");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure4.routing;
        java.lang.String str8 = shardFailure4.indexUUID;
        java.lang.Throwable throwable9 = shardFailure4.cause;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][][hi!]}" + "'", str5, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][][hi!]}" + "'", str8, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(throwable9);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.parent("delete {[delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][][hi!]}");
        long long17 = deleteRequest16.seqNo();
        java.lang.String str18 = deleteRequest16.type();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}" + "'", str6, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[hi!][][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        deleteRequest13.seqNo((long) ' ');
        org.elasticsearch.index.shard.IndexShard indexShard17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete18 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest13, indexShard17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        deleteRequest0.setParentTask("hi!", (long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.type("delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}");
        java.lang.String str9 = deleteRequest0.id();
        java.lang.String str10 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.refresh(true);
        java.lang.String str13 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}][null]}" + "'", str10, "delete {[null][delete {[hi!][][delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest3.validate();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest3.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(versionType12);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("hi!");
        java.lang.String str8 = deleteRequest3.index();
        org.elasticsearch.common.unit.TimeValue timeValue9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[delete {[][null][null]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][delete {[hi!][hi!][hi!]}]}");
        java.lang.String str13 = deleteRequest12.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][][hi!]}" + "'", str13, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task13 = deleteRequest3.createTask((long) ' ', "hi!", "", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.type("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.id("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest20.remoteAddress(transportAddress21);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        deleteRequest8.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.versionType(versionType19);
        deleteRequest12.primaryTerm((long) (short) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest12.remoteAddress(transportAddress23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest12.remoteAddress();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest12.versionType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(versionType26);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.type("");
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest33.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest29.versionType(versionType44);
        java.lang.String str47 = deleteRequest29.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest29.version(100L);
        java.lang.String str50 = deleteRequest49.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = deleteRequest49.validate();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(actionRequestValidationException51);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str4 = deleteRequest1.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest1.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("");
        deleteRequest1.setParentTask("delete {[delete {[hi!][][hi!]}][null][null]}", (long) (-1));
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.setShardId(shardId11);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.timeout("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("");
        deleteRequest11.primaryTerm((long) 1);
        java.lang.String str14 = deleteRequest11.index();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "delete {[hi!][][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest31.remoteAddress(transportAddress32);
        java.lang.String str34 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest38.createTask((long) ' ', "hi!", "", taskId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest38.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest31.consistencyLevel(writeConsistencyLevel55);
        java.lang.String str58 = deleteRequest31.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest26.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest20.consistencyLevel(writeConsistencyLevel59);
        java.lang.String[] strArray62 = deleteRequest61.indices();
        deleteRequest61.seqNo((long) '#');
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(actionRequestValidationException27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][][hi!]}" + "'", str34, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        deleteRequest11.primaryTerm((long) 0);
        long long17 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest11.consistencyLevel();
        java.lang.String str19 = deleteRequest11.routing();
        java.lang.String str20 = deleteRequest11.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        long long6 = deleteRequest4.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException7, "delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[hi!][][hi!]}");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure11.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting13);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue5 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.timeout(timeValue5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.id("delete {[hi!][hi!][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) (short) 1);
        deleteRequest8.primaryTerm((long) '4');
        java.lang.String str11 = deleteRequest8.type();
        long long12 = deleteRequest8.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        org.elasticsearch.index.VersionType versionType93 = deleteRequest89.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest89.id("delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][delete {[hi!][][hi!]}][]}");
        boolean boolean96 = deleteRequest95.refresh();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        deleteRequest3.primaryTerm((long) '4');
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest3.routing();
        java.lang.String str22 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest21.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest21.getParentTask();
        deleteRequest17.setParentTask(taskId25);
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.index("hi!");
        java.lang.String str32 = deleteRequest28.routing();
        org.elasticsearch.index.VersionType versionType33 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest17.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest38.remoteAddress(transportAddress39);
        boolean boolean41 = deleteRequest38.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest38.version(1L);
        deleteRequest43.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.index("delete {[hi!][][hi!]}");
        java.lang.String str48 = deleteRequest47.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.id("");
        long long51 = deleteRequest47.primaryTerm();
        boolean boolean52 = deleteRequest47.refresh();
        java.lang.String str53 = deleteRequest47.index();
        long long54 = deleteRequest47.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = deleteRequest64.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue66 = deleteRequest64.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest58.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest58.refresh(true);
        java.lang.String str70 = deleteRequest58.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest58.parent("delete {[delete {[hi!][][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId77 = deleteRequest76.shardId();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest76.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest76.version((-1L));
        boolean boolean81 = deleteRequest80.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest80.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest58.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest47.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest34.timeout(timeValue82);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][][hi!]}" + "'", str24, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 97L + "'", long51 == 97L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][][hi!]}" + "'", str53, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1L + "'", long54 == 1L);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel65 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel65.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNull(shardId77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[][][hi!]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][delete {[][][hi!]}]}" + "'", str4, "delete {[delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}][delete {[][][hi!]}]}");
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        long long6 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest10.getShouldPersistResult();
        java.lang.String str14 = deleteRequest10.id();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.id("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        java.lang.String str23 = deleteRequest22.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}" + "'", str23, "delete {[hi!][][delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}]}");
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.parent("delete {[][][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest29.readFrom(streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest5.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest14.shardId();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest14.createTask(1L, "", "", taskId21);
        deleteRequest5.setParentTask(taskId21);
        deleteRequest0.setParentTask(taskId21);
        java.lang.String str25 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest32.remoteAddress(transportAddress33);
        boolean boolean35 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.version(1L);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest32.versionType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.setShardId(shardId39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest45.remoteAddress(transportAddress46);
        boolean boolean48 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.version(1L);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}", "", "");
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest40.timeout(timeValue57);
        java.lang.String str60 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str68 = deleteRequest65.parent();
        java.lang.String[] strArray69 = deleteRequest65.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest65.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest80.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId82 = deleteRequest80.getParentTask();
        org.elasticsearch.tasks.Task task83 = deleteRequest65.createTask(10L, "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][null][null]}", "delete {[hi!][][delete {[hi!][][hi!]}]}", taskId82);
        org.elasticsearch.tasks.Task task84 = deleteRequest40.createTask((long) ' ', "delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}", "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", taskId82);
        org.elasticsearch.tasks.Task task85 = deleteRequest0.createTask((long) (short) 0, "delete {[delete {[hi!][][delete {[hi!][][hi!]}]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][delete {[delete {[hi!][][hi!]}][null][null]}]}", "delete {[delete {[hi!][][hi!]}][null][null]}", taskId82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest0.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(false);
        java.lang.String str90 = deleteRequest89.index();
        org.elasticsearch.index.shard.ShardId shardId91 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.setShardId(shardId91);
        org.elasticsearch.index.VersionType versionType93 = deleteRequest89.versionType();
        org.elasticsearch.index.shard.ShardId shardId94 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest89.setShardId(shardId94);
        java.lang.String str96 = deleteRequest95.routing();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][][hi!]}" + "'", str41, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNull(actionRequestValidationException52);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][][hi!]}" + "'", str60, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(versionType93);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version(97L);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.setShardId(shardId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("");
        long long26 = deleteRequest25.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        boolean boolean38 = deleteRequest35.getShouldPersistResult();
        java.lang.String str39 = deleteRequest35.id();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest35.timeout();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = deleteRequest54.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest45.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest44.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest25.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest19.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest19.routing("delete {[hi!][][delete {[hi!][][hi!]}]}");
        boolean boolean62 = deleteRequest61.refresh();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel55 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel55.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][delete {[null][null][null]}][hi!]}", "delete {[hi!][][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[delete {[delete {[delete {[hi!][][hi!]}][][hi!]}][][null]}][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        boolean boolean8 = deleteRequest5.getShouldPersistResult();
        java.lang.String str9 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest22.shardId();
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest22.createTask(1L, "", "", taskId29);
        deleteRequest13.setParentTask(taskId29);
        deleteRequest5.setParentTask(taskId29);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest5.remoteAddress(transportAddress33);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[delete {[hi!][delete {[hi!][][hi!]}][hi!]}][][hi!]}][hi!]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!][null]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}", "delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[hi!][][delete {[hi!][null][null]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) ' ', "hi!", "", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.consistencyLevel(writeConsistencyLevel33);
        java.lang.String str36 = deleteRequest9.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest9.indicesOptions();
        long long38 = deleteRequest9.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][][hi!]}" + "'", str12, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest12.createTask(1L, "", "", taskId19);
        deleteRequest3.setParentTask(taskId19);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.setShardId(shardId23);
        deleteRequest24.primaryTerm((long) '4');
        org.elasticsearch.index.VersionType versionType27 = deleteRequest24.versionType();
        java.lang.String str28 = deleteRequest24.toString();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][][hi!]}" + "'", str28, "delete {[hi!][][hi!]}");
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task11 = deleteRequest3.createTask(1L, "", "", taskId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("");
        boolean boolean18 = deleteRequest15.getShouldPersistResult();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.type("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.refresh(false);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(task11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest10.createTask((long) ' ', "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        java.lang.String str30 = deleteRequest3.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions31 = deleteRequest3.indicesOptions();
        long long32 = deleteRequest3.seqNo();
        long long33 = deleteRequest3.version();
        long long34 = deleteRequest3.version();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.setShardId(shardId35);
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][][hi!]}" + "'", str6, "delete {[hi!][][hi!]}");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-3L) + "'", long34 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        boolean boolean12 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.version(1L);
        deleteRequest14.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.index("delete {[hi!][][hi!]}");
        long long19 = deleteRequest18.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.version((long) (byte) -1);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.index("");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setShardId(shardId25);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.id("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        java.lang.String str35 = deleteRequest32.parent();
        java.lang.String[] strArray36 = deleteRequest32.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.parent("delete {[hi!][hi!][delete {[hi!][][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) (short) 1);
        long long41 = deleteRequest40.version();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest0.timeout(timeValue42);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest44.validate();
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][][hi!]}][][hi!]}" + "'", str22, "delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("");
        boolean boolean21 = deleteRequest18.getShouldPersistResult();
        java.lang.String str22 = deleteRequest18.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest35.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest35.createTask(1L, "", "", taskId42);
        deleteRequest26.setParentTask(taskId42);
        deleteRequest18.setParentTask(taskId42);
        org.elasticsearch.tasks.Task task46 = deleteRequest11.createTask((long) 0, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}", "hi!", taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest53.remoteAddress(transportAddress54);
        boolean boolean56 = deleteRequest53.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.version(1L);
        deleteRequest58.primaryTerm((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.routing("delete {[hi!][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = deleteRequest66.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest66.getParentTask();
        org.elasticsearch.index.VersionType versionType69 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest62.versionType(versionType69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = deleteRequest71.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = deleteRequest71.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest71.getParentTask();
        deleteRequest62.setParentTask(taskId75);
        org.elasticsearch.tasks.Task task77 = deleteRequest11.createTask((long) (short) -1, "delete {[delete {[hi!][][hi!]}][][delete {[hi!][][hi!]}]}", "hi!", taskId75);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest11.id("delete {[hi!][][delete {[hi!][null][null]}]}");
        long long80 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest11.consistencyLevel();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(versionType69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertNull(transportAddress73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        java.lang.String[] strArray10 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.routing("delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest16.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.version((-1L));
        java.lang.String str21 = deleteRequest16.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest31.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest16.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        java.lang.String str36 = deleteRequest35.routing();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][delete {[hi!][][hi!]}][hi!]}" + "'", str36, "delete {[hi!][delete {[hi!][][hi!]}][hi!]}");
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "hi!", "delete {[hi!][][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("hi!");
        deleteRequest8.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest21.createTask((long) ' ', "hi!", "", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest16.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.index.shard.ShardId shardId65 = deleteRequest64.shardId();
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest57.createTask((long) ' ', "hi!", "", taskId66);
        long long68 = deleteRequest57.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest57.setShardId(shardId69);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = deleteRequest71.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress73 = deleteRequest71.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest71.getParentTask();
        deleteRequest70.setParentTask(taskId74);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest70.routing("delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = null;
        deleteRequest84.remoteAddress(transportAddress85);
        boolean boolean87 = deleteRequest84.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest84.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest89.id("delete {[delete {[hi!][][hi!]}][][hi!]}");
        org.elasticsearch.tasks.TaskId taskId94 = deleteRequest93.getParentTask();
        org.elasticsearch.tasks.Task task95 = deleteRequest70.createTask((long) (-1), "delete {[delete {[hi!][][hi!]}][delete {[hi!][hi!][delete {[hi!][][hi!]}]}][hi!]}", "", taskId94);
        org.elasticsearch.tasks.Task task96 = deleteRequest8.createTask((long) '4', "delete {[hi!][hi!][delete {[hi!][delete {[hi!][][hi!]}][hi!]}]}", "delete {[delete {[delete {[hi!][][hi!]}][delete {[delete {[hi!][][hi!]}][delete {[hi!][delete {[hi!][][delete {[hi!][null][null]}]}][hi!]}][hi!]}][hi!]}][][hi!]}", taskId94);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertNull(transportAddress73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(taskId94);
        org.junit.Assert.assertNotNull(task95);
        org.junit.Assert.assertNotNull(task96);
    }
}

