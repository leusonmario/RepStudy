import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest7.createTask((long) (byte) 1, "hi!", "delete {[][hi!][hi!]}", taskId12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest7.remoteAddress(transportAddress14);
        java.lang.String str16 = deleteRequest7.routing();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.versionType(versionType17);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.routing("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        java.lang.String[] strArray7 = deleteRequest5.indices();
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest5.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest5.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(timeValue9);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][null]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        boolean boolean5 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.routing("delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(writeConsistencyLevel8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest32.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId40);
        java.lang.String str42 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest13.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.parent("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest58.primaryTerm(10L);
        java.lang.String str61 = deleteRequest58.toString();
        java.lang.String str62 = deleteRequest58.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest56.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest54.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest69.seqNo((-1L));
        java.lang.String str72 = deleteRequest69.toString();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest69.setShardId(shardId73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest();
        long long76 = deleteRequest75.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest75.parent("delete {[][hi!][hi!]}");
        deleteRequest78.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue81 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest78.timeout(timeValue81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest74.timeout(timeValue81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest65.timeout(timeValue81);
        java.lang.String str85 = deleteRequest65.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest65.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.consistencyLevel(writeConsistencyLevel88);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest87.version((-3L));
        org.elasticsearch.index.shard.ShardId shardId92 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest91.setShardId(shardId92);
        org.elasticsearch.tasks.TaskId taskId94 = deleteRequest91.getParentTask();
        deleteRequest48.setParentTask(taskId94);
        org.elasticsearch.common.io.stream.StreamInput streamInput96 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest48.readFrom(streamInput96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[hi!][null][null]}" + "'", str61, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "delete {[hi!][null][null]}" + "'", str62, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str72, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "delete {[][hi!][hi!]}" + "'", str85, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(taskId94);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        java.lang.String[] strArray11 = deleteRequest9.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest9.remoteAddress();
        java.lang.String str13 = deleteRequest9.toString();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.setShardId(shardId14);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str13, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[null][null][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(shardId5);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        java.lang.String str33 = deleteRequest32.id();
        deleteRequest32.primaryTerm((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.versionType(versionType40);
        deleteRequest39.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest39.timeout();
        java.lang.String str45 = deleteRequest39.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.refresh(true);
        java.lang.String str51 = deleteRequest50.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType55 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str64 = deleteRequest63.getDescription();
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest63.getParentTask();
        org.elasticsearch.tasks.Task task66 = deleteRequest56.createTask((long) (short) 0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", taskId65);
        org.elasticsearch.tasks.Task task67 = deleteRequest32.createTask(100L, "delete {[null][null][null]}", "delete {[delete {[][hi!][hi!]}][null][null]}", taskId65);
        deleteRequest32.primaryTerm((long) (byte) 10);
        java.lang.String str70 = deleteRequest32.toString();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[][hi!][hi!]}" + "'", str64, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[hi!][null][null]}" + "'", str70, "delete {[hi!][null][null]}");
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][][hi!]}", "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][hi!]}][]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.id("delete {[delete {[][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        java.lang.String[] strArray8 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.id("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.refresh(true);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        boolean boolean3 = deleteRequest2.refresh();
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest2.shardId();
        java.lang.String str5 = deleteRequest2.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str7 = deleteRequest6.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}" + "'", str4, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}", "delete {[hi!][null][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest7.consistencyLevel();
        java.lang.String str10 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[][hi!][hi!]}");
        deleteRequest16.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue19 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.timeout(timeValue19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str24 = deleteRequest23.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest28.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId36);
        java.lang.String str38 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.versionType(versionType41);
        java.lang.String str43 = deleteRequest42.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.routing("hi!");
        java.lang.String str46 = deleteRequest45.index();
        long long47 = deleteRequest45.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest51.primaryTerm(10L);
        java.lang.String str54 = deleteRequest51.toString();
        java.lang.String str55 = deleteRequest51.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest49.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest45.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest23.consistencyLevel(writeConsistencyLevel56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest23.parent("hi!");
        deleteRequest61.setParentTask("delete {[delete {[null][null][hi!]}][hi!][hi!]}", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType70 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.versionType(versionType70);
        deleteRequest69.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest69.timeout();
        java.lang.String str75 = deleteRequest69.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions76 = deleteRequest69.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType80 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest77.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest69.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest68.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest61.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest7.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest3.versionType(versionType80);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str24, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][null][null]}" + "'", str38, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][null][null]}" + "'", str43, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[hi!][null][null]}" + "'", str54, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[hi!][null][null]}" + "'", str55, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(indicesOptions76);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(false);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest9.getParentTask();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        java.lang.String str12 = deleteRequest8.index();
        java.lang.String[] strArray13 = deleteRequest8.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest8.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        java.lang.String str7 = deleteRequest0.type();
        java.lang.String str8 = deleteRequest0.id();
        java.lang.String str9 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("delete {[][hi!][hi!]}");
        deleteRequest22.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.timeout(timeValue25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.timeout(timeValue27);
        long long29 = deleteRequest28.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest28.consistencyLevel();
        java.lang.String str31 = deleteRequest28.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version((long) 'a');
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest33.remoteAddress(transportAddress34);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str24 = deleteRequest21.id();
        boolean boolean25 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[null][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest21.versionType(versionType32);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.versionType(versionType29);
        deleteRequest28.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        java.lang.String str34 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.setShardId(shardId37);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        boolean boolean48 = deleteRequest47.getShouldPersistResult();
        java.lang.String str49 = deleteRequest47.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.setShardId(shardId52);
        org.elasticsearch.index.shard.IndexShard indexShard54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete55 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest51, indexShard54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str49, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        deleteRequest14.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        long long24 = deleteRequest23.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        deleteRequest28.setParentTask(taskId34);
        deleteRequest23.setParentTask(taskId34);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest23.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task49 = deleteRequest40.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId48);
        java.lang.String str50 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType53 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.versionType(versionType53);
        java.lang.String str55 = deleteRequest54.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.routing("hi!");
        java.lang.String str58 = deleteRequest57.index();
        long long59 = deleteRequest57.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest63.primaryTerm(10L);
        java.lang.String str66 = deleteRequest63.toString();
        java.lang.String str67 = deleteRequest63.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest63.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest61.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest57.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest23.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest14.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException73 = deleteRequest72.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException73, "delete {[][null][null]}");
        java.lang.String str76 = shardFailure75.indexUUID;
        java.lang.Throwable throwable77 = shardFailure75.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable77, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}", throwable77, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure83 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable77, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}][null]}", throwable77, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", throwable77, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}", throwable77, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[hi!][null][null]}" + "'", str50, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[hi!][null][null]}" + "'", str55, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][null][null]}" + "'", str66, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[hi!][null][null]}" + "'", str67, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(actionRequestValidationException73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "delete {[][null][null]}" + "'", str76, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(throwable77);
        org.junit.Assert.assertEquals(throwable77.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;4: illegal version value [-1] for version type [INTERNAL];");
        org.junit.Assert.assertEquals(throwable77.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;4: illegal version value [-1] for version type [INTERNAL];");
        org.junit.Assert.assertEquals(throwable77.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;4: illegal version value [-1] for version type [INTERNAL];");
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][delete {[null][null][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        deleteRequest0.setParentTask("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (long) (short) 100);
        boolean boolean12 = deleteRequest0.getShouldPersistResult();
        java.lang.String str13 = deleteRequest0.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = deleteRequest0.remoteAddress();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(transportAddress14);
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        boolean boolean17 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String[] strArray22 = deleteRequest21.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        long long7 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.refresh(true);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.timeout("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(true);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str45 = shardFailure44.indexUUID;
        java.lang.String str46 = shardFailure44.indexUUID;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}" + "'", str45, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}" + "'", str46, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.versionType(versionType16);
        deleteRequest15.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.timeout(timeValue20);
        java.lang.String str22 = deleteRequest13.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest23.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest13.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest11.consistencyLevel(writeConsistencyLevel27);
        long long30 = deleteRequest29.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.version((long) (byte) 0);
        deleteRequest29.primaryTerm(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.timeout("delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        deleteRequest33.seqNo((long) (short) 100);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest14.version((long) (short) 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest4.refresh();
        boolean boolean8 = deleteRequest4.refresh();
        java.lang.String str9 = deleteRequest4.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str12 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest11.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest4.timeout(timeValue21);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}]}");
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][null][null]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        java.lang.String str16 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        boolean boolean19 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.id("hi!");
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.type("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest29.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId32);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        deleteRequest1.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((long) (short) 10);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str2 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("hi!");
        deleteRequest1.seqNo((long) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.setShardId(shardId7);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        java.lang.String str4 = deleteRequest2.routing();
        long long5 = deleteRequest2.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.refresh(false);
        java.lang.String[] strArray8 = deleteRequest7.indices();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest7.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId16);
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        long long26 = deleteRequest25.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        deleteRequest22.setParentTask(taskId31);
        org.elasticsearch.tasks.Task task33 = deleteRequest3.createTask(100L, "hi!", "", taskId31);
        java.lang.String[] strArray34 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.routing("");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.setShardId(shardId37);
        deleteRequest38.seqNo((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        long long20 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest24.primaryTerm(10L);
        java.lang.String str27 = deleteRequest24.toString();
        java.lang.String str28 = deleteRequest24.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest31.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.index("delete {[][hi!][delete {[][hi!][hi!]}]}");
        java.lang.String str36 = deleteRequest35.index();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][delete {[][hi!][hi!]}]}" + "'", str36, "delete {[][hi!][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        java.lang.String str9 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest15.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest25.primaryTerm(10L);
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(true);
        java.lang.String str37 = deleteRequest34.parent();
        java.lang.String str38 = deleteRequest34.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest42.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray52 = deleteRequest51.indices();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest34.timeout(timeValue53);
        long long56 = deleteRequest55.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.elasticsearch.index.shard.IndexShard indexShard8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete9 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest7.consistencyLevel();
        java.lang.String str9 = deleteRequest7.routing();
        long long10 = deleteRequest7.primaryTerm();
        long long11 = deleteRequest7.seqNo();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.routing("delete {[null][delete {[][null][null]}][null]}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        deleteRequest24.setParentTask(taskId30);
        org.elasticsearch.tasks.Task task32 = deleteRequest17.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        deleteRequest17.setParentTask(taskId37);
        org.elasticsearch.tasks.Task task39 = deleteRequest7.createTask((long) 1, "", "hi!", taskId37);
        deleteRequest3.setParentTask(taskId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.type("delete {[][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str43 = deleteRequest42.index();
        boolean boolean44 = deleteRequest42.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest42.timeout();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][null][null]}" + "'", str43, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(timeValue45);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", "", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        deleteRequest3.primaryTerm((long) 100);
        long long6 = deleteRequest3.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[null][null][hi!]}][null]}", throwable2, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str23 = deleteRequest22.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest41.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId49);
        java.lang.String str51 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType54 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.versionType(versionType54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest39.versionType(versionType54);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest39.setShardId(shardId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.type("delete {[hi!][null][null]}");
        long long61 = deleteRequest60.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest63.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.routing("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions68 = deleteRequest67.indicesOptions();
        java.lang.String[] strArray69 = deleteRequest67.indices();
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest60.timeout(timeValue70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest22.timeout(timeValue70);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.timeout("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][null][null]}" + "'", str51, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-3L) + "'", long61 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(indicesOptions68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest16.seqNo((-1L));
        java.lang.String str19 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(transportAddress22);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        long long2 = deleteRequest1.version();
        long long3 = deleteRequest1.version();
        java.lang.String str4 = deleteRequest1.parent();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        deleteRequest7.setParentTask("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", 100L);
        deleteRequest7.seqNo((-1L));
        java.lang.String[] strArray13 = deleteRequest7.indices();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        boolean boolean17 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.type("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][null][null]}");
        deleteRequest3.seqNo((long) 0);
        long long8 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.versionType(versionType21);
        deleteRequest20.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        java.lang.String str26 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.version(1L);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str34 = deleteRequest33.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.consistencyLevel(writeConsistencyLevel35);
        long long37 = deleteRequest33.version();
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest33.getParentTask();
        deleteRequest28.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest15.createTask(0L, "", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", taskId38);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.consistencyLevel(writeConsistencyLevel41);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(versionType29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-3L) + "'", long37 == (-3L));
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        long long2 = deleteRequest1.version();
        long long3 = deleteRequest1.version();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str19 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(true);
        java.lang.String str33 = deleteRequest32.index();
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.timeout(timeValue34);
        org.elasticsearch.index.shard.ShardId shardId36 = deleteRequest35.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest40.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest40.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.index("");
        java.lang.String str50 = deleteRequest46.index();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest46.setShardId(shardId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest52.validate();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest52.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest62.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest75.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest71.timeout(timeValue76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest71.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str87 = deleteRequest86.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest86.consistencyLevel(writeConsistencyLevel88);
        long long90 = deleteRequest86.version();
        org.elasticsearch.tasks.TaskId taskId91 = deleteRequest86.getParentTask();
        org.elasticsearch.tasks.Task task92 = deleteRequest79.createTask((long) (byte) 0, "", "", taskId91);
        deleteRequest66.setParentTask(taskId91);
        org.elasticsearch.tasks.Task task94 = deleteRequest52.createTask((long) (short) -1, "delete {[][][delete {[][hi!][hi!]}]}", "delete {[][hi!][hi!]}", taskId91);
        deleteRequest35.setParentTask(taskId91);
        deleteRequest7.setParentTask(taskId91);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(actionRequestValidationException57);
        org.junit.Assert.assertNull(actionRequestValidationException58);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(transportAddress67);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "delete {[][hi!][hi!]}" + "'", str87, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-3L) + "'", long90 == (-3L));
        org.junit.Assert.assertNotNull(taskId91);
        org.junit.Assert.assertNotNull(task92);
        org.junit.Assert.assertNotNull(task94);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str4 = deleteRequest3.type();
        java.lang.String str5 = deleteRequest3.id();
        java.lang.String[] strArray6 = deleteRequest3.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str5, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", "delete {[null][null][delete {[null][][null]}]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.timeout("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest1.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest1.consistencyLevel();
        long long9 = deleteRequest1.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        deleteRequest1.setParentTask("delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}", (-3L));
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) 0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(taskId9);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest2.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId3);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str23 = deleteRequest20.parent();
        java.lang.String str24 = deleteRequest20.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest20.indicesOptions();
        boolean boolean26 = deleteRequest20.refresh();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str23, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        java.lang.String str33 = shardFailure32.indexUUID;
        java.lang.Throwable throwable34 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", throwable34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        java.lang.Throwable throwable37 = shardFailure36.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", throwable37, "");
        java.lang.Throwable throwable40 = shardFailure39.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[][hi!][hi!]}]}", throwable40, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}", throwable40, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable34.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable40.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str6 = deleteRequest5.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.consistencyLevel(writeConsistencyLevel7);
        long long9 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.version((long) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.version((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.id("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest18.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][null][null]}][delete {[][delete {[null][null][hi!]}][]}][]}", deleteRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[][hi!][hi!]}" + "'", str6, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(actionRequestValidationException21);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}", "delete {[delete {[null][null][null]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) 'a');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        deleteRequest8.setParentTask("delete {[][null][null]}", (long) 1);
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest8.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(versionType13);
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest9.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.versionType(versionType18);
        long long20 = deleteRequest15.primaryTerm();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest9.versionType(versionType21);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.version((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        long long36 = deleteRequest35.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str41 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest43.getParentTask();
        deleteRequest38.setParentTask(taskId46);
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest38.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest38.validate();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest34.timeout(timeValue50);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.tasks.Task task53 = deleteRequest9.createTask((long) 'a', "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", taskId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest9.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[null][][null]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest46.getParentTask();
        deleteRequest27.setParentTask(taskId47);
        org.elasticsearch.tasks.Task task49 = deleteRequest17.createTask((long) 1, "", "hi!", taskId47);
        deleteRequest13.setParentTask(taskId47);
        deleteRequest9.setParentTask(taskId47);
        deleteRequest3.setParentTask(taskId47);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}" + "'", str5, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task49);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        long long8 = deleteRequest7.seqNo();
        boolean boolean9 = deleteRequest7.getShouldPersistResult();
        long long10 = deleteRequest7.primaryTerm();
        long long11 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        long long13 = deleteRequest12.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.parent("delete {[][hi!][hi!]}");
        deleteRequest15.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue18 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest7.timeout(timeValue18);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.timeout(timeValue24);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][null][delete {[null][][null]}]}");
        java.lang.Throwable throwable53 = shardFailure52.cause;
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable53.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        long long11 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (byte) -1);
        long long15 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.version((long) (short) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest22.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.versionType(versionType37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean41 = deleteRequest38.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest31.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest22.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest17.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest3.consistencyLevel(writeConsistencyLevel46);
        boolean boolean48 = deleteRequest47.refresh();
        java.lang.String str49 = deleteRequest47.toString();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}" + "'", str49, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.versionType(versionType12);
        deleteRequest11.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest19.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest11.timeout(timeValue26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest10.timeout(timeValue28);
        java.lang.String str30 = deleteRequest10.index();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str6 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean14 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.index("delete {[hi!][null][null]}");
        java.lang.String str23 = deleteRequest20.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        java.lang.String str28 = deleteRequest27.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("delete {[][hi!][hi!]}");
        java.lang.String str33 = deleteRequest30.getDescription();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest30.getParentTask();
        deleteRequest20.setParentTask(taskId34);
        boolean boolean36 = deleteRequest20.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        java.lang.String str39 = deleteRequest38.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str23, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}" + "'", str39, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest21.primaryTerm(10L);
        java.lang.String str24 = deleteRequest21.toString();
        java.lang.String str25 = deleteRequest21.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest21.consistencyLevel();
        boolean boolean27 = deleteRequest21.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.timeout(timeValue28);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        deleteRequest7.setParentTask("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", 100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.parent("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}");
        java.lang.String str17 = deleteRequest14.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}][hi!]}" + "'", str17, "delete {[][delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}][hi!]}");
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        long long4 = deleteRequest3.primaryTerm();
        java.lang.String str5 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        java.lang.String str10 = deleteRequest6.routing();
        java.lang.String str11 = deleteRequest6.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest6.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest6.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.index("");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.timeout(timeValue18);
        deleteRequest3.seqNo(0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}" + "'", str5, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(writeConsistencyLevel12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][hi!][]}", "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        java.lang.String str5 = deleteRequest3.routing();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[hi!][null][null]}]}", "delete {[hi!][delete {[null][null][null]}][null]}", "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException18, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException18, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException18, "");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str4 = deleteRequest3.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean20 = deleteRequest19.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.refresh(true);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest1.versionType(versionType23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        deleteRequest15.primaryTerm((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.parent("delete {[delete {[][hi!][hi!]}][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        boolean boolean5 = deleteRequest0.refresh();
        long long6 = deleteRequest0.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}", "delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        java.lang.String str11 = deleteRequest9.routing();
        long long12 = deleteRequest9.primaryTerm();
        long long13 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        java.lang.String str18 = deleteRequest14.routing();
        java.lang.String str19 = deleteRequest14.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest14.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        deleteRequest23.setParentTask(taskId28);
        deleteRequest9.setParentTask(taskId28);
        org.elasticsearch.tasks.Task task31 = deleteRequest3.createTask((long) (byte) 1, "delete {[null][null][delete {[null][null][null]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}", taskId28);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(writeConsistencyLevel20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task31);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.routing("delete {[hi!][null][null]}");
        deleteRequest2.primaryTerm((long) (-1));
        boolean boolean7 = deleteRequest2.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        long long3 = deleteRequest0.version();
        java.lang.String str4 = deleteRequest0.parent();
        java.lang.String str5 = deleteRequest0.routing();
        boolean boolean6 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(true);
        deleteRequest8.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}][delete {[][delete {[null][null][hi!]}][]}]}", (long) 10);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        java.lang.String str15 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.version(1L);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str23 = deleteRequest22.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.consistencyLevel(writeConsistencyLevel24);
        long long26 = deleteRequest22.version();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest22.getParentTask();
        deleteRequest17.setParentTask(taskId27);
        org.elasticsearch.tasks.Task task29 = deleteRequest3.createTask((-1L), "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[][null][null]}", taskId27);
        long long30 = deleteRequest3.seqNo();
        long long31 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.index("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(versionType18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][hi!][hi!]}" + "'", str23, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-3L) + "'", long26 == (-3L));
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-3L) + "'", long31 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable39, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable39, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        java.lang.Throwable throwable44 = shardFailure43.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable44, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", throwable44, "delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][null][null]}][hi!]}", throwable44, "delete {[delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable44.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        java.lang.String str10 = deleteRequest4.id();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.setShardId(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.setShardId(shardId13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        deleteRequest16.seqNo((long) (short) 10);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.routing("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.String str15 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.routing("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.setShardId(shardId18);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}" + "'", str15, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        boolean boolean14 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        deleteRequest16.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest16.createTask((long) 100, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "", taskId25);
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest16.indicesOptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(indicesOptions27);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}][delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", "delete {[null][null][null]}", "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest6.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId14);
        java.lang.String str16 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest6.versionType(versionType19);
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.index("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}" + "'", str4, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.versionType(versionType11);
        java.lang.String str14 = deleteRequest0.parent();
        java.lang.String str15 = deleteRequest0.getDescription();
        java.lang.String[] strArray16 = deleteRequest0.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException17, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException17, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version((long) (short) 1);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        deleteRequest3.setParentTask("delete {[hi!][null][null]}", (long) 'a');
        java.lang.String[] strArray7 = deleteRequest3.indices();
        long long8 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[][hi!][hi!]}][null][null]}", "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        long long5 = deleteRequest3.seqNo();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout("delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.id("delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}");
        deleteRequest13.primaryTerm((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest18.setParentTask(taskId25);
        deleteRequest13.setParentTask(taskId25);
        deleteRequest12.setParentTask(taskId25);
        deleteRequest1.setParentTask(taskId25);
        java.lang.String str30 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.versionType(versionType34);
        long long36 = deleteRequest31.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest31.indicesOptions();
        long long38 = deleteRequest31.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest31.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str41 = deleteRequest31.parent();
        org.elasticsearch.index.VersionType versionType42 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest1.versionType(versionType42);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest1.consistencyLevel();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-3L) + "'", long38 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.id("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.version((-3L));
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        deleteRequest0.setParentTask("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (long) (short) 100);
        boolean boolean12 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.routing("delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.setShardId(shardId15);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest5.validate();
        java.lang.String str8 = deleteRequest5.index();
        long long9 = deleteRequest5.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str14 = deleteRequest13.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        long long17 = deleteRequest13.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str39 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest38.version();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest31.createTask((long) (byte) 0, "", "", taskId43);
        deleteRequest19.setParentTask(taskId43);
        deleteRequest5.setParentTask(taskId43);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][hi!][hi!]}" + "'", str39, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        long long11 = deleteRequest10.version();
        deleteRequest10.primaryTerm(97L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest17.consistencyLevel();
        deleteRequest17.primaryTerm(100L);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest10.createTask((long) ' ', "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[][hi!][delete {[][hi!][hi!]}]}", taskId24);
        java.lang.String str26 = deleteRequest10.type();
        java.lang.String str27 = deleteRequest10.getDescription();
        deleteRequest10.primaryTerm((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[null][null][null]}" + "'", str27, "delete {[null][null][null]}");
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}][delete {[][null][null]}]}", "delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}");
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[][][delete {[][hi!][hi!]}]}", "delete {[null][null][null]}");
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest5.setParentTask(taskId6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[null][null][null]}][][delete {[][hi!][hi!]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        deleteRequest32.primaryTerm((long) 100);
        deleteRequest32.setParentTask("hi!", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.refresh(false);
        long long40 = deleteRequest32.primaryTerm();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", "delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest10.validate();
        deleteRequest10.setParentTask("delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", (long) 'a');
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str57 = shardFailure56.reason;
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str57, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[hi!][null][null]}", "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][null]}");
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable41 = shardFailure40.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", throwable41, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable41, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable41, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[hi!][null][null]}]}", throwable41, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}");
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][null]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][null]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        deleteRequest7.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", 0L);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        java.lang.String str13 = deleteRequest12.toString();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        java.lang.String str15 = deleteRequest12.id();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str13, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[hi!][][null]}");
        boolean boolean6 = deleteRequest3.refresh();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        java.lang.String str4 = deleteRequest3.parent();
        deleteRequest3.seqNo((long) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (byte) 0);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.setShardId(shardId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest19.remoteAddress(transportAddress20);
        long long22 = deleteRequest19.primaryTerm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNull(writeConsistencyLevel17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.versionType(versionType9);
        deleteRequest8.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        deleteRequest3.setParentTask(taskId19);
        java.lang.String str21 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest25.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.refresh(false);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.versionType(versionType30);
        java.lang.String str32 = deleteRequest3.id();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][null][null]}" + "'", str32, "delete {[hi!][null][null]}");
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.id("delete {[][hi!][hi!]}");
        long long15 = deleteRequest14.version();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest28.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId36);
        java.lang.String str38 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest26.versionType(versionType41);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest7.createTask((long) 'a', "delete {[delete {[][hi!][hi!]}][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", taskId44);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][null][null]}" + "'", str38, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "hi!", (java.lang.Throwable) actionRequestValidationException40, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException40, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][null][null]}");
        java.lang.Throwable throwable45 = shardFailure44.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable45, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][][null]}", throwable45, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", throwable45, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", throwable45, "delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.common.unit.TimeValue timeValue6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout(timeValue6);
        java.lang.String str8 = deleteRequest7.index();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest7.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task15 = deleteRequest6.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId14);
        java.lang.String str16 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest6.versionType(versionType19);
        java.lang.String str21 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        java.lang.String str24 = deleteRequest23.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        deleteRequest33.primaryTerm((long) (byte) 0);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest23.createTask((long) (short) 0, "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", taskId36);
        deleteRequest3.setParentTask(taskId36);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        java.lang.String str11 = deleteRequest0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest0.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete8 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest18.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId26);
        java.lang.String str28 = deleteRequest18.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.versionType(versionType31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest18.remoteAddress();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.id("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        boolean boolean38 = deleteRequest37.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest37.validate();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest19.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest10.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId23);
        org.elasticsearch.tasks.Task task25 = deleteRequest3.createTask((long) (short) 1, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.index("delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}", "delete {[null][null][hi!]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.versionType(versionType32);
        java.lang.String str34 = deleteRequest27.getDescription();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}" + "'", str34, "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        java.lang.String str18 = shardFailure17.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str18, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException36, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "");
        java.lang.Throwable throwable51 = shardFailure50.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", throwable51, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", throwable51, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable51, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable51.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.parent("delete {[][hi!][hi!]}");
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        deleteRequest3.setParentTask(taskId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.type("delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest14.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.parent("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str33 = deleteRequest32.type();
        org.elasticsearch.index.shard.IndexShard indexShard34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete35 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest32, indexShard34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][hi!][hi!]}" + "'", str33, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.versionType(versionType7);
        deleteRequest6.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        java.lang.String str12 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest4.timeout(timeValue15);
        java.lang.String str17 = deleteRequest16.routing();
        long long18 = deleteRequest16.primaryTerm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version((-3L));
        deleteRequest7.setParentTask("delete {[null][null][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(true);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.version(0L);
        boolean boolean27 = deleteRequest24.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.version((long) (byte) 10);
        long long31 = deleteRequest28.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10L + "'", long31 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("delete {[][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}" + "'", str4, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest3.timeout();
        java.lang.String str13 = deleteRequest3.index();
        java.lang.String str14 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest3.indicesOptions();
        java.lang.String str16 = deleteRequest3.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str4 = deleteRequest3.toString();
        long long5 = deleteRequest3.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}" + "'", str4, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException8, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = shardFailure12.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure12.routing;
        java.lang.Throwable throwable15 = shardFailure12.cause;
        java.lang.Throwable throwable16 = shardFailure12.cause;
        java.lang.String str17 = shardFailure12.indexUUID;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardRouting13);
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((-3L));
        deleteRequest1.setParentTask("delete {[null][null][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version(0L);
        boolean boolean21 = deleteRequest18.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.version((long) (byte) 10);
        long long25 = deleteRequest22.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest18.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest14.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.type("delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10L + "'", long25 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}][delete {[][delete {[null][null][hi!]}][]}]}");
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[null][null][null]}");
        java.lang.Throwable throwable32 = shardFailure31.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", throwable32, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", throwable32, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str12 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        deleteRequest9.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest9.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.version((long) (byte) 0);
        deleteRequest9.seqNo((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest9.version((long) (short) 10);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        java.lang.String str5 = deleteRequest3.routing();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.id("");
        long long11 = deleteRequest6.version();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest6.timeout();
        java.lang.String str13 = deleteRequest6.parent();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.versionType(versionType12);
        deleteRequest11.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest19.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest11.timeout(timeValue26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest10.timeout(timeValue28);
        boolean boolean30 = deleteRequest29.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        java.lang.String str12 = deleteRequest10.routing();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType5 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.versionType(versionType5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest8.consistencyLevel(writeConsistencyLevel18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", deleteRequest8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version(10L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str30 = deleteRequest29.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.consistencyLevel(writeConsistencyLevel31);
        long long33 = deleteRequest29.version();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest22.createTask((long) (byte) 0, "", "", taskId34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest22.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.versionType(versionType39);
        deleteRequest38.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest38.timeout();
        java.lang.String str44 = deleteRequest38.id();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest38.setShardId(shardId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest48.primaryTerm(10L);
        java.lang.String str51 = deleteRequest48.toString();
        java.lang.String str52 = deleteRequest48.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest38.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest37.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        long long57 = deleteRequest56.seqNo();
        boolean boolean58 = deleteRequest56.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest56.parent("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest37.timeout(timeValue61);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest10.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest10.setShardId(shardId65);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][hi!]}" + "'", str30, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][null][null]}" + "'", str51, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[hi!][null][null]}" + "'", str52, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest23.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId31);
        java.lang.String str33 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.versionType(versionType36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}][delete {[][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable39, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable39, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable39, "delete {[][null][null]}");
        java.lang.Throwable throwable46 = shardFailure45.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", throwable46, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}][null]}", throwable46, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable46.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest11.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest11.type("delete {[null][null][hi!]}");
        deleteRequest11.primaryTerm((long) (-1));
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        deleteRequest7.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", 0L);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        java.lang.String str13 = deleteRequest12.type();
        long long14 = deleteRequest12.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}", "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions5);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("delete {[][hi!][hi!]}");
        java.lang.String str25 = deleteRequest24.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("delete {[][hi!][hi!]}");
        java.lang.String str30 = deleteRequest27.getDescription();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest11.createTask((-3L), "", "delete {[][][delete {[][hi!][hi!]}]}", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest34.primaryTerm(10L);
        java.lang.String str37 = deleteRequest34.toString();
        java.lang.String str38 = deleteRequest34.toString();
        boolean boolean39 = deleteRequest34.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.version((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest50.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest43.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId51);
        java.lang.String str53 = deleteRequest43.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest55.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest43.versionType(versionType56);
        java.lang.String str58 = deleteRequest57.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.routing("hi!");
        java.lang.String str61 = deleteRequest60.index();
        long long62 = deleteRequest60.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest66.primaryTerm(10L);
        java.lang.String str69 = deleteRequest66.toString();
        java.lang.String str70 = deleteRequest66.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest64.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest60.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest34.consistencyLevel(writeConsistencyLevel71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest11.consistencyLevel(writeConsistencyLevel71);
        long long76 = deleteRequest11.seqNo();
        boolean boolean77 = deleteRequest11.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][null][null]}" + "'", str30, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][null][null]}" + "'", str38, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][null][null]}" + "'", str53, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[hi!][null][null]}" + "'", str58, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[hi!][null][null]}" + "'", str69, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[hi!][null][null]}" + "'", str70, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel71 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel71.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        boolean boolean5 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(97L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest6.getParentTask();
        java.lang.String str10 = deleteRequest6.index();
        deleteRequest6.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.type("delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        long long16 = deleteRequest15.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        java.lang.String str19 = deleteRequest15.routing();
        java.lang.String str20 = deleteRequest15.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest15.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest15.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest6.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean41 = deleteRequest40.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.routing("hi!");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest34.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest6.versionType(versionType44);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][hi!]}" + "'", str10, "delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(writeConsistencyLevel21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        java.lang.Throwable throwable45 = shardFailure44.cause;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.Throwable throwable31 = shardFailure30.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable31, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable31.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest1.shardId();
        deleteRequest1.seqNo((long) (-1));
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest1.timeout();
        java.lang.String str20 = deleteRequest1.type();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.getDescription();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}" + "'", str8, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][null][null]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        java.lang.String str16 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        boolean boolean19 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.id("hi!");
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.VersionType versionType31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.versionType(versionType31);
        org.elasticsearch.common.io.stream.StreamInput streamInput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.id("delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", "delete {[null][][null]}");
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest20.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.timeout(timeValue23);
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}" + "'", str16, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[][hi!][hi!]}");
        deleteRequest16.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest16.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.versionType(versionType31);
        long long33 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest28.indicesOptions();
        boolean boolean35 = deleteRequest28.getShouldPersistResult();
        java.lang.String[] strArray36 = deleteRequest28.indices();
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task38 = deleteRequest24.createTask((long) 1, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", "delete {[][delete {[null][null][hi!]}][]}", taskId37);
        org.elasticsearch.common.io.stream.StreamInput streamInput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.readFrom(streamInput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNotNull(task38);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        java.lang.Throwable throwable45 = shardFailure44.cause;
        java.lang.String str46 = shardFailure44.indexUUID;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}" + "'", str46, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest11.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest11.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest11.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.tasks.TaskId taskId37 = deleteRequest36.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest36.consistencyLevel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.id("delete {[hi!][null][null]}");
        deleteRequest9.primaryTerm((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        org.elasticsearch.tasks.Task task30 = deleteRequest9.createTask((long) 0, "", "hi!", taskId28);
        deleteRequest9.setParentTask("delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}", (long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.routing("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest9.readFrom(streamInput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        java.lang.String str11 = deleteRequest9.getDescription();
        deleteRequest9.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest21.primaryTerm(10L);
        java.lang.String str24 = deleteRequest21.toString();
        java.lang.String str25 = deleteRequest21.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest19.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest32.seqNo((-1L));
        java.lang.String str35 = deleteRequest32.toString();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.setShardId(shardId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        long long39 = deleteRequest38.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.parent("delete {[][hi!][hi!]}");
        deleteRequest41.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest37.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest28.timeout(timeValue44);
        java.lang.String str48 = deleteRequest28.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest28.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.version((-3L));
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.setShardId(shardId55);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest54.getParentTask();
        boolean boolean58 = deleteRequest54.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest54.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest61.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest69.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest61.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest54.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest9.timeout(timeValue71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest9.parent("delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str11, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str35, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[][hi!][hi!]}" + "'", str48, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest16.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest8.createTask((long) (byte) 1, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", "delete {[hi!][null][null]}", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.versionType(versionType23);
        deleteRequest22.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        long long29 = deleteRequest28.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.parent("delete {[][hi!][hi!]}");
        deleteRequest31.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest31.getParentTask();
        deleteRequest22.setParentTask(taskId34);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest22.getParentTask();
        deleteRequest22.setParentTask("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest41.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId49);
        java.lang.String str51 = deleteRequest41.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType54 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest41.versionType(versionType54);
        org.elasticsearch.common.transport.TransportAddress transportAddress56 = deleteRequest41.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType61 = deleteRequest60.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str65 = deleteRequest64.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest60.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest41.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        long long74 = deleteRequest73.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType78 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest77.versionType(versionType78);
        deleteRequest77.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue82 = deleteRequest77.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest73.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest41.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest22.timeout(timeValue82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest8.timeout(timeValue82);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][null][null]}" + "'", str51, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(transportAddress56);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest0.timeout(timeValue24);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.id("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.id("delete {[hi!][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", "delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null]}");
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.setShardId(shardId14);
        java.lang.String str16 = deleteRequest13.routing();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest3.seqNo((long) 100);
        java.lang.String str6 = deleteRequest3.type();
        java.lang.String str7 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version(1L);
        deleteRequest12.setParentTask("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.index("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        long long22 = deleteRequest18.version();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((long) (byte) 0, "", "", taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        long long28 = deleteRequest27.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest26.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest26.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("hi!");
        deleteRequest36.primaryTerm((long) (byte) 1);
        long long41 = deleteRequest36.version();
        java.lang.String str42 = deleteRequest36.index();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][hi!]}" + "'", str19, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10L + "'", long41 == 10L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        java.lang.String str8 = deleteRequest6.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.timeout("delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", throwable2, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable33 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", throwable33, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][delete {[][hi!][hi!]}]}", throwable33, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable33, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", throwable33, "delete {[delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        java.lang.String str5 = shardFailure4.indexUUID;
        java.lang.String str6 = shardFailure4.indexUUID;
        java.lang.String str7 = shardFailure4.indexUUID;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException22, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException22, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException22, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException22, "");
        java.lang.Throwable throwable31 = shardFailure30.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", throwable31, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        java.lang.Throwable throwable34 = shardFailure33.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable34, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable34, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", throwable34, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}", throwable34, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable31.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.readFrom(streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        deleteRequest7.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest7.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.timeout(timeValue11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        long long17 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str23 = shardFailure22.indexUUID;
        java.lang.Throwable throwable24 = shardFailure22.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", throwable24, "");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[null][null][hi!]}][hi!][hi!]}" + "'", str23, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest23.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId31);
        java.lang.String str33 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.versionType(versionType36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException38, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException38, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException38, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[null][null][null]}][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting61 = shardFailure60.routing;
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNull(shardRouting61);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.routing("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.String str15 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.routing("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str18 = deleteRequest0.type();
        java.lang.String str19 = deleteRequest0.id();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest0.versionType();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}" + "'", str15, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str18, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.type("delete {[][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        boolean boolean16 = deleteRequest14.getShouldPersistResult();
        deleteRequest14.primaryTerm((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest24.seqNo((long) 100);
        java.lang.String[] strArray27 = deleteRequest24.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest11.consistencyLevel(writeConsistencyLevel28);
        java.lang.String str30 = deleteRequest11.type();
        java.lang.String str31 = deleteRequest11.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 100);
        long long10 = deleteRequest3.version();
        java.lang.String str11 = deleteRequest3.type();
        deleteRequest3.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}", 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        deleteRequest11.setParentTask(taskId23);
        deleteRequest10.setParentTask(taskId23);
        deleteRequest10.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest10.remoteAddress(transportAddress32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest10.index("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        java.lang.String str40 = deleteRequest36.routing();
        java.lang.String str41 = deleteRequest36.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest36.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = deleteRequest36.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest36.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest36.remoteAddress(transportAddress45);
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest36.getParentTask();
        deleteRequest35.setParentTask(taskId47);
        org.elasticsearch.tasks.Task task49 = deleteRequest3.createTask((-3L), "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}][delete {[null][null][delete {[null][][null]}]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", taskId47);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(writeConsistencyLevel42);
        org.junit.Assert.assertNull(transportAddress43);
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task49);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "", "delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}");
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable37 = shardFailure36.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable37, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", throwable37, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}][delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[][delete {[null][null][hi!]}][]}]}", throwable37, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}", throwable37, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.type("delete {[null][][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[null][][null]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        boolean boolean4 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}", "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}", "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.versionType(versionType10);
        long long12 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest7.indicesOptions();
        boolean boolean14 = deleteRequest7.getShouldPersistResult();
        java.lang.String[] strArray15 = deleteRequest7.indices();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest7.getParentTask();
        org.elasticsearch.tasks.Task task17 = deleteRequest3.createTask((long) (byte) 10, "delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null]}", "delete {[delete {[null][null][null]}][][hi!]}", taskId16);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task17);
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.versionType(versionType29);
        deleteRequest28.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        java.lang.String str34 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.setShardId(shardId37);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        boolean boolean48 = deleteRequest47.getShouldPersistResult();
        java.lang.String str49 = deleteRequest47.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue50);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest3.version(1L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str49, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.index("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        java.lang.String str9 = deleteRequest8.toString();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[][hi!][hi!]}][hi!]}" + "'", str9, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest27.setParentTask(taskId33);
        org.elasticsearch.tasks.Task task35 = deleteRequest22.createTask(10L, "", "delete {[hi!][null][null]}", taskId33);
        org.elasticsearch.tasks.Task task36 = deleteRequest15.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId33);
        deleteRequest3.setParentTask(taskId33);
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest3.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNull(shardId38);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        java.lang.String[] strArray9 = deleteRequest3.indices();
        java.lang.String str10 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.type("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.consistencyLevel(writeConsistencyLevel20);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str21 = deleteRequest15.getDescription();
        boolean boolean22 = deleteRequest15.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.id();
        java.lang.String str26 = deleteRequest24.type();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][hi!][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", throwable2, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str39 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest38.version();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest31.createTask((long) (byte) 0, "", "", taskId43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.setShardId(shardId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        long long48 = deleteRequest47.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.setShardId(shardId51);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        deleteRequest46.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task55 = deleteRequest15.createTask((long) (byte) 100, "delete {[null][null][null]}", "delete {[hi!][null][null]}", taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest4.createTask((long) (byte) 0, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest4.version(0L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][hi!][hi!]}" + "'", str39, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        deleteRequest0.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", 0L);
        deleteRequest0.seqNo((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.type("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        long long9 = deleteRequest6.version();
        long long10 = deleteRequest6.primaryTerm();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", throwable17, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable17, "");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = shardFailure21.routing;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting22);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNull(transportAddress6);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest1.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "hi!", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException40, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][hi!][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable63 = shardFailure62.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][hi!]}", throwable63, "delete {[hi!][null][]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable63.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][null][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        java.lang.String str13 = deleteRequest12.index();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[null][null][null]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", throwable24, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = shardFailure26.routing;
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting28);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        java.lang.String str7 = deleteRequest0.type();
        java.lang.String str8 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.id("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest11.routing();
        java.lang.String str16 = deleteRequest11.index();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        java.lang.String str20 = deleteRequest18.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.parent("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        deleteRequest29.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        long long39 = deleteRequest38.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest48.getParentTask();
        deleteRequest43.setParentTask(taskId49);
        deleteRequest38.setParentTask(taskId49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest38.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest62.getParentTask();
        org.elasticsearch.tasks.Task task64 = deleteRequest55.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId63);
        java.lang.String str65 = deleteRequest55.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType68 = deleteRequest67.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest55.versionType(versionType68);
        java.lang.String str70 = deleteRequest69.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.routing("hi!");
        java.lang.String str73 = deleteRequest72.index();
        long long74 = deleteRequest72.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest78.primaryTerm(10L);
        java.lang.String str81 = deleteRequest78.toString();
        java.lang.String str82 = deleteRequest78.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest76.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest72.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest38.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest29.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest28.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest11.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest0.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.id("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType93 = deleteRequest92.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(task64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[hi!][null][null]}" + "'", str65, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[hi!][null][null]}" + "'", str70, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[hi!][null][null]}" + "'", str81, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "delete {[hi!][null][null]}" + "'", str82, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNull(versionType93);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.routing("hi!");
        java.lang.String str33 = deleteRequest32.index();
        long long34 = deleteRequest32.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest38.primaryTerm(10L);
        java.lang.String str41 = deleteRequest38.toString();
        java.lang.String str42 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest32.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest10.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest10.parent("hi!");
        long long49 = deleteRequest48.version();
        long long50 = deleteRequest48.seqNo();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str11, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][null][null]}" + "'", str30, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-3L) + "'", long49 == (-3L));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 100L + "'", long50 == 100L);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest3.seqNo((long) 100);
        java.lang.String str6 = deleteRequest3.type();
        java.lang.String str7 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        long long22 = deleteRequest18.version();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((long) (byte) 0, "", "", taskId23);
        java.lang.String[] strArray25 = deleteRequest11.indices();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][hi!]}" + "'", str19, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("hi!");
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean33 = deleteRequest30.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest23.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest15.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest1.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest1.id("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest39.versionType();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType41);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        java.lang.String str10 = deleteRequest7.index();
        java.lang.String str11 = deleteRequest7.parent();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        long long7 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 1);
        deleteRequest3.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest3.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        java.lang.String str14 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.id("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}][null][null]}");
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        java.lang.String str4 = deleteRequest3.type();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[null][null][delete {[null][][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[null][][null]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        long long21 = deleteRequest20.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.versionType(versionType25);
        deleteRequest24.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest20.timeout(timeValue29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str35 = deleteRequest34.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.index("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str44 = deleteRequest41.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType50 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.versionType(versionType50);
        deleteRequest49.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest49.timeout();
        java.lang.String str55 = deleteRequest49.id();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest49.setShardId(shardId56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest49.setShardId(shardId58);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest46.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest41.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest20.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest17.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest11.consistencyLevel(writeConsistencyLevel62);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[null][null][null]}", "delete {[][null][null]}");
        deleteRequest3.setParentTask("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.timeout("hi!");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [hi!] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        deleteRequest9.setParentTask(taskId14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest9.remoteAddress();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.index.VersionType versionType5 = deleteRequest0.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        java.lang.String str7 = deleteRequest0.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest0.validate();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException22, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", throwable27, "hi!");
        java.lang.Class<?> wildcardClass30 = shardFailure29.getClass();
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        java.lang.String str2 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("");
        long long10 = deleteRequest5.seqNo();
        java.lang.String str11 = deleteRequest5.parent();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest4.versionType(versionType12);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", "delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}", "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][null][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][][hi!]}");
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("");
        boolean boolean6 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("");
        boolean boolean13 = deleteRequest12.getShouldPersistResult();
        java.lang.String str14 = deleteRequest12.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest16.validate();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str14, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest9.primaryTerm(10L);
        java.lang.String str12 = deleteRequest9.toString();
        java.lang.String str13 = deleteRequest9.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest20.seqNo((-1L));
        java.lang.String str23 = deleteRequest20.toString();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.setShardId(shardId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        deleteRequest29.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue32 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest25.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest16.timeout(timeValue32);
        java.lang.String str36 = deleteRequest16.type();
        java.lang.String str37 = deleteRequest16.routing();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][null][null]}" + "'", str12, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][null][null]}" + "'", str13, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str23, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][hi!]}" + "'", str36, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.index("delete {[delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}][delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[null][null][null]}");
        deleteRequest3.seqNo((long) 1);
        deleteRequest3.setParentTask("delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (long) (byte) 100);
        java.lang.String str9 = deleteRequest3.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest3.remoteAddress();
        long long11 = deleteRequest3.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest3.remoteAddress(transportAddress14);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        java.lang.String str5 = deleteRequest3.type();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str5, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        java.lang.String str8 = deleteRequest4.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        boolean boolean11 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.id("hi!");
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType17 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest4.versionType(versionType17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest4.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        long long26 = deleteRequest21.primaryTerm();
        java.lang.String str27 = deleteRequest21.parent();
        java.lang.String str28 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest21.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue31 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest21.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest21.index("delete {[null][null][hi!]}");
        long long35 = deleteRequest21.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest21.routing("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        deleteRequest45.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", 0L);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.setShardId(shardId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        long long52 = deleteRequest51.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.versionType(versionType56);
        deleteRequest55.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest51.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType74 = deleteRequest73.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId79 = deleteRequest78.getParentTask();
        deleteRequest73.setParentTask(taskId79);
        org.elasticsearch.tasks.Task task81 = deleteRequest68.createTask(10L, "", "delete {[hi!][null][null]}", taskId79);
        org.elasticsearch.tasks.Task task82 = deleteRequest61.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId79);
        deleteRequest45.setParentTask(taskId79);
        deleteRequest37.setParentTask(taskId79);
        deleteRequest4.setParentTask(taskId79);
        long long86 = deleteRequest4.version();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType74);
        org.junit.Assert.assertNotNull(taskId79);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-3L) + "'", long86 == (-3L));
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        boolean boolean8 = deleteRequest6.getShouldPersistResult();
        deleteRequest6.primaryTerm((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        java.lang.String str15 = deleteRequest14.routing();
        java.lang.String str16 = deleteRequest14.type();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}" + "'", str16, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][null][null]}");
        java.lang.Throwable throwable34 = shardFailure33.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", throwable34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable34, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", throwable34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", throwable34, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        java.lang.String str43 = shardFailure42.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}" + "'", str43, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId16);
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        long long26 = deleteRequest25.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        deleteRequest22.setParentTask(taskId31);
        org.elasticsearch.tasks.Task task33 = deleteRequest3.createTask(100L, "hi!", "", taskId31);
        java.lang.String[] strArray34 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.routing("");
        java.lang.String str37 = deleteRequest3.id();
        boolean boolean38 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][hi!][hi!]}" + "'", str37, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][][null]}");
        deleteRequest3.primaryTerm((long) '#');
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest3.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str10, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId11);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.timeout(timeValue31);
        boolean boolean33 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest38.versionType();
        java.lang.String str40 = deleteRequest38.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest41.getParentTask();
        deleteRequest38.setParentTask(taskId44);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest38.versionType();
        java.lang.String str47 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType56 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.versionType(versionType56);
        deleteRequest55.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest55.timeout();
        java.lang.String str61 = deleteRequest55.id();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest55.setShardId(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.setShardId(shardId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        long long67 = deleteRequest66.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str72 = deleteRequest71.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest71.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest74.getParentTask();
        deleteRequest69.setParentTask(taskId77);
        org.elasticsearch.common.unit.TimeValue timeValue79 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest55.timeout(timeValue79);
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest80.getParentTask();
        deleteRequest54.setParentTask(taskId81);
        org.elasticsearch.tasks.Task task83 = deleteRequest38.createTask((long) (byte) 100, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", taskId81);
        org.elasticsearch.tasks.Task task84 = deleteRequest24.createTask(0L, "delete {[][delete {[hi!][null][null]}][]}", "delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}", taskId81);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[hi!][null][null]}" + "'", str47, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(task84);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[][null][null]}");
        java.lang.String str7 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest11.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.version((long) (byte) 1);
        long long18 = deleteRequest11.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task29 = deleteRequest20.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId28);
        java.lang.String str30 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.versionType(versionType33);
        java.lang.String str35 = deleteRequest34.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest34.remoteAddress(transportAddress36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        long long39 = deleteRequest38.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.parent("delete {[][hi!][hi!]}");
        deleteRequest41.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest41.timeout(timeValue44);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest34.timeout(timeValue46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest11.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest6.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        long long52 = deleteRequest51.seqNo();
        boolean boolean53 = deleteRequest51.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.parent("hi!");
        org.elasticsearch.index.VersionType versionType56 = deleteRequest51.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = deleteRequest51.remoteAddress();
        java.lang.String str58 = deleteRequest51.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel59 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest6.consistencyLevel(writeConsistencyLevel59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = deleteRequest60.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}" + "'", str7, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][null][null]}" + "'", str30, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(versionType56);
        org.junit.Assert.assertNull(transportAddress57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel59 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel59.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(actionRequestValidationException61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.versionType(versionType22);
        deleteRequest21.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest21.timeout();
        java.lang.String str27 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.version(1L);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str35 = deleteRequest34.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.consistencyLevel(writeConsistencyLevel36);
        long long38 = deleteRequest34.version();
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest34.getParentTask();
        deleteRequest29.setParentTask(taskId39);
        org.elasticsearch.tasks.Task task41 = deleteRequest15.createTask((-1L), "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[][null][null]}", taskId39);
        org.elasticsearch.tasks.Task task42 = deleteRequest0.createTask((long) 100, "delete {[null][][null]}", "delete {[null][null][null]}", taskId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str47 = deleteRequest46.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.consistencyLevel(writeConsistencyLevel48);
        boolean boolean50 = deleteRequest49.getShouldPersistResult();
        java.lang.String str51 = deleteRequest49.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        long long53 = deleteRequest52.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.parent("delete {[][hi!][hi!]}");
        deleteRequest55.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest55.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest55.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest49.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest0.timeout(timeValue59);
        long long62 = deleteRequest61.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(versionType30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[][hi!][hi!]}" + "'", str35, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-3L) + "'", long38 == (-3L));
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[][hi!][hi!]}" + "'", str47, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        java.lang.String str14 = deleteRequest10.parent();
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest10.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", "delete {[null][null][delete {[][null][null]}]}");
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        boolean boolean5 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest18.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId26);
        java.lang.String str28 = deleteRequest18.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.versionType(versionType31);
        java.lang.String str33 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.routing("hi!");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest16.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.versionType(versionType36);
        java.lang.String str39 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.type("");
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        long long7 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setShardId(shardId12);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str25 = deleteRequest19.getDescription();
        boolean boolean26 = deleteRequest19.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest19.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.getDescription();
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}][delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][]}" + "'", str31, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}][delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][]}");
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        deleteRequest3.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("");
        java.lang.String str19 = deleteRequest18.parent();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest18.timeout();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest11.createTask((long) (short) 1, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", taskId21);
        java.lang.String str23 = deleteRequest11.id();
        java.lang.String str24 = deleteRequest11.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][hi!][hi!]}][null][null]}" + "'", str24, "delete {[delete {[][hi!][hi!]}][null][null]}");
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("delete {[][hi!][hi!]}");
        deleteRequest12.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest12.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest12.consistencyLevel();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.versionType(versionType18);
        java.lang.String[] strArray20 = deleteRequest19.indices();
        long long21 = deleteRequest19.version();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-3L) + "'", long21 == (-3L));
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        long long2 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.routing("delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.parent("delete {[hi!][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest11, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str21 = deleteRequest15.getDescription();
        java.lang.String str22 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        long long25 = deleteRequest15.version();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-3L) + "'", long25 == (-3L));
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        java.lang.String str31 = deleteRequest30.index();
        long long32 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest36.primaryTerm(10L);
        java.lang.String str39 = deleteRequest36.toString();
        java.lang.String str40 = deleteRequest36.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest45.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId53);
        java.lang.String str55 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.versionType(versionType58);
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.routing("hi!");
        java.lang.String str63 = deleteRequest62.index();
        long long64 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest68.primaryTerm(10L);
        java.lang.String str71 = deleteRequest68.toString();
        java.lang.String str72 = deleteRequest68.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest66.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest62.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest30.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest3.consistencyLevel(writeConsistencyLevel73);
        deleteRequest77.setParentTask("delete {[null][null][null]}", (long) (byte) 10);
        java.lang.String str81 = deleteRequest77.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest77.parent("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue88 = deleteRequest87.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest83.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.index("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId93 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest92.setShardId(shardId93);
        long long95 = deleteRequest94.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress96 = deleteRequest94.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][null][null]}" + "'", str39, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[hi!][null][null]}" + "'", str55, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][null][null]}" + "'", str60, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[hi!][null][null]}" + "'", str71, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[hi!][null][null]}" + "'", str72, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[hi!][null][null]}" + "'", str81, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
        org.junit.Assert.assertNull(transportAddress96);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException26, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = shardFailure32.routing;
        java.lang.Throwable throwable34 = shardFailure32.cause;
        java.lang.Throwable throwable35 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][null]}", throwable35, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", throwable35, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNull(shardRouting33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable34.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.versionType(versionType25);
        deleteRequest24.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest24.timeout();
        java.lang.String str30 = deleteRequest24.id();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.setShardId(shardId31);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest24.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        long long36 = deleteRequest35.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str41 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest43.getParentTask();
        deleteRequest38.setParentTask(taskId46);
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest24.timeout(timeValue48);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str62 = deleteRequest61.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest56.createTask((long) (short) 1, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!", taskId67);
        deleteRequest52.setParentTask(taskId67);
        org.elasticsearch.tasks.Task task70 = deleteRequest18.createTask((long) (short) 10, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", taskId67);
        deleteRequest0.setParentTask(taskId67);
        long long72 = deleteRequest0.version();
        org.elasticsearch.index.VersionType versionType73 = deleteRequest0.versionType();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-3L) + "'", long72 == (-3L));
        org.junit.Assert.assertNotNull(versionType73);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.refresh(false);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        java.lang.String str10 = deleteRequest5.getDescription();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest5.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}" + "'", str10, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        java.lang.Throwable throwable55 = shardFailure54.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", throwable55, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable55.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest14.version();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest4.createTask(10L, "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest4.createTask((long) (short) 1, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest45.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId53);
        long long55 = deleteRequest45.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        long long57 = deleteRequest56.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.versionType(versionType61);
        deleteRequest60.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest56.timeout(timeValue65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest45.timeout(timeValue65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest4.timeout(timeValue65);
        boolean boolean69 = deleteRequest4.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest4.refresh(false);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest4.getParentTask();
        java.lang.String str73 = deleteRequest4.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "delete {[hi!][][null]}" + "'", str73, "delete {[hi!][][null]}");
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest4.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest4.remoteAddress(transportAddress8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.setShardId(shardId10);
        deleteRequest4.seqNo((long) 100);
        boolean boolean14 = deleteRequest4.refresh();
        java.lang.String str15 = deleteRequest4.toString();
        java.lang.String str16 = deleteRequest4.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest4.type("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(true);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        java.lang.String[] strArray26 = deleteRequest22.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId31 = null;
        deleteRequest30.setParentTask(taskId31);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.versionType(versionType38);
        long long40 = deleteRequest35.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest35.indicesOptions();
        long long42 = deleteRequest35.version();
        boolean boolean43 = deleteRequest35.getShouldPersistResult();
        deleteRequest35.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", 0L);
        java.lang.String str47 = deleteRequest35.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest34.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest4.timeout(timeValue48);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][null][null]}" + "'", str15, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        java.lang.String str9 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.parent("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest14.getParentTask();
        deleteRequest11.setParentTask(taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.routing("delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest21.consistencyLevel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", "delete {[hi!][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        deleteRequest3.seqNo((long) '#');
        long long7 = deleteRequest3.seqNo();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 35L + "'", long7 == 35L);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long10 = deleteRequest7.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][null][null]}", "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        long long13 = deleteRequest12.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.setShardId(shardId16);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest15.indicesOptions();
        boolean boolean19 = deleteRequest15.refresh();
        java.lang.String str20 = deleteRequest15.type();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.timeout(timeValue21);
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.index("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.setShardId(shardId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        java.lang.String str34 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest35.getParentTask();
        deleteRequest32.setParentTask(taskId38);
        org.elasticsearch.tasks.Task task40 = deleteRequest27.createTask((long) 1, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", taskId38);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str23, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task40);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest0.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId20);
        deleteRequest9.setParentTask(taskId20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest9.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest26.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId34);
        java.lang.String str36 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest26.versionType(versionType39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.routing("hi!");
        java.lang.String str44 = deleteRequest43.index();
        long long45 = deleteRequest43.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest49.primaryTerm(10L);
        java.lang.String str52 = deleteRequest49.toString();
        java.lang.String str53 = deleteRequest49.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest47.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest43.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest9.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest0.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.index.shard.ShardId shardId59 = deleteRequest58.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.setShardId(shardId63);
        org.elasticsearch.tasks.TaskId taskId65 = null;
        deleteRequest62.setParentTask(taskId65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest62.index("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[hi!][null][null]}" + "'", str52, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][null][null]}" + "'", str53, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        java.lang.String str31 = deleteRequest30.index();
        long long32 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest36.primaryTerm(10L);
        java.lang.String str39 = deleteRequest36.toString();
        java.lang.String str40 = deleteRequest36.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest45.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId53);
        java.lang.String str55 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.versionType(versionType58);
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.routing("hi!");
        java.lang.String str63 = deleteRequest62.index();
        long long64 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest68.primaryTerm(10L);
        java.lang.String str71 = deleteRequest68.toString();
        java.lang.String str72 = deleteRequest68.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest66.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest62.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest30.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest3.consistencyLevel(writeConsistencyLevel73);
        boolean boolean78 = deleteRequest77.refresh();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][null][null]}" + "'", str39, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[hi!][null][null]}" + "'", str55, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][null][null]}" + "'", str60, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[hi!][null][null]}" + "'", str71, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[hi!][null][null]}" + "'", str72, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[hi!][][null]}");
        long long4 = deleteRequest3.version();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str24 = deleteRequest21.id();
        java.lang.String[] strArray25 = deleteRequest21.indices();
        long long26 = deleteRequest21.version();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-3L) + "'", long26 == (-3L));
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest1.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.routing("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        java.lang.String[] strArray9 = deleteRequest8.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.consistencyLevel(writeConsistencyLevel12);
        java.lang.String str14 = deleteRequest10.routing();
        java.lang.String str15 = deleteRequest10.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest10.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest10.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest19.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest8.versionType(versionType26);
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest27.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(writeConsistencyLevel16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(indicesOptions28);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.versionType(versionType9);
        deleteRequest8.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        deleteRequest3.setParentTask(taskId19);
        java.lang.String str21 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest25.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.refresh(false);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.versionType(versionType30);
        org.elasticsearch.index.shard.IndexShard indexShard32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete33 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        deleteRequest3.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.versionType(versionType13);
        deleteRequest12.primaryTerm((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest12.remoteAddress();
        java.lang.String str18 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.index("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest26.writeTo(streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest2.remoteAddress(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        long long20 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest24.primaryTerm(10L);
        java.lang.String str27 = deleteRequest24.toString();
        java.lang.String str28 = deleteRequest24.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest33.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId41);
        java.lang.String str43 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest33.versionType(versionType46);
        java.lang.String str48 = deleteRequest47.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.routing("hi!");
        java.lang.String str51 = deleteRequest50.index();
        long long52 = deleteRequest50.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest56.primaryTerm(10L);
        java.lang.String str59 = deleteRequest56.toString();
        java.lang.String str60 = deleteRequest56.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest54.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest18.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("delete {[null][null][null]}");
        java.lang.String str67 = deleteRequest64.type();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.setShardId(shardId68);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.setShardId(shardId70);
        long long72 = deleteRequest71.version();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][null][null]}" + "'", str43, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][null][null]}" + "'", str48, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[hi!][null][null]}" + "'", str59, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][null][null]}" + "'", str60, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[null][null][null]}" + "'", str67, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-3L) + "'", long72 == (-3L));
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId20);
        org.elasticsearch.tasks.Task task22 = deleteRequest7.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        deleteRequest7.setParentTask(taskId27);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest34.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest14.getDescription();
        java.lang.String[] strArray16 = deleteRequest14.indices();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}" + "'", str15, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("");
        java.lang.String str21 = deleteRequest18.parent();
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest18, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.index("delete {[null][null][delete {[null][][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.routing("hi!");
        java.lang.String str33 = deleteRequest32.index();
        long long34 = deleteRequest32.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest38.primaryTerm(10L);
        java.lang.String str41 = deleteRequest38.toString();
        java.lang.String str42 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest32.consistencyLevel(writeConsistencyLevel43);
        boolean boolean46 = deleteRequest32.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType50 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        long long52 = deleteRequest47.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest32.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest11.timeout(timeValue53);
        java.lang.String str56 = deleteRequest11.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.versionType(versionType61);
        deleteRequest60.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest60.timeout();
        java.lang.String str66 = deleteRequest60.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest60.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest68.refresh(true);
        java.lang.String str72 = deleteRequest71.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType76 = deleteRequest73.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest71.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        long long82 = deleteRequest81.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest81.parent("delete {[][hi!][hi!]}");
        java.lang.String str85 = deleteRequest84.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest84.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.routing("delete {[][hi!][hi!]}");
        java.lang.String str90 = deleteRequest87.getDescription();
        org.elasticsearch.tasks.TaskId taskId91 = deleteRequest87.getParentTask();
        org.elasticsearch.tasks.Task task92 = deleteRequest71.createTask((-3L), "", "delete {[][][delete {[][hi!][hi!]}]}", taskId91);
        java.lang.String str93 = deleteRequest71.id();
        org.elasticsearch.tasks.TaskId taskId94 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.Task task95 = deleteRequest11.createTask(100L, "delete {[null][][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", taskId94);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][null][null]}" + "'", str30, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str56, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "delete {[hi!][null][null]}" + "'", str90, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId91);
        org.junit.Assert.assertNotNull(task92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(taskId94);
        org.junit.Assert.assertNotNull(task95);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest18.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId26);
        java.lang.String str28 = deleteRequest18.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.versionType(versionType31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest18.remoteAddress();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.versionType(versionType34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.id("delete {[delete {[delete {[hi!][null][null]}][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType12 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.versionType(versionType12);
        long long14 = deleteRequest9.primaryTerm();
        java.lang.String str15 = deleteRequest9.parent();
        java.lang.String str16 = deleteRequest9.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue19 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest9.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str25 = deleteRequest22.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        java.lang.String str28 = deleteRequest27.parent();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        boolean boolean16 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version(10L);
        org.elasticsearch.index.shard.IndexShard indexShard21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete22 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest20, indexShard21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[hi!][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean9 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.versionType(versionType15);
        deleteRequest14.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest14.timeout();
        java.lang.String str20 = deleteRequest14.id();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest14.setShardId(shardId21);
        java.lang.String str23 = deleteRequest14.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest29.timeout(timeValue34);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest29.remoteAddress(transportAddress36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest39.primaryTerm(10L);
        java.lang.String str42 = deleteRequest39.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest39.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.refresh(true);
        java.lang.String str51 = deleteRequest48.parent();
        java.lang.String str52 = deleteRequest48.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest56.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest48.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray66 = deleteRequest65.indices();
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest65.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest48.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest13.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest3.timeout(timeValue67);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[][hi!][hi!]}");
        deleteRequest16.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest16.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.versionType(versionType24);
        deleteRequest23.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest23.timeout();
        java.lang.String str29 = deleteRequest23.id();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.timeout(timeValue30);
        java.lang.String str32 = deleteRequest3.parent();
        java.lang.String str33 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.id("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str25 = deleteRequest24.getDescription();
        java.lang.String str26 = deleteRequest24.index();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}" + "'", str25, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version(97L);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.version(10L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", "delete {[null][null][hi!]}", "delete {[null][][null]}");
        deleteRequest3.seqNo(0L);
        long long6 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest16.setParentTask(taskId22);
        deleteRequest11.setParentTask(taskId22);
        deleteRequest11.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        long long28 = deleteRequest27.seqNo();
        boolean boolean29 = deleteRequest27.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest11.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest10.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.versionType(versionType35);
        deleteRequest34.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest34.timeout();
        java.lang.String str40 = deleteRequest34.id();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.setShardId(shardId41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest34.setShardId(shardId43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        long long46 = deleteRequest45.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str51 = deleteRequest50.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest53.getParentTask();
        deleteRequest48.setParentTask(taskId56);
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest34.timeout(timeValue58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest60.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType76 = deleteRequest75.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId81 = deleteRequest80.getParentTask();
        deleteRequest75.setParentTask(taskId81);
        org.elasticsearch.tasks.Task task83 = deleteRequest68.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        deleteRequest68.setParentTask(taskId88);
        deleteRequest60.setParentTask(taskId88);
        deleteRequest34.setParentTask(taskId88);
        deleteRequest33.setParentTask(taskId88);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(taskId81);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(taskId88);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        java.lang.String str4 = deleteRequest1.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.timeout(timeValue13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest8.remoteAddress(transportAddress15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.routing("");
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest18.versionType();
        boolean boolean21 = deleteRequest18.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        long long24 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest28.seqNo((-1L));
        java.lang.String str31 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str34 = deleteRequest33.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.versionType(versionType36);
        deleteRequest35.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest33.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest28.timeout(timeValue40);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest28.getParentTask();
        org.elasticsearch.index.VersionType versionType44 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest18.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest1.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.routing("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str31, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.version((-1L));
        java.lang.String str18 = deleteRequest17.type();
        long long19 = deleteRequest17.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.id("hi!");
        boolean boolean22 = deleteRequest17.refresh();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.versionType(versionType29);
        deleteRequest28.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        java.lang.String str34 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.setShardId(shardId37);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        boolean boolean48 = deleteRequest47.getShouldPersistResult();
        java.lang.String str49 = deleteRequest47.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue50);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = deleteRequest3.validate();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str49, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest3.validate();
        java.lang.String str6 = deleteRequest3.parent();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}][delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest23.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId31);
        java.lang.String str33 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.versionType(versionType36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable47 = shardFailure46.cause;
        java.lang.Throwable throwable48 = shardFailure46.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[delete {[][hi!][hi!]}][null][null]}", throwable48, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable48, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", throwable48, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", throwable48, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", throwable48, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", throwable48, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable48, "delete {[null][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable48.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest19.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest10.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId23);
        org.elasticsearch.tasks.Task task25 = deleteRequest3.createTask((long) (short) 1, "", "", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.parent("delete {[null][null][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(indicesOptions28);
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.routing("delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        long long16 = deleteRequest15.primaryTerm();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.timeout("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}" + "'", str4, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.consistencyLevel(writeConsistencyLevel7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        java.lang.String str10 = deleteRequest8.parent();
        java.lang.String str11 = deleteRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.routing("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        java.lang.Class<?> wildcardClass17 = deleteRequest8.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest3.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}" + "'", str4, "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertNotNull(timeValue5);
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest6.consistencyLevel();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        boolean boolean17 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version((long) 'a');
        boolean boolean21 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest20.remoteAddress(transportAddress22);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task17 = deleteRequest3.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId16);
        java.lang.String str18 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.index("delete {[null][null][null]}");
        java.lang.String str21 = deleteRequest20.toString();
        java.lang.String str22 = deleteRequest20.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}" + "'", str21, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}" + "'", str22, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task17 = deleteRequest3.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId16);
        java.lang.String str18 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest24.seqNo((-1L));
        java.lang.String str27 = deleteRequest24.toString();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.setShardId(shardId28);
        deleteRequest29.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest29.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.version((long) 'a');
        java.lang.String str35 = deleteRequest29.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest29.remoteAddress(transportAddress36);
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = deleteRequest29.indicesOptions();
        org.elasticsearch.index.VersionType versionType39 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest20.versionType(versionType39);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str27, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][delete {[null][null][null]}]}", "delete {[null][delete {[null][null][hi!]}][null]}", "delete {[null][][null]}");
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(true);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.versionType(versionType10);
        deleteRequest3.setParentTask("delete {[delete {[][hi!][hi!]}][null][null]}", (long) (byte) -1);
        java.lang.String[] strArray15 = deleteRequest3.indices();
        deleteRequest3.seqNo(32L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest3.primaryTerm(10L);
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        long long16 = deleteRequest11.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.versionType(versionType21);
        java.lang.String str23 = deleteRequest22.routing();
        long long24 = deleteRequest22.version();
        java.lang.String str25 = deleteRequest22.type();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest1.versionType(versionType26);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-3L) + "'", long24 == (-3L));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        boolean boolean1 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][]}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        java.lang.String str7 = deleteRequest6.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest6.remoteAddress();
        deleteRequest6.setParentTask("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.index("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str23 = deleteRequest20.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.versionType(versionType26);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest20.remoteAddress(transportAddress28);
        long long30 = deleteRequest20.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.versionType(versionType32);
        deleteRequest31.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest31.timeout();
        java.lang.String str37 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.index("delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest31.setShardId(shardId40);
        deleteRequest41.setParentTask("delete {[][hi!][hi!]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.versionType(versionType58);
        deleteRequest57.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest57.timeout();
        java.lang.String str63 = deleteRequest57.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest57.version(1L);
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str71 = deleteRequest70.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.consistencyLevel(writeConsistencyLevel72);
        long long74 = deleteRequest70.version();
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest70.getParentTask();
        deleteRequest65.setParentTask(taskId75);
        org.elasticsearch.tasks.Task task77 = deleteRequest51.createTask((-1L), "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[][null][null]}", taskId75);
        org.elasticsearch.tasks.Task task78 = deleteRequest41.createTask(0L, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}", taskId75);
        deleteRequest20.setParentTask(taskId75);
        deleteRequest6.setParentTask(taskId75);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}" + "'", str7, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(versionType66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[][hi!][hi!]}" + "'", str71, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-3L) + "'", long74 == (-3L));
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(task78);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[][hi!][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}", "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        deleteRequest3.seqNo((-3L));
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress9);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        boolean boolean5 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(writeConsistencyLevel8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str4 = deleteRequest3.toString();
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][null][null]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        java.lang.String str16 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        boolean boolean19 = deleteRequest17.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.id("hi!");
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.refresh(true);
        java.lang.String str32 = deleteRequest31.routing();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][null][null]}" + "'", str32, "delete {[][null][null]}");
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest6.refresh();
        java.lang.String str8 = deleteRequest6.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str8, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.consistencyLevel(writeConsistencyLevel4);
        long long6 = deleteRequest3.seqNo();
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.String str5 = deleteRequest4.type();
        boolean boolean6 = deleteRequest4.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        long long26 = deleteRequest24.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest2.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        long long30 = deleteRequest29.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.parent("delete {[][hi!][hi!]}");
        deleteRequest32.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue35 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.timeout(timeValue35);
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest32.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest2.versionType(versionType42);
        org.elasticsearch.index.shard.ShardId shardId45 = deleteRequest44.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions46 = deleteRequest44.indicesOptions();
        long long47 = deleteRequest44.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(indicesOptions46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest1.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest1.validate();
        boolean boolean6 = deleteRequest1.getShouldPersistResult();
        deleteRequest1.setParentTask("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[][hi!][hi!]}][hi!]}", (long) 10);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        boolean boolean8 = deleteRequest7.getShouldPersistResult();
        java.lang.String str9 = deleteRequest7.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.refresh(false);
        java.lang.String str12 = deleteRequest11.index();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str9, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        java.lang.String str37 = shardFailure36.indexUUID;
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}" + "'", str37, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        java.lang.String str6 = deleteRequest0.parent();
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][null][null]}");
        long long16 = deleteRequest13.seqNo();
        deleteRequest13.primaryTerm((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.type("delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str14 = deleteRequest13.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        long long17 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId18);
        boolean boolean20 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str31 = deleteRequest30.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.consistencyLevel(writeConsistencyLevel32);
        boolean boolean34 = deleteRequest33.getShouldPersistResult();
        java.lang.String str35 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.parent("delete {[][hi!][hi!]}");
        deleteRequest39.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest8.timeout(timeValue43);
        long long47 = deleteRequest8.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(versionType9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][hi!][hi!]}" + "'", str31, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1L + "'", long47 == 1L);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[][delete {[null][null][hi!]}][]}][]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        java.lang.Throwable throwable30 = shardFailure29.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", throwable30, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][null][null]}", throwable30, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[null][][null]}", "delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        long long9 = deleteRequest3.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest20.primaryTerm(10L);
        java.lang.String str23 = deleteRequest20.toString();
        java.lang.String str24 = deleteRequest20.toString();
        boolean boolean25 = deleteRequest20.refresh();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest14.createTask((long) (byte) 1, "delete {[hi!][null][null]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", taskId26);
        deleteRequest3.setParentTask(taskId26);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest3.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue30);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType3 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.versionType(versionType3);
        deleteRequest2.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest2.timeout();
        java.lang.String str8 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.version(1L);
        java.lang.String str11 = deleteRequest10.getDescription();
        boolean boolean12 = deleteRequest10.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        java.lang.String str19 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest14.version();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest4.createTask(10L, "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest4.createTask((long) (short) 1, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", taskId40);
        java.lang.String str44 = deleteRequest4.parent();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest4.setShardId(shardId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        long long48 = deleteRequest47.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.versionType(versionType52);
        deleteRequest51.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest47.timeout(timeValue56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str62 = deleteRequest61.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest61.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.index("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str71 = deleteRequest68.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType77 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.versionType(versionType77);
        deleteRequest76.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue81 = deleteRequest76.timeout();
        java.lang.String str82 = deleteRequest76.id();
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest76.setShardId(shardId83);
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest76.setShardId(shardId85);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel87 = deleteRequest76.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest73.consistencyLevel(writeConsistencyLevel87);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest88.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest68.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest47.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest4.consistencyLevel(writeConsistencyLevel89);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel87 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel87.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        java.lang.Throwable throwable47 = shardFailure46.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}", throwable47, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable33 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable33, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", throwable33, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str38 = shardFailure37.indexUUID;
        java.lang.Throwable throwable39 = shardFailure37.cause;
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version(10L);
        boolean boolean14 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest3.remoteAddress(transportAddress15);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        java.lang.String str53 = shardFailure52.indexUUID;
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}" + "'", str53, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest19.setParentTask(taskId25);
        org.elasticsearch.tasks.Task task27 = deleteRequest12.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest12.setParentTask(taskId32);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest6.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.refresh(true);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.versionType(versionType42);
        java.lang.String[] strArray44 = deleteRequest35.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str49 = deleteRequest48.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        long long51 = deleteRequest50.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.versionType(versionType55);
        deleteRequest54.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest50.timeout(timeValue59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType73 = deleteRequest72.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest77.getParentTask();
        deleteRequest72.setParentTask(taskId78);
        org.elasticsearch.tasks.Task task80 = deleteRequest67.createTask(10L, "", "delete {[hi!][null][null]}", taskId78);
        org.elasticsearch.tasks.Task task81 = deleteRequest60.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId78);
        deleteRequest48.setParentTask(taskId78);
        deleteRequest35.setParentTask(taskId78);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[null][null][null]}" + "'", str49, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType73);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(task81);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) (byte) 100);
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest17.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}][null]}", "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}");
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException13, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        deleteRequest21.primaryTerm((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest21.timeout();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str22, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) '#');
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest6.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.versionType(versionType11);
        long long13 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        long long15 = deleteRequest8.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest8.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str18 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest22.seqNo((-1L));
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.setShardId(shardId25);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest6.validate();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-3L) + "'", long15 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(actionRequestValidationException30);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.routing("delete {[hi!][null][null]}");
        deleteRequest2.primaryTerm((long) 'a');
        deleteRequest2.setParentTask("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (long) 1);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest2.versionType();
        java.lang.String[] strArray11 = deleteRequest2.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(versionType10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        java.lang.String[] strArray14 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.versionType(versionType19);
        deleteRequest18.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.timeout(timeValue23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest16.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId39 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task40 = deleteRequest31.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId39);
        java.lang.String str41 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest31.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest47.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId55);
        java.lang.String str57 = deleteRequest47.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType60 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest47.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest45.versionType(versionType60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest28.versionType(versionType60);
        org.elasticsearch.index.VersionType versionType64 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest0.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.refresh(true);
        java.lang.String str68 = deleteRequest65.index();
        java.lang.String str69 = deleteRequest65.index();
        long long70 = deleteRequest65.version();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(taskId39);
        org.junit.Assert.assertNotNull(task40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[hi!][null][null]}" + "'", str57, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-3L) + "'", long70 == (-3L));
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str4 = deleteRequest3.id();
        deleteRequest3.primaryTerm((long) (byte) 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        deleteRequest15.setParentTask(taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.index("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest24.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest10.consistencyLevel(writeConsistencyLevel38);
        long long41 = deleteRequest40.seqNo();
        java.lang.String str42 = deleteRequest40.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.refresh(true);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str42, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest18.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId26);
        java.lang.String str28 = deleteRequest18.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.versionType(versionType31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = deleteRequest18.remoteAddress();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.versionType(versionType34);
        java.lang.String str36 = deleteRequest9.toString();
        java.lang.String str37 = deleteRequest9.parent();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(transportAddress33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[null][][null]}" + "'", str36, "delete {[null][][null]}");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][null]}", "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][null][null]}");
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "hi!", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", throwable39, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        java.lang.Throwable throwable42 = shardFailure41.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable42, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable42, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", throwable42, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", throwable42, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", throwable42, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}", throwable42, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable42, "delete {[][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", throwable42, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable42.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "hi!", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        java.lang.String str45 = shardFailure44.indexUUID;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}" + "'", str45, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.type("hi!");
        org.elasticsearch.tasks.TaskId taskId43 = null;
        org.elasticsearch.tasks.Task task44 = deleteRequest39.createTask((long) (short) 10, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[][null][null]}", taskId43);
        deleteRequest39.setParentTask("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", 97L);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(task44);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException24, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException24, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = shardFailure30.routing;
        java.lang.Throwable throwable32 = shardFailure30.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable32, "hi!");
        java.lang.String str35 = shardFailure34.indexUUID;
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNull(shardRouting31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable32.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str8 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.consistencyLevel(writeConsistencyLevel9);
        long long11 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version((long) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.version((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.version((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.id("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        long long50 = deleteRequest49.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.setShardId(shardId53);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest54.getParentTask();
        deleteRequest46.setParentTask(taskId55);
        org.elasticsearch.tasks.Task task57 = deleteRequest27.createTask(100L, "hi!", "", taskId55);
        org.elasticsearch.tasks.Task task58 = deleteRequest13.createTask((long) (short) 10, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", taskId55);
        deleteRequest3.setParentTask(taskId55);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][hi!]}" + "'", str8, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(task58);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[null][][null]}", "delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        long long8 = deleteRequest6.seqNo();
        java.lang.String str9 = deleteRequest6.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest6.remoteAddress();
        deleteRequest6.setParentTask("delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (long) (byte) 0);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest6.getParentTask();
        java.lang.String str15 = deleteRequest6.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest22.primaryTerm(10L);
        java.lang.String str25 = deleteRequest22.toString();
        java.lang.String str26 = deleteRequest22.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest20.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest20.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        long long32 = deleteRequest31.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.versionType(versionType36);
        deleteRequest35.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest31.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest52.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        long long61 = deleteRequest60.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest60.parent("delete {[][hi!][hi!]}");
        deleteRequest63.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest63.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest56.createTask(0L, "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", taskId66);
        org.elasticsearch.tasks.Task task68 = deleteRequest45.createTask((long) (byte) 0, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", taskId66);
        org.elasticsearch.tasks.Task task69 = deleteRequest6.createTask((long) (short) 100, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}", taskId66);
        java.lang.String str70 = deleteRequest6.getDescription();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "delete {[null][null][hi!]}" + "'", str70, "delete {[null][null][hi!]}");
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", "delete {[null][null][delete {[null][][null]}]}", "");
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.versionType(versionType13);
        deleteRequest12.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (short) 0);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", "delete {[null][delete {[][null][null]}][null]}");
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest1.parent("");
        java.lang.String str14 = deleteRequest1.getDescription();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][null][null]}" + "'", str14, "delete {[hi!][null][null]}");
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.setShardId(shardId29);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest30.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest5.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest5.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}" + "'", str33, "delete {[hi!][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest3.primaryTerm(10L);
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest23.primaryTerm(10L);
        java.lang.String str26 = deleteRequest23.toString();
        java.lang.String str27 = deleteRequest23.toString();
        boolean boolean28 = deleteRequest23.refresh();
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest17.createTask((long) (byte) 1, "delete {[hi!][null][null]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest1.createTask((long) (byte) -1, "", "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", taskId29);
        java.lang.String str32 = deleteRequest1.parent();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][null][null]}" + "'", str7, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        long long5 = deleteRequest0.version();
        java.lang.String str6 = deleteRequest0.parent();
        java.lang.String str7 = deleteRequest0.getDescription();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest9.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.versionType(versionType18);
        long long20 = deleteRequest15.primaryTerm();
        org.elasticsearch.index.VersionType versionType21 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest9.versionType(versionType21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest9.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.versionType(versionType25);
        deleteRequest24.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest24.timeout();
        java.lang.String str30 = deleteRequest24.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.version(1L);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str38 = deleteRequest37.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.consistencyLevel(writeConsistencyLevel39);
        long long41 = deleteRequest37.version();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest37.getParentTask();
        deleteRequest32.setParentTask(taskId42);
        boolean boolean44 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = deleteRequest32.remoteAddress();
        boolean boolean46 = deleteRequest32.getShouldPersistResult();
        boolean boolean47 = deleteRequest32.getShouldPersistResult();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest9.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest9.refresh(true);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(versionType33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[][hi!][hi!]}" + "'", str38, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-3L) + "'", long41 == (-3L));
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(transportAddress45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest3.seqNo((long) 100);
        java.lang.String str6 = deleteRequest3.type();
        java.lang.String str7 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest3.versionType();
        deleteRequest3.primaryTerm(52L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType9);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest9.readFrom(streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        java.lang.String str15 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest9.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.timeout(timeValue29);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest24.remoteAddress(transportAddress31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest34.primaryTerm(10L);
        java.lang.String str37 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType40 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest9.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(true);
        java.lang.String str46 = deleteRequest43.parent();
        java.lang.String str47 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest43.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray61 = deleteRequest60.indices();
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest43.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest8.timeout(timeValue62);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = deleteRequest65.consistencyLevel();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str9 = deleteRequest3.routing();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.setShardId(shardId10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str9, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        long long7 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.routing("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.setShardId(shardId28);
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        deleteRequest23.setParentTask(taskId30);
        deleteRequest18.setParentTask(taskId30);
        deleteRequest17.setParentTask(taskId30);
        deleteRequest17.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest17.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        deleteRequest17.remoteAddress(transportAddress39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest17.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "");
        boolean boolean49 = deleteRequest48.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest44.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest9.timeout(timeValue50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest9.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        boolean boolean55 = deleteRequest54.getShouldPersistResult();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable35, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable35, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}", throwable35, "delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = shardFailure41.routing;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting42);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "", "delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNull(transportAddress4);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.getDescription();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.setShardId(shardId6);
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest1.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        java.lang.String str8 = deleteRequest4.parent();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest4.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest4.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest4.remoteAddress(transportAddress11);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.version((-3L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest11.seqNo((-1L));
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.versionType(versionType19);
        deleteRequest18.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest16.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest7.timeout(timeValue23);
        java.lang.String str27 = deleteRequest26.parent();
        java.lang.String[] strArray28 = deleteRequest26.indices();
        java.lang.String str29 = deleteRequest26.type();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean17 = deleteRequest14.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest14.consistencyLevel();
        long long19 = deleteRequest14.seqNo();
        java.lang.String str20 = deleteRequest14.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException21, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}");
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[null][][null]}]}", "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}", "delete {[][hi!][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException24, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        java.lang.String str15 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest9.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.timeout(timeValue29);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest24.remoteAddress(transportAddress31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest34.primaryTerm(10L);
        java.lang.String str37 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType40 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest24.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest9.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(true);
        java.lang.String str46 = deleteRequest43.parent();
        java.lang.String str47 = deleteRequest43.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest51.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest43.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray61 = deleteRequest60.indices();
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest58.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest43.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest8.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest8.routing("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest69.getParentTask();
        deleteRequest8.setParentTask(taskId70);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId70);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str2 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("hi!");
        java.lang.String str5 = deleteRequest4.type();
        boolean boolean6 = deleteRequest4.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str9 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest11.consistencyLevel();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        long long17 = deleteRequest16.seqNo();
        boolean boolean18 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.id("hi!");
        boolean boolean23 = deleteRequest22.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.versionType(versionType24);
        java.lang.String str27 = deleteRequest26.parent();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.id("");
        long long11 = deleteRequest6.version();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest6.validate();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        boolean boolean8 = deleteRequest6.getShouldPersistResult();
        long long9 = deleteRequest6.primaryTerm();
        long long10 = deleteRequest6.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.parent("delete {[][hi!][hi!]}");
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.timeout(timeValue17);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException9, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest6.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.setShardId(shardId8);
        java.lang.String str10 = deleteRequest6.id();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest14.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest14.remoteAddress(transportAddress37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest14.id("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest14.setShardId(shardId41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest14.type("delete {[null][null][delete {[null][][null]}]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.id("");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask((long) (byte) 0, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[][null][null]}", taskId15);
        deleteRequest3.seqNo((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.versionType(versionType25);
        long long27 = deleteRequest22.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest22.indicesOptions();
        long long29 = deleteRequest22.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest22.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        long long35 = deleteRequest34.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.setShardId(shardId38);
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest37.indicesOptions();
        boolean boolean41 = deleteRequest37.refresh();
        java.lang.String str42 = deleteRequest37.type();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest33.createTask((long) '#', "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "", taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest3.createTask((long) (short) 1, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", "", taskId50);
        boolean boolean53 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        java.lang.Throwable throwable30 = shardFailure29.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", throwable30, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable30, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[null][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure25.routing;
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNull(shardRouting26);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType8 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest7.setParentTask(taskId13);
        deleteRequest3.setParentTask(taskId13);
        deleteRequest3.setParentTask("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", 52L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(taskId13);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        boolean boolean14 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest13.timeout(timeValue21);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        java.lang.String str24 = deleteRequest22.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}" + "'", str24, "delete {[hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}");
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String str7 = deleteRequest6.toString();
        deleteRequest6.seqNo((long) (short) 10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str7, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setShardId(shardId14);
        org.elasticsearch.index.shard.IndexShard indexShard16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete17 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest11.remoteAddress();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(transportAddress12);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        boolean boolean8 = deleteRequest6.getShouldPersistResult();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(true);
        java.lang.String[] strArray37 = deleteRequest34.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.type("delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        java.lang.String str40 = deleteRequest39.index();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}", "", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        long long21 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException22, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", throwable2, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("delete {[][hi!][hi!]}");
        deleteRequest10.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.timeout(timeValue13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str18 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest10.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest28.primaryTerm(10L);
        java.lang.String str31 = deleteRequest28.toString();
        java.lang.String str32 = deleteRequest28.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest26.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest24.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType40 = deleteRequest39.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str44 = deleteRequest43.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest39.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest35.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest10.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest3.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest53.consistencyLevel();
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][null][null]}" + "'", str32, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][delete {[null][null][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][delete {[hi!][null][null]}][hi!]}");
        java.lang.String str45 = shardFailure44.reason;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}" + "'", str45, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[][null][null]}");
        long long4 = deleteRequest3.seqNo();
        java.lang.String str5 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[hi!][delete {[hi!][null][null]}][null]}");
        boolean boolean8 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}" + "'", str5, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        java.lang.String str4 = deleteRequest3.routing();
        java.lang.String str5 = deleteRequest3.id();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException17, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest5.remoteAddress(transportAddress7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest10.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest3.timeout(timeValue20);
        java.lang.String str25 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.parent("");
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][null][null]}" + "'", str25, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "hi!", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest30.remoteAddress(transportAddress32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        long long35 = deleteRequest34.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("delete {[][hi!][hi!]}");
        deleteRequest37.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue40 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.timeout(timeValue40);
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest14.consistencyLevel(writeConsistencyLevel44);
        long long46 = deleteRequest14.seqNo();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest14.timeout("delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        java.lang.String str7 = deleteRequest6.parent();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("delete {[][hi!][hi!]}");
        deleteRequest12.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue15 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest8.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest8.id("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest8.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest8.remoteAddress();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNull(transportAddress21);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        long long20 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest24.primaryTerm(10L);
        java.lang.String str27 = deleteRequest24.toString();
        java.lang.String str28 = deleteRequest24.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest33.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId41);
        java.lang.String str43 = deleteRequest33.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest33.versionType(versionType46);
        java.lang.String str48 = deleteRequest47.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.routing("hi!");
        java.lang.String str51 = deleteRequest50.index();
        long long52 = deleteRequest50.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest56.primaryTerm(10L);
        java.lang.String str59 = deleteRequest56.toString();
        java.lang.String str60 = deleteRequest56.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = deleteRequest56.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest54.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest50.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest18.consistencyLevel(writeConsistencyLevel61);
        deleteRequest18.primaryTerm((long) 0);
        java.lang.String[] strArray67 = deleteRequest18.indices();
        java.lang.String str68 = deleteRequest18.index();
        java.lang.String str69 = deleteRequest18.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest18.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        long long72 = deleteRequest71.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest71.id("delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][null][null]}" + "'", str43, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][null][null]}" + "'", str48, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[hi!][null][null]}" + "'", str59, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][null][null]}" + "'", str60, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel61 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel61.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest74);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        java.lang.String str7 = deleteRequest3.type();
        java.lang.String str8 = deleteRequest3.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][hi!][hi!]}" + "'", str7, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}][hi!]}");
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}][null][null]}", throwable24, "delete {[delete {[][hi!][hi!]}][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("delete {[][hi!][hi!]}");
        deleteRequest22.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.timeout(timeValue25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.version((long) (byte) 0);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", "delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest7.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest13.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str18 = deleteRequest17.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        java.lang.String str26 = deleteRequest24.parent();
        java.lang.String str27 = deleteRequest24.index();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.timeout(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        long long3 = deleteRequest2.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.versionType(versionType7);
        deleteRequest6.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.parent("delete {[][hi!][hi!]}");
        deleteRequest20.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue23 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.timeout(timeValue23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str28 = deleteRequest27.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest32.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId40);
        java.lang.String str42 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType45);
        java.lang.String str47 = deleteRequest46.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.routing("hi!");
        java.lang.String str50 = deleteRequest49.index();
        long long51 = deleteRequest49.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest55.primaryTerm(10L);
        java.lang.String str58 = deleteRequest55.toString();
        java.lang.String str59 = deleteRequest55.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel60 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest53.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest49.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest27.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest1.consistencyLevel(writeConsistencyLevel60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest1.consistencyLevel(writeConsistencyLevel68);
        boolean boolean70 = deleteRequest69.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[hi!][null][null]}" + "'", str47, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[hi!][null][null]}" + "'", str58, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[hi!][null][null]}" + "'", str59, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel60 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel60.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.routing();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][delete {[null][null][delete {[hi!][null][null]}]}]}", throwable2, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][null]}");
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        java.lang.String str28 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        java.lang.String str31 = deleteRequest30.index();
        long long32 = deleteRequest30.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest36.primaryTerm(10L);
        java.lang.String str39 = deleteRequest36.toString();
        java.lang.String str40 = deleteRequest36.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest45.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId53);
        java.lang.String str55 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest45.versionType(versionType58);
        java.lang.String str60 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.routing("hi!");
        java.lang.String str63 = deleteRequest62.index();
        long long64 = deleteRequest62.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest68.primaryTerm(10L);
        java.lang.String str71 = deleteRequest68.toString();
        java.lang.String str72 = deleteRequest68.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel73 = deleteRequest68.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest66.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest62.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest30.consistencyLevel(writeConsistencyLevel73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest3.consistencyLevel(writeConsistencyLevel73);
        deleteRequest77.setParentTask("delete {[null][null][null]}", (long) (byte) 10);
        java.lang.String str81 = deleteRequest77.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest77.parent("delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue88 = deleteRequest87.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel89 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest83.consistencyLevel(writeConsistencyLevel89);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.index("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str93 = deleteRequest92.getDescription();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][null][null]}" + "'", str39, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[hi!][null][null]}" + "'", str55, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[hi!][null][null]}" + "'", str60, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "delete {[hi!][null][null]}" + "'", str71, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "delete {[hi!][null][null]}" + "'", str72, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel73 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel73.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "delete {[hi!][null][null]}" + "'", str81, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue88);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel89 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel89.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][null][null]}][]}" + "'", str93, "delete {[delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}][delete {[delete {[hi!][null][null]}][null][]}][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", "delete {[delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][null][null]}");
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        long long13 = deleteRequest12.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.consistencyLevel(writeConsistencyLevel14);
        java.lang.String str16 = deleteRequest15.getDescription();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest19.setParentTask(taskId25);
        deleteRequest15.setParentTask(taskId25);
        org.elasticsearch.tasks.Task task28 = deleteRequest3.createTask((long) 0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[][][delete {[][hi!][hi!]}]}", taskId25);
        java.lang.String[] strArray29 = deleteRequest3.indices();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][null][null]}" + "'", str16, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        deleteRequest1.seqNo((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest7.seqNo((long) 100);
        java.lang.String str10 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest20.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest25.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str41 = deleteRequest40.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.consistencyLevel(writeConsistencyLevel42);
        long long44 = deleteRequest40.version();
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest33.createTask((long) (byte) 0, "", "", taskId45);
        deleteRequest20.setParentTask(taskId45);
        org.elasticsearch.tasks.Task task48 = deleteRequest12.createTask((long) (byte) 1, "delete {[null][null][hi!]}", "delete {[hi!][null][null]}", taskId45);
        deleteRequest1.setParentTask(taskId45);
        long long50 = deleteRequest1.seqNo();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[][hi!][hi!]}" + "'", str41, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-3L) + "'", long44 == (-3L));
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10L + "'", long50 == 10L);
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        java.lang.String[] strArray17 = deleteRequest16.indices();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((-1L));
        org.elasticsearch.index.shard.ShardId shardId15 = deleteRequest12.shardId();
        org.elasticsearch.index.VersionType versionType16 = deleteRequest12.versionType();
        java.lang.Class<?> wildcardClass17 = deleteRequest12.getClass();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}][null]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "hi!");
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        java.lang.String str12 = deleteRequest10.getDescription();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(actionRequestValidationException11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}" + "'", str12, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        java.lang.String str10 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.versionType(versionType29);
        deleteRequest28.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        java.lang.String str34 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.setShardId(shardId37);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest12.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.type("");
        boolean boolean48 = deleteRequest47.getShouldPersistResult();
        java.lang.String str49 = deleteRequest47.getDescription();
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest3.timeout(timeValue50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.setShardId(shardId52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.parent("");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str49, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest0.timeout(timeValue24);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.id("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str33 = deleteRequest32.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.versionType(versionType35);
        deleteRequest34.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest32.timeout(timeValue39);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest32.setShardId(shardId41);
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = null;
        deleteRequest42.remoteAddress(transportAddress43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest48.seqNo((-1L));
        java.lang.String str51 = deleteRequest48.toString();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest48.setShardId(shardId52);
        deleteRequest53.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest53.getParentTask();
        deleteRequest42.setParentTask(taskId56);
        deleteRequest25.setParentTask(taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest25.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str51, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        deleteRequest12.primaryTerm((long) (byte) 1);
        long long15 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.routing("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest17.indicesOptions();
        long long22 = deleteRequest17.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest0.timeout(timeValue24);
        java.lang.String str26 = deleteRequest25.index();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.setShardId(shardId27);
        boolean boolean29 = deleteRequest25.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable45 = shardFailure44.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", throwable45, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", throwable45, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", throwable45, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable45, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", throwable45, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", throwable45, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable45.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "hi!", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        java.lang.String str6 = deleteRequest5.getDescription();
        java.lang.String str7 = deleteRequest5.type();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}" + "'", str6, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][delete {[null][null][hi!]}][]}", "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.versionType(versionType13);
        deleteRequest12.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest20.getParentTask();
        deleteRequest7.setParentTask(taskId23);
        long long25 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest26.consistencyLevel();
        deleteRequest26.primaryTerm(100L);
        java.lang.String str33 = deleteRequest26.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest26.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        org.elasticsearch.tasks.Task task46 = deleteRequest37.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId45);
        java.lang.String str47 = deleteRequest37.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType50 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest37.versionType(versionType50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task62 = deleteRequest53.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId61);
        java.lang.String str63 = deleteRequest53.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest53.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest51.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest35.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest7.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest3.versionType(versionType66);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[][hi!][hi!]}" + "'", str33, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertNotNull(task46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[hi!][null][null]}" + "'", str47, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[hi!][null][null]}" + "'", str63, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", throwable14, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
        java.lang.String str17 = shardFailure16.indexUUID;
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}" + "'", str17, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.routing("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        java.lang.String[] strArray9 = deleteRequest3.indices();
        boolean boolean10 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        boolean boolean11 = deleteRequest10.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][]}", "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}", "delete {[][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setShardId(shardId14);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest1.consistencyLevel();
        long long7 = deleteRequest1.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.setShardId(shardId8);
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str30 = shardFailure29.indexUUID;
        java.lang.Throwable throwable31 = shardFailure29.cause;
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable31.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException18, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException18, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException18, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException18, "");
        java.lang.Throwable throwable27 = shardFailure26.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][delete {[null][][null]}]}", throwable27, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[][hi!][hi!]}]}", throwable27, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", throwable27, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable27.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "hi!", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][][null]}");
        deleteRequest3.primaryTerm((long) '#');
        java.lang.String str10 = deleteRequest3.toString();
        deleteRequest3.seqNo((long) ' ');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str10, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        deleteRequest0.setParentTask("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (long) (short) 100);
        boolean boolean12 = deleteRequest0.getShouldPersistResult();
        java.lang.String str13 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest14.version();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest4.createTask(10L, "hi!", "", taskId19);
        long long21 = deleteRequest4.seqNo();
        deleteRequest4.setParentTask("delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", 1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest4.type("delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest4.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest9.shardId();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("");
        java.lang.String[] strArray9 = deleteRequest3.indices();
        java.lang.String str10 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!][hi!]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        boolean boolean4 = deleteRequest3.refresh();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest23.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId31);
        java.lang.String str33 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType36 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.versionType(versionType36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "", (java.lang.Throwable) actionRequestValidationException38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException38, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException38, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][hi!]}][null]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}", "delete {[hi!][null][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable39, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", throwable39, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}", throwable39, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable39, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", throwable39, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        deleteRequest10.setParentTask(taskId17);
        deleteRequest5.setParentTask(taskId17);
        deleteRequest4.setParentTask(taskId17);
        deleteRequest4.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest4.id("delete {[null][][null]}");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest4.setShardId(shardId26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", deleteRequest4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }
}

