import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest2.getParentTask();
        long long7 = deleteRequest2.primaryTerm();
        java.lang.String str8 = deleteRequest2.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "", "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        java.lang.Throwable throwable30 = shardFailure29.cause;
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version((-3L));
        java.lang.String str6 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest1.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        deleteRequest1.primaryTerm((long) (byte) 100);
        boolean boolean8 = deleteRequest1.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.routing("delete {[hi!][null][null]}");
        deleteRequest2.primaryTerm((long) (-1));
        boolean boolean7 = deleteRequest2.refresh();
        java.lang.String str8 = deleteRequest2.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        deleteRequest20.setParentTask(taskId26);
        org.elasticsearch.tasks.Task task28 = deleteRequest13.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest13.setParentTask(taskId33);
        deleteRequest2.setParentTask(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(taskId33);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}][null]}", "", "delete {[null][][null]}");
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable35, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable35, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", throwable35, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[][null][null]}");
        long long4 = deleteRequest3.seqNo();
        java.lang.String str5 = deleteRequest3.type();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}" + "'", str5, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        java.lang.String str11 = deleteRequest10.type();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest6.versionType();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest10.remoteAddress(transportAddress13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest21.seqNo((-1L));
        java.lang.String str24 = deleteRequest21.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.setShardId(shardId25);
        deleteRequest26.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest10.createTask(100L, "", "delete {[][hi!][hi!]}", taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest3.createTask((long) ' ', "delete {[][null][null]}", "delete {[delete {[null][null][hi!]}][hi!][hi!]}", taskId29);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest3.index("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        java.lang.String[] strArray35 = deleteRequest34.indices();
        boolean boolean36 = deleteRequest34.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str24, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        java.lang.String str10 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str36 = deleteRequest30.getDescription();
        boolean boolean37 = deleteRequest30.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest30.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType40 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest1.versionType(versionType40);
        java.lang.String str42 = deleteRequest1.toString();
        java.lang.String str43 = deleteRequest1.routing();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}" + "'", str42, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}" + "'", str43, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        deleteRequest7.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.timeout(timeValue12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest17.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException18, "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException18, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        java.lang.String str6 = deleteRequest0.parent();
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.type("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        long long12 = deleteRequest9.version();
        org.elasticsearch.index.shard.IndexShard indexShard13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete14 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest9, indexShard13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.version((-1L));
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.setShardId(shardId18);
        deleteRequest19.setParentTask("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (long) (short) -1);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest19.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = deleteRequest19.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        long long26 = deleteRequest25.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.parent("delete {[][hi!][hi!]}");
        deleteRequest28.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue31 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.timeout(timeValue31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str36 = deleteRequest28.toString();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest28.timeout();
        org.elasticsearch.index.VersionType versionType38 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest19.versionType(versionType38);
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest19.timeout();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[null][null][null]}" + "'", str36, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[null][null][null]}");
        deleteRequest5.setParentTask("delete {[hi!][null][null]}", (long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[null][null][null]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.versionType(versionType9);
        deleteRequest8.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.timeout(timeValue13);
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.version((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.id("delete {[][hi!][hi!]}");
        deleteRequest12.primaryTerm((long) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", deleteRequest12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        java.lang.String str7 = deleteRequest5.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str7, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        java.lang.String str30 = deleteRequest29.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.routing("hi!");
        java.lang.String str33 = deleteRequest32.index();
        long long34 = deleteRequest32.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest38.primaryTerm(10L);
        java.lang.String str41 = deleteRequest38.toString();
        java.lang.String str42 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest36.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest32.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest10.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest10.parent("hi!");
        deleteRequest48.setParentTask("delete {[delete {[null][null][hi!]}][hi!][hi!]}", (long) 'a');
        deleteRequest48.primaryTerm((long) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str11, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[hi!][null][null]}" + "'", str30, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.setShardId(shardId27);
        java.lang.String str29 = deleteRequest24.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable31 = shardFailure30.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable31, "delete {[hi!][null][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable31.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}][delete {[][null][null]}]}", "delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version((long) ' ');
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(indicesOptions17);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        deleteRequest3.seqNo(0L);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        deleteRequest12.primaryTerm((long) (byte) 1);
        long long15 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.versionType(versionType19);
        deleteRequest18.primaryTerm((long) 1);
        boolean boolean23 = deleteRequest18.refresh();
        java.lang.String str24 = deleteRequest18.parent();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.timeout(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest0.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        deleteRequest0.primaryTerm(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((-1L));
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest8.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest8.seqNo((-1L));
        java.lang.String str11 = deleteRequest8.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.setShardId(shardId12);
        deleteRequest13.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest13.getParentTask();
        deleteRequest3.setParentTask(taskId16);
        long long18 = deleteRequest3.seqNo();
        java.lang.String str19 = deleteRequest3.index();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str11, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.version(100L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout("delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        boolean boolean2 = deleteRequest1.getShouldPersistResult();
        deleteRequest1.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        long long18 = deleteRequest17.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.setShardId(shardId21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest16.setParentTask(taskId23);
        deleteRequest11.setParentTask(taskId23);
        deleteRequest10.setParentTask(taskId23);
        deleteRequest10.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest10.remoteAddress(transportAddress32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest10.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        deleteRequest42.setParentTask(taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest35.createTask((long) 0, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", taskId50);
        org.elasticsearch.tasks.Task task53 = deleteRequest1.createTask((long) (byte) 1, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long60 = deleteRequest57.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.setShardId(shardId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        long long67 = deleteRequest66.primaryTerm();
        long long68 = deleteRequest66.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = deleteRequest66.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest62.consistencyLevel(writeConsistencyLevel70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest1.consistencyLevel(writeConsistencyLevel70);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNull(transportAddress69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long6 = deleteRequest5.primaryTerm();
        java.lang.String[] strArray7 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.routing("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (short) 0);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.version((long) (byte) 10);
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        boolean boolean5 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest9.seqNo((long) 100);
        java.lang.String str12 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = deleteRequest22.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest27.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest27.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str43 = deleteRequest42.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.consistencyLevel(writeConsistencyLevel44);
        long long46 = deleteRequest42.version();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest42.getParentTask();
        org.elasticsearch.tasks.Task task48 = deleteRequest35.createTask((long) (byte) 0, "", "", taskId47);
        deleteRequest22.setParentTask(taskId47);
        org.elasticsearch.tasks.Task task50 = deleteRequest14.createTask((long) (byte) 1, "delete {[null][null][hi!]}", "delete {[hi!][null][null]}", taskId47);
        deleteRequest3.setParentTask(taskId47);
        org.elasticsearch.common.io.stream.StreamInput streamInput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][null][null]}" + "'", str12, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[][hi!][hi!]}" + "'", str43, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-3L) + "'", long46 == (-3L));
        org.junit.Assert.assertNotNull(taskId47);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "hi!", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[][hi!][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", "delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}", "");
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.consistencyLevel(writeConsistencyLevel7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        long long5 = deleteRequest3.seqNo();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        long long5 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        java.lang.String str10 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str36 = deleteRequest30.getDescription();
        boolean boolean37 = deleteRequest30.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest30.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.index.VersionType versionType40 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest1.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest1.id("delete {[null][null][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        long long4 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        deleteRequest8.setParentTask(taskId15);
        deleteRequest3.setParentTask(taskId15);
        deleteRequest2.setParentTask(taskId15);
        deleteRequest2.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest2.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest2.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest2.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        java.lang.String str29 = deleteRequest27.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str29, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("");
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.id("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.routing("");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest13.versionType();
        boolean boolean16 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        long long19 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest23.seqNo((-1L));
        java.lang.String str26 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str29 = deleteRequest28.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.versionType(versionType31);
        deleteRequest30.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest23.timeout(timeValue35);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest23.getParentTask();
        org.elasticsearch.index.VersionType versionType39 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest13.versionType(versionType39);
        deleteRequest40.seqNo(10L);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("delete {[delete {[hi!][null][null]}][null][null]}");
        java.lang.String str10 = deleteRequest9.toString();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}" + "'", str10, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.setShardId(shardId12);
        java.lang.String str14 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str17 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        java.lang.String str25 = deleteRequest23.parent();
        java.lang.String str26 = deleteRequest23.index();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        boolean boolean29 = deleteRequest28.getShouldPersistResult();
        boolean boolean30 = deleteRequest28.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.index("delete {[delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][null]}" + "'", str14, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(0L);
        boolean boolean9 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.index("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.timeout("delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) (short) 10);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        long long6 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(97L);
        boolean boolean9 = deleteRequest8.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.versionType(versionType13);
        deleteRequest12.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        java.lang.String str18 = deleteRequest12.id();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.setShardId(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest12.setShardId(shardId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        long long24 = deleteRequest23.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str29 = deleteRequest28.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest31.getParentTask();
        deleteRequest26.setParentTask(taskId34);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.timeout(timeValue36);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str50 = deleteRequest49.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest52.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest44.createTask((long) (short) 1, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!", taskId55);
        deleteRequest40.setParentTask(taskId55);
        org.elasticsearch.tasks.Task task58 = deleteRequest6.createTask((long) (short) 10, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", taskId55);
        org.elasticsearch.action.support.IndicesOptions indicesOptions59 = deleteRequest6.indicesOptions();
        java.lang.String str60 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest6.type("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(indicesOptions59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        boolean boolean5 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.versionType(versionType15);
        deleteRequest14.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.timeout(timeValue19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest12.setShardId(shardId21);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest22.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest28.seqNo((-1L));
        java.lang.String str31 = deleteRequest28.toString();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.setShardId(shardId32);
        deleteRequest33.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        deleteRequest22.setParentTask(taskId36);
        org.elasticsearch.tasks.Task task38 = deleteRequest0.createTask((long) 1, "", "", taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest0.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest40.remoteAddress(transportAddress41);
        java.lang.String str43 = deleteRequest40.index();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str31, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[null][null][null]}]}", "delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable2, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}");
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.versionType(versionType19);
        deleteRequest18.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        java.lang.String str24 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest18.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str32 = deleteRequest31.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.versionType(versionType34);
        deleteRequest33.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.timeout(timeValue38);
        java.lang.String str40 = deleteRequest31.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest41.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest29.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest17.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType52 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest49.versionType(versionType52);
        long long54 = deleteRequest49.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest49.indicesOptions();
        long long56 = deleteRequest49.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest49.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str59 = deleteRequest49.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest63.seqNo((-1L));
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.setShardId(shardId66);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest49.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest48.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest48.timeout();
        java.lang.String str72 = deleteRequest48.index();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-3L) + "'", long56 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        long long8 = deleteRequest6.seqNo();
        java.lang.String str9 = deleteRequest6.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest6.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.routing("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest16.seqNo((-1L));
        java.lang.String str19 = deleteRequest16.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.setShardId(shardId20);
        deleteRequest21.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest21.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.versionType(versionType32);
        long long34 = deleteRequest29.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest29.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.versionType(versionType37);
        deleteRequest36.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest36.timeout();
        java.lang.String str42 = deleteRequest36.id();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.timeout(timeValue43);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest21.consistencyLevel(writeConsistencyLevel45);
        org.elasticsearch.index.VersionType versionType47 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest6.versionType(versionType47);
        long long49 = deleteRequest48.seqNo();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.parent("delete {[][hi!][hi!]}");
        deleteRequest9.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest9.getParentTask();
        deleteRequest0.setParentTask(taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest0.getParentTask();
        java.lang.String str15 = deleteRequest0.id();
        java.lang.String str16 = deleteRequest0.routing();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest21.indicesOptions();
        boolean boolean25 = deleteRequest21.refresh();
        java.lang.String str26 = deleteRequest21.type();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.timeout(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId12);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.versionType(versionType7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.consistencyLevel(writeConsistencyLevel9);
        deleteRequest3.primaryTerm((long) '#');
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId16);
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest3.setParentTask(taskId23);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.routing("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setShardId(shardId11);
        long long13 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) 0);
        boolean boolean16 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable37 = shardFailure36.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", throwable37, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[null][null][null]}]}", throwable37, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[][hi!][hi!]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("delete {[null][][null]}");
        java.lang.String str8 = deleteRequest7.id();
        java.lang.String str9 = deleteRequest7.type();
        java.lang.String str10 = deleteRequest7.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}" + "'", str8, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][hi!][hi!]}" + "'", str9, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][hi!]}" + "'", str10, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        java.lang.String str2 = deleteRequest1.parent();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        long long23 = deleteRequest13.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException24, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.routing("");
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest13.versionType();
        boolean boolean16 = deleteRequest13.refresh();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest13.indicesOptions();
        deleteRequest13.seqNo((long) 1);
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest13.createTask((-3L), "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", taskId23);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(task24);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        deleteRequest1.seqNo((long) (byte) 100);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest20.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest20.timeout();
        long long23 = deleteRequest20.primaryTerm();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest14.version();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest4.createTask(10L, "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest4.createTask((long) (short) 1, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", taskId40);
        java.lang.String str44 = deleteRequest4.parent();
        java.lang.String str45 = deleteRequest4.parent();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest4.setShardId(shardId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str54 = deleteRequest53.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        long long56 = deleteRequest55.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.versionType(versionType60);
        deleteRequest59.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest55.timeout(timeValue64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType78 = deleteRequest77.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId83 = deleteRequest82.getParentTask();
        deleteRequest77.setParentTask(taskId83);
        org.elasticsearch.tasks.Task task85 = deleteRequest72.createTask(10L, "", "delete {[hi!][null][null]}", taskId83);
        org.elasticsearch.tasks.Task task86 = deleteRequest65.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId83);
        deleteRequest53.setParentTask(taskId83);
        deleteRequest47.setParentTask(taskId83);
        deleteRequest47.seqNo((long) (byte) 0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "delete {[null][null][null]}" + "'", str54, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(versionType78);
        org.junit.Assert.assertNotNull(taskId83);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(task86);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId14);
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask(10L, "", "delete {[hi!][null][null]}", taskId14);
        java.lang.String str17 = deleteRequest3.parent();
        deleteRequest3.setParentTask("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (long) (short) 100);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest3.validate();
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = deleteRequest3.remoteAddress();
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(actionRequestValidationException21);
        org.junit.Assert.assertNull(transportAddress22);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        long long10 = deleteRequest6.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest6.remoteAddress();
        java.lang.String str12 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest14.primaryTerm(10L);
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest21.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest21.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) 100);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.versionType(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        long long10 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest26.remoteAddress(transportAddress28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        long long31 = deleteRequest30.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.parent("delete {[][hi!][hi!]}");
        deleteRequest33.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue36 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.timeout(timeValue36);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest26.timeout(timeValue38);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest3.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest41.seqNo();
        java.lang.String str43 = deleteRequest41.routing();
        deleteRequest41.primaryTerm((long) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest41.timeout("delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        boolean boolean5 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[][hi!][hi!]}][null][null]}", "delete {[hi!][null][null]}");
        long long4 = deleteRequest3.seqNo();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}", throwable39, "delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest3.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId11);
        long long13 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.versionType(versionType19);
        deleteRequest18.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest14.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.timeout(timeValue23);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest3.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", deleteRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(transportAddress26);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = deleteRequest1.remoteAddress();
        long long3 = deleteRequest1.version();
        org.elasticsearch.index.shard.IndexShard indexShard4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete5 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest1, indexShard4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str7 = deleteRequest6.id();
        long long8 = deleteRequest6.version();
        boolean boolean9 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.versionType(versionType14);
        long long16 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest11.indicesOptions();
        long long18 = deleteRequest11.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        long long24 = deleteRequest23.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest26.indicesOptions();
        boolean boolean30 = deleteRequest26.refresh();
        java.lang.String str31 = deleteRequest26.type();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.timeout(timeValue32);
        java.lang.String str34 = deleteRequest33.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.index("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.setShardId(shardId37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = deleteRequest42.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.index("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = deleteRequest45.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest45.getParentTask();
        deleteRequest33.setParentTask(taskId47);
        deleteRequest6.setParentTask(taskId47);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(actionRequestValidationException43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(taskId47);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[null][null][null]}");
        java.lang.Class<?> wildcardClass26 = actionRequestValidationException15.getClass();
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.index("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        java.lang.String str24 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest23.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.setShardId(shardId31);
        java.lang.String str33 = deleteRequest28.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[hi!][null][null]}" + "'", str24, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
        java.lang.String str45 = shardFailure44.indexUUID;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}" + "'", str45, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}");
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        long long4 = deleteRequest0.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(timeValue5);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.routing("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.type("delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions4);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        java.lang.String str9 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest15.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest25.primaryTerm(10L);
        java.lang.String str28 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType31 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest15.versionType(versionType31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.versionType(versionType31);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest11.setParentTask(taskId16);
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask((long) (byte) 10, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[null][null][hi!]}", taskId16);
        java.lang.String str19 = deleteRequest3.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[delete {[][hi!][hi!]}][null][null]}" + "'", str19, "delete {[delete {[][hi!][hi!]}][null][null]}");
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        long long17 = deleteRequest16.seqNo();
        boolean boolean18 = deleteRequest16.getShouldPersistResult();
        boolean boolean19 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.versionType(versionType21);
        deleteRequest20.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest16.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest12.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest6.timeout(timeValue25);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[hi!][null][null]}", "delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long6 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        java.lang.String str9 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest11.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][hi!]}" + "'", str9, "delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        java.lang.String str10 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest16.primaryTerm(10L);
        java.lang.String str19 = deleteRequest16.toString();
        java.lang.String str20 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.version((-3L));
        deleteRequest16.setParentTask("delete {[null][null][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest16.setParentTask(taskId32);
        deleteRequest14.setParentTask(taskId32);
        java.lang.String str35 = deleteRequest14.routing();
        org.elasticsearch.common.io.stream.StreamInput streamInput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest14.readFrom(streamInput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}" + "'", str35, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest0.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        deleteRequest14.setParentTask(taskId20);
        deleteRequest9.setParentTask(taskId20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest9.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest26.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId34);
        java.lang.String str36 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest26.versionType(versionType39);
        java.lang.String str41 = deleteRequest40.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.routing("hi!");
        java.lang.String str44 = deleteRequest43.index();
        long long45 = deleteRequest43.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest49.primaryTerm(10L);
        java.lang.String str52 = deleteRequest49.toString();
        java.lang.String str53 = deleteRequest49.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest47.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest43.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest9.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest0.consistencyLevel(writeConsistencyLevel54);
        java.lang.String str59 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest0.index("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId62 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][null][null]}" + "'", str41, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[hi!][null][null]}" + "'", str52, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][null][null]}" + "'", str53, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[null][null][null]}" + "'", str59, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId62);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.index("delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.setShardId(shardId6);
        long long8 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure23.routing;
        java.lang.Throwable throwable25 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][null][null]}", throwable25, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable25, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable25, "hi!");
        java.lang.String str32 = shardFailure31.reason;
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardRouting24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((-3L));
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.setShardId(shardId11);
        java.lang.String[] strArray13 = deleteRequest8.indices();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest32.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId40);
        java.lang.String str42 = deleteRequest32.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest32.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest30.versionType(versionType45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest13.versionType(versionType45);
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest48.timeout(timeValue54);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][null][null]}" + "'", str42, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNull(transportAddress4);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.seqNo();
        java.lang.String str7 = deleteRequest0.index();
        long long8 = deleteRequest0.version();
        java.lang.String str9 = deleteRequest0.parent();
        java.lang.String[] strArray10 = deleteRequest0.indices();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][hi!][hi!]}" + "'", str9, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress3 = null;
        deleteRequest1.remoteAddress(transportAddress3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str7 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest6.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest1.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        long long21 = deleteRequest20.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.parent("delete {[][hi!][hi!]}");
        deleteRequest23.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue26 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.timeout(timeValue26);
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest1.timeout(timeValue28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        java.lang.String[] strArray32 = deleteRequest31.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest3.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId11);
        java.lang.String str13 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest17.versionType(versionType32);
        java.lang.String str35 = deleteRequest34.id();
        long long36 = deleteRequest34.seqNo();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest34.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", (java.lang.Throwable) actionRequestValidationException37, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[hi!][null][null]}" + "'", str13, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        java.lang.String str2 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.index("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.id("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}");
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][]}");
        java.lang.Throwable throwable49 = shardFailure48.cause;
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable49.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        java.lang.String str6 = deleteRequest0.parent();
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.version((long) (byte) 0);
        long long20 = deleteRequest15.seqNo();
        java.lang.String str21 = deleteRequest15.parent();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        boolean boolean4 = deleteRequest1.getShouldPersistResult();
        deleteRequest1.primaryTerm((long) (short) 1);
        long long7 = deleteRequest1.version();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        deleteRequest3.seqNo((long) 100);
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest21.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str37 = deleteRequest36.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        long long40 = deleteRequest36.version();
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task42 = deleteRequest29.createTask((long) (byte) 0, "", "", taskId41);
        deleteRequest16.setParentTask(taskId41);
        org.elasticsearch.tasks.Task task44 = deleteRequest8.createTask((long) (byte) 1, "delete {[null][null][hi!]}", "delete {[hi!][null][null]}", taskId41);
        deleteRequest8.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", (long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest8.version(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest58.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest51.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId59);
        java.lang.String str61 = deleteRequest51.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType64 = deleteRequest63.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest51.versionType(versionType64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task76 = deleteRequest67.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId75);
        java.lang.String str77 = deleteRequest67.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType80 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest67.versionType(versionType80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest65.versionType(versionType80);
        java.lang.String str83 = deleteRequest82.id();
        org.elasticsearch.index.VersionType versionType84 = deleteRequest82.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest49.versionType(versionType84);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest49.index("delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][null][null]}" + "'", str6, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[][hi!][hi!]}" + "'", str37, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-3L) + "'", long40 == (-3L));
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "delete {[hi!][null][null]}" + "'", str61, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "delete {[hi!][null][null]}" + "'", str77, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(versionType84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(0L);
        boolean boolean9 = deleteRequest3.refresh();
        java.lang.String str10 = deleteRequest3.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest3.remoteAddress(transportAddress11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        long long16 = deleteRequest15.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.parent("delete {[][hi!][hi!]}");
        deleteRequest18.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue21 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.timeout(timeValue21);
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest18.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str26 = deleteRequest25.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest30.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId38);
        java.lang.String str40 = deleteRequest30.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.versionType(versionType43);
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("hi!");
        java.lang.String str48 = deleteRequest47.index();
        long long49 = deleteRequest47.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest53.primaryTerm(10L);
        java.lang.String str56 = deleteRequest53.toString();
        java.lang.String str57 = deleteRequest53.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = deleteRequest53.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest51.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest47.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest25.consistencyLevel(writeConsistencyLevel58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest25.parent("hi!");
        deleteRequest63.setParentTask("delete {[delete {[null][null][hi!]}][hi!][hi!]}", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType72 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest71.versionType(versionType72);
        deleteRequest71.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest71.timeout();
        java.lang.String str77 = deleteRequest71.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions78 = deleteRequest71.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType82 = deleteRequest81.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest79.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest71.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest70.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest63.versionType(versionType82);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest14.versionType(versionType82);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[hi!][null][null]}" + "'", str45, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[hi!][null][null]}" + "'", str56, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[hi!][null][null]}" + "'", str57, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel58 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel58.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(indicesOptions78);
        org.junit.Assert.assertNotNull(versionType82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str14 = deleteRequest13.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        long long17 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId18);
        boolean boolean20 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest8.remoteAddress();
        boolean boolean22 = deleteRequest8.getShouldPersistResult();
        long long23 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest8.version(100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest8.index("delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard indexShard28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete29 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(versionType9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest16.seqNo((-1L));
        java.lang.String str19 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.consistencyLevel(writeConsistencyLevel20);
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        deleteRequest21.seqNo((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("hi!");
        java.lang.String str10 = deleteRequest9.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.version((long) (byte) -1);
        long long13 = deleteRequest12.primaryTerm();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str10, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        java.lang.String str25 = deleteRequest21.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) '#');
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str22, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version(0L);
        boolean boolean9 = deleteRequest3.refresh();
        java.lang.String str10 = deleteRequest3.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest3.remoteAddress(transportAddress11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.version(100L);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException13, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException13, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException13, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure19.routing;
        java.lang.Throwable throwable21 = shardFailure19.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", throwable21, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[null][][null]}]}");
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest25.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId33);
        java.lang.String str35 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType38 = deleteRequest37.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest25.versionType(versionType38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = deleteRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "hi!", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "hi!", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException40, "delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][null][null]}" + "'", str35, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[null][null][null]}][][hi!]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        java.lang.String str9 = deleteRequest6.getDescription();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        java.lang.String str11 = deleteRequest6.toString();
        java.lang.String str12 = deleteRequest6.getDescription();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[hi!][null][null]}" + "'", str12, "delete {[hi!][null][null]}");
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        deleteRequest7.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest7.timeout();
        java.lang.String str13 = deleteRequest7.id();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.setShardId(shardId14);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest7.setShardId(shardId16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str25 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.versionType(versionType27);
        deleteRequest26.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest24.timeout(timeValue31);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest24.setShardId(shardId33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest34.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest40.seqNo((-1L));
        java.lang.String str43 = deleteRequest40.toString();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.setShardId(shardId44);
        deleteRequest45.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest45.getParentTask();
        deleteRequest34.setParentTask(taskId48);
        org.elasticsearch.tasks.Task task50 = deleteRequest19.createTask((long) (byte) 100, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[delete {[hi!][null][null]}][null][null]}", taskId48);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", deleteRequest19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str43, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task50);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        boolean boolean7 = deleteRequest3.refresh();
        java.lang.String str8 = deleteRequest3.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest3.indicesOptions();
        java.lang.String str10 = deleteRequest3.id();
        deleteRequest3.seqNo((long) (-1));
        java.lang.String str13 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.consistencyLevel(writeConsistencyLevel37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.version((-3L));
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.setShardId(shardId41);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest40.getParentTask();
        long long44 = deleteRequest40.seqNo();
        java.lang.String str45 = deleteRequest40.getDescription();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}" + "'", str45, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.refresh(true);
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest7.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        java.lang.String str11 = deleteRequest7.toString();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest7.getParentTask();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][][null]}" + "'", str11, "delete {[hi!][][null]}");
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.versionType(versionType7);
        deleteRequest6.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        java.lang.String str12 = deleteRequest6.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest6.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest4.timeout(timeValue15);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest4.versionType();
        deleteRequest4.seqNo((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        java.lang.String str8 = deleteRequest6.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("delete {[][hi!][hi!]}");
        deleteRequest12.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.timeout(timeValue16);
        deleteRequest17.primaryTerm((long) (short) -1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        java.lang.String str20 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.setShardId(shardId27);
        java.lang.String str29 = deleteRequest24.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str35 = shardFailure34.indexUUID;
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str35, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}");
        java.lang.Class<?> wildcardClass13 = actionRequestValidationException8.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str47 = shardFailure46.reason;
        java.lang.Throwable throwable48 = shardFailure46.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][hi!]}", throwable48, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[null][null][hi!]}" + "'", str47, "delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable48.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        java.lang.String str57 = shardFailure56.indexUUID;
        java.lang.Throwable throwable58 = shardFailure56.cause;
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}" + "'", str57, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable58.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        boolean boolean22 = deleteRequest21.refresh();
        java.lang.String str23 = deleteRequest21.index();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.consistencyLevel(writeConsistencyLevel6);
        deleteRequest7.primaryTerm(100L);
        boolean boolean10 = deleteRequest7.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        java.lang.String str53 = shardFailure52.indexUUID;
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}" + "'", str53, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest3.timeout();
        java.lang.String str8 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.consistencyLevel(writeConsistencyLevel16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = deleteRequest17.remoteAddress();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.versionType(versionType19);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(true);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray37 = deleteRequest36.indices();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.timeout(timeValue38);
        java.lang.String str40 = deleteRequest34.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest34.id("delete {[][][delete {[][hi!][hi!]}]}");
        long long43 = deleteRequest34.primaryTerm();
        java.lang.String str44 = deleteRequest34.getDescription();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}" + "'", str44, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        java.lang.String str41 = shardFailure40.indexUUID;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}" + "'", str41, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", "delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}", "delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = shardFailure20.routing;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNull(shardRouting21);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.unit.TimeValue timeValue6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        deleteRequest12.setParentTask(taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest12.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.setShardId(shardId22);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest5.createTask((long) 1, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", taskId24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest5.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        boolean boolean28 = deleteRequest27.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.index("delete {[][hi!][hi!]}");
        java.lang.String str12 = deleteRequest11.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.consistencyLevel(writeConsistencyLevel13);
        java.lang.String str15 = deleteRequest5.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.consistencyLevel(writeConsistencyLevel13);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.timeout("delete {[null][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str26 = deleteRequest25.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.consistencyLevel(writeConsistencyLevel27);
        long long29 = deleteRequest25.version();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest18.createTask((long) (byte) 0, "", "", taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest18.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest33.createTask((long) 1, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[][null][null]}", taskId42);
        deleteRequest4.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        long long46 = deleteRequest45.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.parent("delete {[][hi!][hi!]}");
        deleteRequest48.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest48.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest48.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest48.consistencyLevel();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest4.versionType(versionType54);
        java.lang.String str56 = deleteRequest4.getDescription();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.writeTo(streamOutput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][hi!]}" + "'", str26, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[null][null][null]}" + "'", str56, "delete {[null][null][null]}");
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException28, "");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable35, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", throwable35, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}", throwable35, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = shardFailure41.routing;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting42);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.setShardId(shardId23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest18.setParentTask(taskId25);
        deleteRequest13.setParentTask(taskId25);
        deleteRequest12.setParentTask(taskId25);
        deleteRequest1.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest1.index("delete {[hi!][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        long long7 = deleteRequest6.seqNo();
        java.lang.String str8 = deleteRequest6.toString();
        java.lang.String str9 = deleteRequest6.getDescription();
        java.lang.Class<?> wildcardClass10 = deleteRequest6.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        deleteRequest8.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version((long) 'a');
        java.lang.String str14 = deleteRequest8.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest8.remoteAddress(transportAddress15);
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        boolean boolean20 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.consistencyLevel(writeConsistencyLevel25);
        long long27 = deleteRequest26.primaryTerm();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        java.lang.Class<?> wildcardClass7 = deleteRequest6.getClass();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        java.lang.String str2 = deleteRequest1.index();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}" + "'", str2, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task17 = deleteRequest3.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId16);
        java.lang.String str18 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.parent("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}");
        deleteRequest3.primaryTerm((long) (byte) 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][null][null]}");
        java.lang.Throwable throwable34 = shardFailure33.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", throwable34, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable34, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}][delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][delete {[][delete {[null][null][hi!]}][]}]}", throwable34, "delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable34.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest5.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest27.setParentTask(taskId33);
        org.elasticsearch.tasks.Task task35 = deleteRequest22.createTask(10L, "", "delete {[hi!][null][null]}", taskId33);
        org.elasticsearch.tasks.Task task36 = deleteRequest15.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId33);
        deleteRequest3.setParentTask(taskId33);
        java.lang.String[] strArray38 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.setShardId(shardId39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.consistencyLevel(writeConsistencyLevel41);
        java.lang.String str43 = deleteRequest42.id();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[null][null][null]}" + "'", str43, "delete {[null][null][null]}");
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        deleteRequest7.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest7.timeout();
        java.lang.String str13 = deleteRequest7.id();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.timeout(timeValue14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest15.validate();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest1.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.parent("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest1.consistencyLevel();
        long long9 = deleteRequest1.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.type("delete {[][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        deleteRequest10.setParentTask("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", 10L);
        java.lang.String str15 = deleteRequest10.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.consistencyLevel(writeConsistencyLevel9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest10.indicesOptions();
        boolean boolean14 = deleteRequest10.refresh();
        java.lang.String str15 = deleteRequest10.type();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest4.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest17.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.consistencyLevel(writeConsistencyLevel7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        java.lang.String str10 = deleteRequest8.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.id("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][null][null]}");
        java.lang.Throwable throwable40 = shardFailure39.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][hi!][hi!]}", throwable40, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable40, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable40, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable40, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][delete {[null][null][hi!]}][]}", throwable40, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][]}", throwable40, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable40, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable40.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str23 = deleteRequest20.parent();
        java.lang.String str24 = deleteRequest20.routing();
        deleteRequest20.primaryTerm(1L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest20.validate();
        deleteRequest20.primaryTerm((long) 0);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str23, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        long long2 = deleteRequest1.version();
        long long3 = deleteRequest1.version();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.setShardId(shardId4);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest1.validate();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3L) + "'", long3 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str45 = shardFailure44.indexUUID;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str45, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}" + "'", str4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.setShardId(shardId23);
        deleteRequest21.primaryTerm((long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest21.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.versionType(versionType29);
        deleteRequest28.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        java.lang.String str34 = deleteRequest28.id();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest28.setShardId(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest28.setShardId(shardId37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.setShardId(shardId39);
        java.lang.String str41 = deleteRequest38.index();
        java.lang.String str42 = deleteRequest38.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest38.index("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType50 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.versionType(versionType50);
        long long52 = deleteRequest47.primaryTerm();
        java.lang.String str53 = deleteRequest47.parent();
        java.lang.String str54 = deleteRequest47.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest47.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue57 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest47.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest();
        long long64 = deleteRequest63.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel65 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.consistencyLevel(writeConsistencyLevel65);
        java.lang.String str67 = deleteRequest66.getDescription();
        org.elasticsearch.index.VersionType versionType68 = deleteRequest66.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest46.versionType(versionType68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest21.versionType(versionType68);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str22, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(transportAddress27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[null][null][null]}" + "'", str67, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(versionType68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        long long8 = deleteRequest6.seqNo();
        java.lang.String str9 = deleteRequest6.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest6.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.routing("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        deleteRequest6.primaryTerm((long) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[][][delete {[][hi!][hi!]}]}", "");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        java.lang.String str5 = deleteRequest3.parent();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(taskId6);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        long long7 = deleteRequest6.seqNo();
        java.lang.String str8 = deleteRequest6.toString();
        java.lang.String str9 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.index("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][][delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}");
        long long12 = deleteRequest11.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}", "delete {[hi!][null][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        long long7 = deleteRequest3.version();
        long long8 = deleteRequest3.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.version(0L);
        java.lang.String str12 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][hi!][hi!]}" + "'", str12, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        deleteRequest5.setParentTask(taskId11);
        deleteRequest0.setParentTask(taskId11);
        deleteRequest0.seqNo(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        long long17 = deleteRequest16.seqNo();
        boolean boolean18 = deleteRequest16.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("delete {[][hi!][hi!]}");
        deleteRequest24.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        long long33 = deleteRequest32.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.setShardId(shardId36);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        deleteRequest29.setParentTask(taskId38);
        deleteRequest28.setParentTask(taskId38);
        deleteRequest0.setParentTask(taskId38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest0.index("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.parent("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        java.lang.String str15 = deleteRequest9.id();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest9.setShardId(shardId16);
        java.lang.String str18 = deleteRequest9.getDescription();
        java.lang.String str19 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest26.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest26.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.index("");
        deleteRequest35.primaryTerm((long) (byte) 1);
        long long38 = deleteRequest35.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest35.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType44 = deleteRequest41.versionType();
        org.elasticsearch.index.VersionType versionType45 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest35.versionType(versionType45);
        boolean boolean47 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        long long52 = deleteRequest51.seqNo();
        boolean boolean53 = deleteRequest51.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest51.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest51.id("hi!");
        boolean boolean58 = deleteRequest57.getShouldPersistResult();
        long long59 = deleteRequest57.seqNo();
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest57.getParentTask();
        org.elasticsearch.tasks.Task task61 = deleteRequest35.createTask((long) (byte) -1, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", taskId60);
        org.elasticsearch.tasks.Task task62 = deleteRequest9.createTask(10L, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][delete {[null][null][null]}]}", "delete {[null][null][hi!]}", taskId60);
        deleteRequest3.setParentTask(taskId60);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(task62);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        long long6 = deleteRequest0.primaryTerm();
        java.lang.String str7 = deleteRequest0.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.timeout("delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest14.seqNo((-1L));
        java.lang.String str17 = deleteRequest14.toString();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        deleteRequest19.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest3.createTask(100L, "", "delete {[][hi!][hi!]}", taskId22);
        long long24 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str17, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest0.getParentTask();
        long long6 = deleteRequest0.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest0.getParentTask();
        java.lang.String str10 = deleteRequest0.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest0.remoteAddress();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(writeConsistencyLevel6);
        org.junit.Assert.assertNull(transportAddress7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(transportAddress11);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest10.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = deleteRequest10.remoteAddress();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNull(transportAddress12);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        java.lang.String str5 = deleteRequest3.type();
        long long6 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.type("delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.timeout(timeValue17);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest10.getParentTask();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        long long4 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.id("");
        java.lang.Class<?> wildcardClass7 = deleteRequest3.getClass();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel3 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.refresh(false);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        java.lang.String str10 = deleteRequest5.getDescription();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest5.remoteAddress(transportAddress11);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel3 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel3.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}" + "'", str10, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        long long7 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.versionType(versionType11);
        deleteRequest10.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest6.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest18.getParentTask();
        deleteRequest5.setParentTask(taskId21);
        java.lang.String str23 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest27.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.refresh(false);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest5.versionType(versionType32);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][hi!]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.getDescription();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.setShardId(shardId6);
        deleteRequest1.primaryTerm(0L);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        java.lang.String[] strArray9 = deleteRequest8.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.version((long) '#');
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        boolean boolean17 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest15.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.version((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str25 = deleteRequest24.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest24.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest28.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId36);
        deleteRequest24.setParentTask(taskId36);
        deleteRequest20.setParentTask(taskId36);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][null][null]}" + "'", str25, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        java.lang.String str45 = shardFailure44.reason;
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}" + "'", str45, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest8.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str19 = deleteRequest18.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        long long24 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest38.remoteAddress(transportAddress41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest49.seqNo((-1L));
        java.lang.String str52 = deleteRequest49.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest49.setShardId(shardId53);
        deleteRequest54.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest54.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest38.createTask(100L, "", "delete {[][hi!][hi!]}", taskId57);
        org.elasticsearch.tasks.Task task59 = deleteRequest31.createTask((long) ' ', "delete {[][null][null]}", "delete {[delete {[null][null][hi!]}][hi!][hi!]}", taskId57);
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task61 = deleteRequest18.createTask((long) 10, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", taskId60);
        deleteRequest0.setParentTask(taskId60);
        org.elasticsearch.common.io.stream.StreamInput streamInput63 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str52, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(task61);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        java.lang.Throwable throwable49 = shardFailure48.cause;
        java.lang.String str50 = shardFailure48.reason;
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable49.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}" + "'", str50, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][null][null]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(true);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.versionType(versionType10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.versionType(versionType17);
        long long19 = deleteRequest14.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest14.indicesOptions();
        boolean boolean21 = deleteRequest14.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.routing("delete {[delete {[hi!][null][null]}][null][null]}");
        deleteRequest14.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str30 = deleteRequest29.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.consistencyLevel(writeConsistencyLevel31);
        long long33 = deleteRequest29.version();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest29.getParentTask();
        deleteRequest14.setParentTask(taskId34);
        deleteRequest3.setParentTask(taskId34);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][hi!]}" + "'", str30, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-3L) + "'", long33 == (-3L));
        org.junit.Assert.assertNotNull(taskId34);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        long long3 = deleteRequest2.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("delete {[][hi!][hi!]}");
        deleteRequest5.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest10.setParentTask(taskId19);
        deleteRequest9.setParentTask(taskId19);
        java.lang.String str22 = deleteRequest9.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest9.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest16.seqNo((-1L));
        java.lang.String str19 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.consistencyLevel(writeConsistencyLevel20);
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest21.getParentTask();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(taskId23);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.setShardId(shardId33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest15.parent("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        boolean boolean2 = deleteRequest1.refresh();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(indicesOptions3);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        java.lang.String str6 = deleteRequest0.parent();
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.index("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.refresh(true);
        deleteRequest17.seqNo((long) 0);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest9.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        java.lang.String str22 = deleteRequest20.parent();
        java.lang.String str23 = deleteRequest20.index();
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest9.timeout(timeValue24);
        org.elasticsearch.index.VersionType versionType26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.versionType(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest3.validate();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.timeout("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        java.lang.String str10 = deleteRequest8.type();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.id("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[null][][null]}][delete {[null][][null]}]}");
        java.lang.Class<?> wildcardClass19 = deleteRequest18.getClass();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        long long8 = deleteRequest7.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("delete {[][hi!][hi!]}");
        deleteRequest10.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.timeout(timeValue13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str18 = deleteRequest17.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest22.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId30);
        java.lang.String str32 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.versionType(versionType35);
        java.lang.String str37 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.routing("hi!");
        java.lang.String str40 = deleteRequest39.index();
        long long41 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest45.primaryTerm(10L);
        java.lang.String str48 = deleteRequest45.toString();
        java.lang.String str49 = deleteRequest45.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest43.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest39.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest17.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest3.consistencyLevel(writeConsistencyLevel50);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str18, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][null][null]}" + "'", str32, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][null][null]}" + "'", str48, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[hi!][null][null]}" + "'", str49, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        long long4 = deleteRequest3.seqNo();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[][null][null]}");
        java.lang.Throwable throwable47 = shardFailure46.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable47, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", throwable47, "delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", throwable47, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable47, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable47, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        java.lang.String str58 = shardFailure57.indexUUID;
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable47.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}" + "'", str58, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException29, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}", "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}");
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", throwable2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        java.lang.String str5 = shardFailure4.reason;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}" + "'", str5, "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (byte) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest3.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest20.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.version((long) (byte) 1);
        long long27 = deleteRequest20.version();
        boolean boolean28 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.timeout(timeValue29);
        java.lang.String str31 = deleteRequest3.index();
        java.lang.String str32 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.id("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest3.consistencyLevel(writeConsistencyLevel39);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        long long4 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.setShardId(shardId13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        deleteRequest8.setParentTask(taskId15);
        deleteRequest3.setParentTask(taskId15);
        deleteRequest2.setParentTask(taskId15);
        deleteRequest2.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest2.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest2.remoteAddress(transportAddress24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest2.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest27.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue29);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version(0L);
        long long7 = deleteRequest6.version();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray2 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str5 = deleteRequest4.routing();
        deleteRequest4.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest4.indicesOptions();
        java.lang.String str9 = deleteRequest4.routing();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String str6 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str12 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        long long20 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str26 = deleteRequest25.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest25.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest18.createTask((long) (short) 10, "delete {[null][null][hi!]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", taskId32);
        org.elasticsearch.tasks.Task task34 = deleteRequest3.createTask((long) (short) -1, "delete {[hi!][][null]}", "delete {[null][null][null]}", taskId32);
        java.lang.String str35 = deleteRequest3.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "delete {[null][null][null]}" + "'", str35, "delete {[null][null][null]}");
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest19.setParentTask(taskId25);
        org.elasticsearch.tasks.Task task27 = deleteRequest12.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest12.setParentTask(taskId32);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest6.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.refresh(true);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.versionType(versionType42);
        java.lang.String str44 = deleteRequest43.routing();
        long long45 = deleteRequest43.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = null;
        deleteRequest43.remoteAddress(transportAddress46);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str39 = deleteRequest38.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.consistencyLevel(writeConsistencyLevel40);
        long long42 = deleteRequest38.version();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest38.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest31.createTask((long) (byte) 0, "", "", taskId43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest31.setShardId(shardId45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        long long48 = deleteRequest47.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.setShardId(shardId51);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest52.getParentTask();
        deleteRequest46.setParentTask(taskId53);
        org.elasticsearch.tasks.Task task55 = deleteRequest15.createTask((long) (byte) 100, "delete {[null][null][null]}", "delete {[hi!][null][null]}", taskId53);
        org.elasticsearch.tasks.Task task56 = deleteRequest4.createTask((long) (byte) 0, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", "", taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType59 = deleteRequest58.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest63.getParentTask();
        deleteRequest58.setParentTask(taskId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest58.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.setShardId(shardId68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest67.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest67.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest75.primaryTerm(10L);
        java.lang.String str78 = deleteRequest75.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType81 = deleteRequest80.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest75.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest73.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest4.versionType(versionType81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest4.id("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str87 = deleteRequest4.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[][hi!][hi!]}" + "'", str39, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-3L) + "'", long42 == (-3L));
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(versionType59);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[hi!][null][null]}" + "'", str78, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}" + "'", str87, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task17 = deleteRequest3.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId16);
        boolean boolean18 = deleteRequest3.refresh();
        long long19 = deleteRequest3.seqNo();
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest3.shardId();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(shardId20);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}", "", "delete {[null][][null]}");
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean4 = deleteRequest3.refresh();
        boolean boolean5 = deleteRequest3.refresh();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        long long2 = deleteRequest1.primaryTerm();
        java.lang.String str3 = deleteRequest1.parent();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest15.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("delete {[][hi!][hi!]}");
        deleteRequest22.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.timeout(timeValue25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.timeout(timeValue27);
        java.lang.String str29 = deleteRequest15.getDescription();
        deleteRequest15.setParentTask("delete {[hi!][][null]}", (long) 'a');
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest15.getParentTask();
        java.lang.String str34 = deleteRequest15.toString();
        boolean boolean35 = deleteRequest15.refresh();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][null][null]}" + "'", str34, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.version((long) (short) 10);
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.type("delete {[][null][null]}");
        deleteRequest0.primaryTerm(0L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest10.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions12);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        deleteRequest14.setParentTask("delete {[][hi!][hi!]}", (long) (short) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest14.remoteAddress();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNull(transportAddress38);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str15 = deleteRequest14.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.consistencyLevel(writeConsistencyLevel16);
        long long18 = deleteRequest14.version();
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest4.createTask(10L, "hi!", "", taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest27.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest4.createTask((long) (short) 1, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", taskId40);
        java.lang.String str44 = deleteRequest4.parent();
        java.lang.String str45 = deleteRequest4.parent();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest4.setShardId(shardId46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(false);
        long long50 = deleteRequest49.version();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][hi!][hi!]}" + "'", str15, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-3L) + "'", long50 == (-3L));
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        long long36 = deleteRequest35.seqNo();
        boolean boolean37 = deleteRequest35.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.id("hi!");
        boolean boolean42 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest34.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest48.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest44.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = deleteRequest50.remoteAddress();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNull(transportAddress51);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable39, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", throwable39, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", throwable39, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", throwable39, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}", throwable39, "delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        deleteRequest19.setParentTask(taskId25);
        org.elasticsearch.tasks.Task task27 = deleteRequest12.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest12.setParentTask(taskId32);
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest6.timeout(timeValue34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.refresh(true);
        org.elasticsearch.index.VersionType versionType42 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest35.versionType(versionType42);
        org.elasticsearch.index.shard.ShardId shardId44 = deleteRequest43.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str57 = deleteRequest56.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel58 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.consistencyLevel(writeConsistencyLevel58);
        long long60 = deleteRequest56.version();
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest56.getParentTask();
        deleteRequest52.setParentTask(taskId61);
        deleteRequest43.setParentTask(taskId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest43.id("delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest43.index("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId68 = deleteRequest43.shardId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][hi!][hi!]}" + "'", str57, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-3L) + "'", long60 == (-3L));
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNull(shardId68);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        long long6 = deleteRequest0.seqNo();
        java.lang.String str7 = deleteRequest0.getDescription();
        java.lang.String str8 = deleteRequest0.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.setShardId(shardId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        deleteRequest38.seqNo(0L);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[][null][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest7.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest17.primaryTerm(10L);
        java.lang.String str20 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.versionType(versionType23);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(transportAddress27);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setShardId(shardId11);
        long long13 = deleteRequest3.version();
        java.lang.String str14 = deleteRequest3.index();
        java.lang.String[] strArray15 = deleteRequest3.indices();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", throwable35, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", throwable35, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable35, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        java.lang.String str42 = shardFailure41.reason;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.refresh(true);
        java.lang.String str12 = deleteRequest11.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.versionType(versionType16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str25 = deleteRequest24.getDescription();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest17.createTask((long) (short) 0, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest17.routing("");
        long long30 = deleteRequest29.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[][hi!][hi!]}" + "'", str25, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][]}");
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) ' ');
        deleteRequest7.setParentTask("delete {[][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}]}", (long) (short) 10);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][null][null]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.versionType(versionType10);
        long long12 = deleteRequest7.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str22 = deleteRequest21.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest30.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest21.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest19.timeout(timeValue35);
        long long39 = deleteRequest38.primaryTerm();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}" + "'", str4, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.toString();
        boolean boolean6 = deleteRequest1.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.version((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest10.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId18);
        java.lang.String str20 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest10.versionType(versionType23);
        java.lang.String str25 = deleteRequest24.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("hi!");
        java.lang.String str28 = deleteRequest27.index();
        long long29 = deleteRequest27.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest33.primaryTerm(10L);
        java.lang.String str36 = deleteRequest33.toString();
        java.lang.String str37 = deleteRequest33.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest27.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest1.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.refresh(false);
        java.lang.String str44 = deleteRequest43.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.routing("delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.version((long) 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[hi!][null][null]}" + "'", str36, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("delete {[][null][null]}");
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(true);
        boolean boolean10 = deleteRequest9.refresh();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        deleteRequest8.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version((long) 'a');
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.setShardId(shardId14);
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        deleteRequest15.primaryTerm((long) (byte) 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException28, "");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}", throwable39, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = shardFailure41.routing;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNull(shardRouting42);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) (byte) -1);
        long long7 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest6.createTask((long) '#', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", taskId17);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest4.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest4.consistencyLevel();
        java.lang.Class<?> wildcardClass9 = writeConsistencyLevel8.getClass();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str14 = deleteRequest13.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        long long17 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId18);
        boolean boolean20 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str31 = deleteRequest30.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.consistencyLevel(writeConsistencyLevel32);
        boolean boolean34 = deleteRequest33.getShouldPersistResult();
        java.lang.String str35 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.parent("delete {[][hi!][hi!]}");
        deleteRequest39.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest33.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest24.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest8.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue55 = deleteRequest54.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.timeout(timeValue55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest50.remoteAddress(transportAddress57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest60.primaryTerm(10L);
        java.lang.String str63 = deleteRequest60.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType66 = deleteRequest65.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest60.versionType(versionType66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest50.versionType(versionType66);
        java.lang.String str69 = deleteRequest68.toString();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest68.setShardId(shardId70);
        deleteRequest68.primaryTerm((long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress74 = deleteRequest68.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest68.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = deleteRequest68.validate();
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest46.timeout(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(versionType9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][hi!][hi!]}" + "'", str31, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[hi!][null][null]}" + "'", str63, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str69, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNull(transportAddress74);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNull(actionRequestValidationException76);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest78);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException14, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException14, "");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        java.lang.String str5 = deleteRequest3.getDescription();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        java.lang.String str8 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}" + "'", str5, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest0.validate();
        long long6 = deleteRequest0.seqNo();
        java.lang.String str7 = deleteRequest0.index();
        deleteRequest0.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest13.remoteAddress(transportAddress16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str36 = deleteRequest35.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.consistencyLevel(writeConsistencyLevel37);
        long long39 = deleteRequest35.version();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest35.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest25.createTask(10L, "hi!", "", taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest13.createTask((long) 'a', "delete {[null][null][hi!]}", "", taskId40);
        deleteRequest0.setParentTask(taskId40);
        java.lang.String[] strArray44 = deleteRequest0.indices();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][hi!][hi!]}" + "'", str36, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-3L) + "'", long39 == (-3L));
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        long long7 = deleteRequest1.seqNo();
        deleteRequest1.primaryTerm(0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        boolean boolean8 = deleteRequest0.getShouldPersistResult();
        deleteRequest0.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", 0L);
        deleteRequest0.seqNo((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.type("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        org.elasticsearch.index.shard.IndexShard indexShard17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete18 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest15, indexShard17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        boolean boolean11 = deleteRequest10.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.type("delete {[null][null][hi!]}");
        long long14 = deleteRequest10.seqNo();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException26, "");
        java.lang.Throwable throwable33 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", throwable33, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable33, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.Class<?> wildcardClass38 = shardFailure37.getClass();
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        java.lang.String[] strArray5 = deleteRequest3.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        long long8 = deleteRequest3.primaryTerm();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.Throwable throwable39 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable39, "");
        java.lang.Throwable throwable42 = shardFailure41.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable42, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", throwable42, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable39.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable42.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException21, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[null][null][null]}");
        java.lang.Throwable throwable32 = shardFailure31.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", throwable32, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", throwable32, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", throwable32, "");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable32.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        long long3 = deleteRequest2.seqNo();
        boolean boolean4 = deleteRequest2.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.parent("hi!");
        deleteRequest2.seqNo(0L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}][delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str2 = deleteRequest1.toString();
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest1.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest1.validate();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}" + "'", str2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(actionRequestValidationException4);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType42 = deleteRequest41.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.versionType(versionType42);
        long long44 = deleteRequest39.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType49 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest39.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest50.refresh(true);
        org.elasticsearch.tasks.TaskId taskId55 = deleteRequest50.getParentTask();
        org.elasticsearch.tasks.Task task56 = deleteRequest14.createTask((long) (short) 1, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}", "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", taskId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest14.id("delete {[hi!][][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        deleteRequest58.primaryTerm((long) 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest4.remoteAddress(transportAddress8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest19.primaryTerm(10L);
        java.lang.String str22 = deleteRequest19.toString();
        java.lang.String str23 = deleteRequest19.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.consistencyLevel(writeConsistencyLevel24);
        boolean boolean27 = deleteRequest15.refresh();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest11.timeout(timeValue28);
        java.lang.String str30 = deleteRequest29.routing();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][hi!][hi!]}" + "'", str30, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.versionType(versionType18);
        deleteRequest17.primaryTerm((long) 1);
        boolean boolean22 = deleteRequest17.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest12.createTask((long) (byte) 10, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}", taskId29);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        deleteRequest0.seqNo((long) 'a');
        deleteRequest0.seqNo((-1L));
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest0.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str14 = deleteRequest13.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.consistencyLevel(writeConsistencyLevel15);
        long long17 = deleteRequest13.version();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId18);
        boolean boolean20 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = deleteRequest8.remoteAddress();
        boolean boolean22 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.common.io.stream.StreamInput streamInput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(versionType9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[][hi!][hi!]}" + "'", str14, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-3L) + "'", long17 == (-3L));
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(transportAddress21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType9 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        deleteRequest8.setParentTask(taskId14);
        org.elasticsearch.tasks.Task task16 = deleteRequest3.createTask(10L, "", "delete {[hi!][null][null]}", taskId14);
        java.lang.String str17 = deleteRequest3.parent();
        boolean boolean18 = deleteRequest3.refresh();
        boolean boolean19 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.routing("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str22 = deleteRequest21.toString();
        long long23 = deleteRequest21.primaryTerm();
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str22, "delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = shardFailure40.routing;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNull(shardRouting41);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[null][null][null]}");
        java.lang.Throwable throwable38 = shardFailure37.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", throwable38, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable38, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][][null]}", throwable38, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}", throwable38, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", throwable38, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][null][null]}][]}", throwable38, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        java.lang.String str4 = deleteRequest1.toString();
        java.lang.String str5 = deleteRequest1.toString();
        boolean boolean6 = deleteRequest1.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.id("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest1.remoteAddress(transportAddress9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.parent("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        java.lang.String str13 = deleteRequest12.parent();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest12.getParentTask();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[hi!][null][null]}" + "'", str4, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[hi!][null][null]}" + "'", str5, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str13, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId14);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest14.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        java.lang.String str24 = deleteRequest22.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId28);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest22.versionType();
        java.lang.String str31 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        deleteRequest44.setParentTask(taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest37.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        deleteRequest37.setParentTask(taskId57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest37.getParentTask();
        deleteRequest22.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest14.createTask((long) (short) -1, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", taskId59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest14.validate();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNull(actionRequestValidationException62);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "hi!", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "hi!");
        java.lang.String str53 = shardFailure52.reason;
        java.lang.String str54 = shardFailure52.indexUUID;
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[delete {[null][null][hi!]}][hi!][hi!]}" + "'", str53, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.version(0L);
        boolean boolean5 = deleteRequest2.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version((long) (byte) 10);
        long long9 = deleteRequest6.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest15.versionType();
        boolean boolean17 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest19.primaryTerm(10L);
        java.lang.String str22 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest30.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId38);
        java.lang.String str40 = deleteRequest30.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest30.versionType(versionType43);
        java.lang.String str45 = deleteRequest44.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("hi!");
        org.elasticsearch.index.VersionType versionType48 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest28.versionType(versionType48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest15.versionType(versionType48);
        org.elasticsearch.index.VersionType versionType51 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest2.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.type("delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[hi!][null][null]}" + "'", str45, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[null][null][hi!]}][hi!][hi!]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        deleteRequest3.seqNo((long) (short) 10);
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][hi!]}", throwable2, "delete {[delete {[null][null][hi!]}][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[null][][null]}]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        java.lang.String str6 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest0.timeout();
        java.lang.String str6 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        deleteRequest8.setParentTask("delete {[][null][null]}", (long) 1);
        boolean boolean12 = deleteRequest8.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.index("delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest5.remoteAddress(transportAddress12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest15.primaryTerm(10L);
        java.lang.String str18 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest5.versionType(versionType21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.parent("hi!");
        java.lang.String str26 = deleteRequest23.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}", deleteRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[hi!][null][null]}" + "'", str18, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}" + "'", str26, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        long long3 = deleteRequest2.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("delete {[][hi!][hi!]}");
        deleteRequest5.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.timeout(timeValue8);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.setShardId(shardId13);
        long long15 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str20 = deleteRequest19.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.consistencyLevel(writeConsistencyLevel25);
        long long27 = deleteRequest26.seqNo();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}][delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}]}", deleteRequest26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 100L + "'", long27 == 100L);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest14.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest14.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest22.versionType();
        java.lang.String str24 = deleteRequest22.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest22.setParentTask(taskId28);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest22.versionType();
        java.lang.String str31 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType45 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest49.getParentTask();
        deleteRequest44.setParentTask(taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest37.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest56.getParentTask();
        deleteRequest37.setParentTask(taskId57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest37.getParentTask();
        deleteRequest22.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest14.createTask((long) (short) -1, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", taskId59);
        long long62 = deleteRequest14.version();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNotNull(indicesOptions16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-3L) + "'", long62 == (-3L));
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException22, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException22, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[hi!][null][null]}");
        java.lang.String str29 = shardFailure28.indexUUID;
        java.lang.Throwable throwable30 = shardFailure28.cause;
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        long long5 = deleteRequest0.version();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest8.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.version(10L);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        deleteRequest8.setParentTask(taskId24);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(taskId24);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        java.lang.String str22 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.setShardId(shardId29);
        java.lang.String str31 = deleteRequest26.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest26.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][null]}][null]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[hi!][null][null]}][delete {[][delete {[null][null][hi!]}][]}][]}");
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable35, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}", throwable35, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str40 = shardFailure39.indexUUID;
        java.lang.String str41 = shardFailure39.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = shardFailure39.routing;
        java.lang.Throwable throwable43 = shardFailure39.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable43, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str40, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str41, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNull(shardRouting42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable43.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}", "delete {[hi!][null][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        java.lang.String str24 = deleteRequest22.routing();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        java.lang.String str10 = deleteRequest4.id();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.setShardId(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.setShardId(shardId13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest16.consistencyLevel();
        deleteRequest16.primaryTerm((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest21.remoteAddress(transportAddress23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str27 = deleteRequest26.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest31.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest26.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest21.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        long long41 = deleteRequest40.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.parent("delete {[][hi!][hi!]}");
        deleteRequest43.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue46 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.timeout(timeValue46);
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest43.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest21.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest16.timeout(timeValue48);
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest16.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = deleteRequest16.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest16.timeout();
        long long54 = deleteRequest16.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNull(transportAddress52);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-3L) + "'", long54 == (-3L));
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        long long2 = deleteRequest1.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.versionType(versionType7);
        boolean boolean9 = deleteRequest1.refresh();
        long long10 = deleteRequest1.seqNo();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        java.lang.String str25 = shardFailure24.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = shardFailure24.routing;
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][][null]}" + "'", str25, "delete {[null][][null]}");
        org.junit.Assert.assertNull(shardRouting26);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest1.routing("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest7.versionType();
        java.lang.String str10 = deleteRequest7.index();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.setShardId(shardId15);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        deleteRequest8.setParentTask(taskId17);
        deleteRequest7.setParentTask(taskId17);
        java.lang.String str20 = deleteRequest7.routing();
        java.lang.String str21 = deleteRequest7.id();
        boolean boolean22 = deleteRequest7.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException15, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException15, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        java.lang.Throwable throwable22 = shardFailure21.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable22, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", throwable22, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest7.getParentTask();
        deleteRequest3.setParentTask(taskId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest11.primaryTerm(10L);
        java.lang.String str14 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str24 = deleteRequest23.getDescription();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        deleteRequest19.setParentTask(taskId25);
        java.lang.String str27 = deleteRequest19.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        long long31 = deleteRequest30.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.versionType(versionType35);
        deleteRequest34.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest30.timeout(timeValue39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue43 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest29.timeout(timeValue43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest19.timeout(timeValue43);
        java.lang.String str46 = deleteRequest45.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.type("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][null][null]}" + "'", str14, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][hi!][hi!]}" + "'", str24, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException11, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException11, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = shardFailure17.routing;
        java.lang.String str19 = shardFailure17.reason;
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNull(shardRouting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        long long22 = deleteRequest18.version();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((long) (byte) 0, "", "", taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        long long28 = deleteRequest27.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest26.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest26.version((long) (byte) 10);
        java.lang.String str37 = deleteRequest26.index();
        java.lang.String str38 = deleteRequest26.id();
        java.lang.String str39 = deleteRequest26.getDescription();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][hi!]}" + "'", str19, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[hi!][null][null]}" + "'", str37, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}" + "'", str39, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        long long22 = deleteRequest18.version();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((long) (byte) 0, "", "", taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        long long28 = deleteRequest27.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest26.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest26.version((long) (byte) 10);
        long long37 = deleteRequest26.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest26.version(97L);
        java.lang.String str40 = deleteRequest39.toString();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][hi!]}" + "'", str19, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}" + "'", str40, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest12.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId20);
        java.lang.String str22 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType25 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest12.versionType(versionType25);
        java.lang.String str27 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray34 = deleteRequest33.indices();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest33.getParentTask();
        deleteRequest3.setParentTask(taskId35);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[hi!][null][null]}" + "'", str22, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(taskId35);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable33 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable33, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[][hi!][hi!]}]}", throwable33, "delete {[][delete {[null][null][hi!]}][]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest5.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId13);
        java.lang.String str15 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.versionType(versionType18);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[null][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException20, "delete {[delete {[hi!][null][null]}][null][]}");
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][null]}" + "'", str15, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException11, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure17 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        java.lang.Throwable throwable18 = shardFailure17.cause;
        java.lang.String str19 = shardFailure17.reason;
        java.lang.Throwable throwable20 = shardFailure17.cause;
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.version((long) 0);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        long long34 = deleteRequest33.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest33.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest33.timeout();
        java.lang.String str40 = deleteRequest33.id();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[hi!][null][null]}" + "'", str40, "delete {[hi!][null][null]}");
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest1.primaryTerm(10L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.timeout("delete {[delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}][]}", "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        java.lang.String str14 = deleteRequest0.index();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        java.lang.String str10 = deleteRequest4.id();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest4.setShardId(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest4.setShardId(shardId13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest4.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.consistencyLevel(writeConsistencyLevel15);
        java.lang.String str17 = deleteRequest16.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        long long4 = deleteRequest3.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        deleteRequest0.setParentTask(taskId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.type("delete {[][null][null]}");
        boolean boolean13 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        long long15 = deleteRequest14.seqNo();
        boolean boolean16 = deleteRequest14.getShouldPersistResult();
        long long17 = deleteRequest14.primaryTerm();
        long long18 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        long long20 = deleteRequest19.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("delete {[][hi!][hi!]}");
        deleteRequest22.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest14.timeout(timeValue25);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest12.timeout(timeValue31);
        java.lang.String str33 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.parent("delete {[hi!][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException19, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException19, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException19, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        deleteRequest12.primaryTerm((long) (byte) 1);
        long long15 = deleteRequest12.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.type("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.id("");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest31.remoteAddress(transportAddress34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest42.seqNo((-1L));
        java.lang.String str45 = deleteRequest42.toString();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.setShardId(shardId46);
        deleteRequest47.primaryTerm((-1L));
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest31.createTask(100L, "", "delete {[][hi!][hi!]}", taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest24.createTask((long) ' ', "delete {[][null][null]}", "delete {[delete {[null][null][hi!]}][hi!][hi!]}", taskId50);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task54 = deleteRequest17.createTask(0L, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[null][null][delete {[null][][null]}]}", taskId53);
        java.lang.Class<?> wildcardClass55 = task54.getClass();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str45, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        java.lang.String str3 = deleteRequest1.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest4.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest1.versionType();
        java.lang.String str10 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest1.index("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest16.primaryTerm(10L);
        java.lang.String str19 = deleteRequest16.toString();
        java.lang.String str20 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.version((-3L));
        deleteRequest16.setParentTask("delete {[null][null][hi!]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.routing("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        deleteRequest16.setParentTask(taskId32);
        deleteRequest14.setParentTask(taskId32);
        boolean boolean35 = deleteRequest14.getShouldPersistResult();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest3.timeout();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        java.lang.String[] strArray19 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.refresh(false);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray2 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str5 = deleteRequest4.routing();
        long long6 = deleteRequest4.seqNo();
        java.lang.Class<?> wildcardClass7 = deleteRequest4.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.version((long) 1);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = deleteRequest16.remoteAddress();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(transportAddress17);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        boolean boolean7 = deleteRequest3.refresh();
        java.lang.String[] strArray8 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        java.lang.String str11 = deleteRequest3.toString();
        java.lang.String str12 = deleteRequest3.toString();
        java.lang.String str13 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][null][null]}" + "'", str12, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest3.indicesOptions();
        java.lang.String str11 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[null][null][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException30, "delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}");
        java.lang.Throwable throwable43 = shardFailure42.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable43, "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable43.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str10 = deleteRequest9.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.consistencyLevel(writeConsistencyLevel11);
        long long13 = deleteRequest9.version();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest9.getParentTask();
        java.lang.String[] strArray15 = deleteRequest9.indices();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest5.timeout(timeValue16);
        deleteRequest5.primaryTerm((long) 10);
        org.elasticsearch.tasks.TaskId taskId20 = null;
        deleteRequest5.setParentTask(taskId20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest5.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][hi!][hi!]}" + "'", str10, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.consistencyLevel(writeConsistencyLevel37);
        deleteRequest36.setParentTask("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (long) (-1));
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest36.writeTo(streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        boolean boolean5 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.version(97L);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest7.remoteAddress();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest7.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(versionType9);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.index("");
        java.lang.String str13 = deleteRequest9.index();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.setShardId(shardId14);
        java.lang.String str16 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.parent("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest21.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("delete {[hi!][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest20.timeout(timeValue29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest20.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][hi!]}" + "'", str16, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.routing("delete {[hi!][null][null]}");
        deleteRequest2.primaryTerm((long) (-1));
        boolean boolean7 = deleteRequest2.refresh();
        java.lang.String str8 = deleteRequest2.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest13.timeout(timeValue18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest13.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.version(10L);
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest2.timeout(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("delete {[][][delete {[][hi!][hi!]}]}");
        java.lang.String str11 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.versionType(versionType14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[][null][null]}");
        java.lang.String str23 = deleteRequest22.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.consistencyLevel(writeConsistencyLevel24);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}" + "'", str23, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray2 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str5 = deleteRequest1.routing();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        deleteRequest0.seqNo((long) 'a');
        deleteRequest0.seqNo((-1L));
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        boolean boolean12 = deleteRequest11.refresh();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.versionType(versionType4);
        deleteRequest3.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest1.timeout(timeValue8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.id("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        boolean boolean14 = deleteRequest13.getShouldPersistResult();
        java.lang.String str15 = deleteRequest13.getDescription();
        java.lang.String str16 = deleteRequest13.routing();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str15, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable35 = shardFailure34.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable35, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", throwable35, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable35, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        java.lang.String str42 = shardFailure41.reason;
        java.lang.String str43 = shardFailure41.indexUUID;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable35.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}" + "'", str42, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}" + "'", str43, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.readFrom(streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        java.lang.String str2 = deleteRequest1.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("delete {[hi!][null][null]}");
        java.lang.String[] strArray5 = deleteRequest4.indices();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.setShardId(shardId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.index("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "delete {[][null][null]}" + "'", str2, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("hi!");
        deleteRequest4.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.versionType(versionType8);
        deleteRequest7.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest7.timeout();
        java.lang.String str13 = deleteRequest7.id();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest17.primaryTerm(10L);
        java.lang.String str20 = deleteRequest17.toString();
        java.lang.String str21 = deleteRequest17.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest4.consistencyLevel(writeConsistencyLevel22);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[hi!][null][null]}" + "'", str20, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task30 = deleteRequest21.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId29);
        java.lang.String str31 = deleteRequest21.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest21.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "hi!", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[null][null][delete {[null][][null]}]}");
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException19, "delete {[][null][null]}");
        java.lang.Throwable throwable30 = shardFailure29.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", throwable30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable30, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable30.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.versionType(versionType24);
        java.lang.String str26 = deleteRequest18.index();
        deleteRequest18.seqNo((long) 0);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}", "delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        java.lang.String str4 = deleteRequest3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}]}" + "'", str4, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}]}");
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        deleteRequest7.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", 0L);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest7.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest7.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(timeValue14);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        java.lang.Throwable throwable41 = shardFailure40.cause;
        java.lang.String str42 = shardFailure40.indexUUID;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str42, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        long long20 = deleteRequest18.primaryTerm();
        deleteRequest18.primaryTerm((long) (byte) 0);
        long long23 = deleteRequest18.seqNo();
        java.lang.String[] strArray24 = deleteRequest18.indices();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        java.lang.String[] strArray8 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        java.lang.String str11 = deleteRequest10.index();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest10.timeout();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        java.lang.String str5 = deleteRequest3.type();
        long long6 = deleteRequest3.primaryTerm();
        deleteRequest3.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", 100L);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = deleteRequest13.remoteAddress();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        long long32 = deleteRequest31.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str37 = deleteRequest36.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        deleteRequest34.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        long long45 = deleteRequest44.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.parent("delete {[][hi!][hi!]}");
        deleteRequest47.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest47.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest47.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest34.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.consistencyLevel(writeConsistencyLevel52);
        java.lang.String str55 = deleteRequest0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(transportAddress28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "delete {[null][null][delete {[][null][null]}]}" + "'", str55, "delete {[null][null][delete {[][null][null]}]}");
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        java.lang.String str12 = deleteRequest11.routing();
        boolean boolean13 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.routing("delete {[null][][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest7.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId15);
        java.lang.String str17 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.versionType(versionType20);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure24 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException22, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException22, "hi!");
        java.lang.String str27 = shardFailure26.indexUUID;
        java.lang.Throwable throwable28 = shardFailure26.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable28, "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[hi!][null][null]}" + "'", str17, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable28.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest10.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str26 = deleteRequest25.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.consistencyLevel(writeConsistencyLevel27);
        long long29 = deleteRequest25.version();
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task31 = deleteRequest18.createTask((long) (byte) 0, "", "", taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest18.setShardId(shardId32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest33.createTask((long) 1, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[][null][null]}", taskId42);
        deleteRequest4.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        long long46 = deleteRequest45.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.parent("delete {[][hi!][hi!]}");
        deleteRequest48.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest48.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest48.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest48.consistencyLevel();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest4.versionType(versionType54);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][hi!][hi!]}" + "'", str26, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        long long8 = deleteRequest6.seqNo();
        java.lang.String str9 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.index("delete {[][][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest20.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.refresh(false);
        boolean boolean25 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        deleteRequest29.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue32 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest24.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest14.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.timeout(timeValue32);
        boolean boolean37 = deleteRequest36.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        long long4 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("delete {[][hi!][hi!]}");
        deleteRequest8.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue11 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.setShardId(shardId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("delete {[delete {[null][null][hi!]}][delete {[hi!][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        long long21 = deleteRequest19.primaryTerm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str19 = deleteRequest18.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.consistencyLevel(writeConsistencyLevel20);
        long long22 = deleteRequest18.version();
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest11.createTask((long) (byte) 0, "", "", taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest11.setShardId(shardId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        long long28 = deleteRequest27.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        deleteRequest26.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest26.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("hi!");
        long long39 = deleteRequest38.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest38.remoteAddress(transportAddress40);
        deleteRequest38.primaryTerm(0L);
        java.lang.String str44 = deleteRequest38.getDescription();
        java.lang.String str45 = deleteRequest38.parent();
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[][hi!][hi!]}" + "'", str19, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10L + "'", long39 == 10L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}" + "'", str44, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}", "hi!", "delete {[][delete {[null][null][null]}][delete {[null][null][null]}]}");
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        deleteRequest7.setParentTask("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[null][null][null]}", "delete {[][null][null]}");
        deleteRequest18.setParentTask("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        long long26 = deleteRequest25.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.parent("delete {[][hi!][hi!]}");
        deleteRequest28.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue31 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.timeout(timeValue31);
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest28.setShardId(shardId36);
        long long38 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest28.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.versionType(versionType42);
        deleteRequest41.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest41.timeout();
        java.lang.String str47 = deleteRequest41.id();
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest28.timeout(timeValue48);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest18.createTask((long) (byte) -1, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}", "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", taskId50);
        deleteRequest14.setParentTask(taskId50);
        deleteRequest7.setParentTask(taskId50);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", throwable19, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", throwable19, "delete {[][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}]}");
        java.lang.Throwable throwable24 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][null][null]}][delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}][null][null]}]}", throwable24, "delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable24.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.index.VersionType versionType7 = deleteRequest6.versionType();
        java.lang.String str8 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        deleteRequest6.setParentTask("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}", (long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.id("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.setShardId(shardId16);
        java.lang.String str18 = deleteRequest6.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest6.versionType(versionType22);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][hi!][hi!]}" + "'", str8, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException25, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException25, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException25, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException25, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException25, "delete {[null][null][null]}");
        java.lang.Throwable throwable36 = shardFailure35.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", throwable36, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", throwable36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}", throwable36, "delete {[delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", throwable36, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        java.lang.Throwable throwable45 = shardFailure44.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}][delete {[hi!][null][null]}][delete {[][hi!][hi!]}]}", throwable45, "delete {[null][null][delete {[null][null][null]}]}");
        java.lang.Class<?> wildcardClass48 = throwable45.getClass();
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable36.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable45.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        long long6 = deleteRequest3.seqNo();
        java.lang.String str7 = deleteRequest3.id();
        long long8 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest3.validate();
        java.lang.String str10 = deleteRequest3.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        long long4 = deleteRequest1.seqNo();
        deleteRequest1.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}", (long) (byte) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest1.remoteAddress(transportAddress8);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        deleteRequest3.seqNo((long) 10);
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest4.routing();
        java.lang.String str9 = deleteRequest4.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest4.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest4.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest4.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[][hi!][hi!]}");
        deleteRequest16.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue19 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest16.timeout(timeValue19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.setShardId(shardId24);
        long long26 = deleteRequest16.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest16.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str31 = deleteRequest30.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest16.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest4.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest3.consistencyLevel(writeConsistencyLevel36);
        deleteRequest39.primaryTerm((long) (short) 0);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.setShardId(shardId42);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(writeConsistencyLevel10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.version(1L);
        java.lang.String str12 = deleteRequest11.routing();
        deleteRequest11.primaryTerm(0L);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest11.timeout();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(timeValue15);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.parent("delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}");
        deleteRequest14.seqNo((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}", "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}", "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        deleteRequest3.primaryTerm((-1L));
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException17, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException17, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException17, "");
        java.lang.Throwable throwable28 = shardFailure27.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][null][null]}][]}", throwable28, "delete {[delete {[hi!][null][null]}][delete {[][delete {[null][null][hi!]}][]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable28.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", "delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[null][][null]}]}");
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        java.lang.String str2 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[][][delete {[][hi!][hi!]}]}");
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        boolean boolean10 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.id("hi!");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray2 = deleteRequest1.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.id("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        java.lang.String str5 = deleteRequest4.routing();
        deleteRequest4.primaryTerm((long) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest4.shardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest4.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(shardId8);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        long long3 = deleteRequest0.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        long long17 = deleteRequest16.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest15.setParentTask(taskId22);
        deleteRequest10.setParentTask(taskId22);
        deleteRequest9.setParentTask(taskId22);
        deleteRequest9.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest9.parent("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long31 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest9.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest40.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest0.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType54 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest58.getParentTask();
        deleteRequest53.setParentTask(taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest46.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId59);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException62 = deleteRequest46.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest0.consistencyLevel(writeConsistencyLevel63);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNull(actionRequestValidationException62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        java.lang.String str6 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest8.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = deleteRequest8.remoteAddress();
        java.lang.String str11 = deleteRequest8.type();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(transportAddress10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][hi!][hi!]}" + "'", str11, "delete {[][hi!][hi!]}");
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[][hi!][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException34, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException34, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException34, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        long long2 = deleteRequest1.version();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest10.setParentTask(taskId16);
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        long long26 = deleteRequest25.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.setShardId(shardId29);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest30.getParentTask();
        deleteRequest22.setParentTask(taskId31);
        org.elasticsearch.tasks.Task task33 = deleteRequest3.createTask(100L, "hi!", "", taskId31);
        java.lang.String[] strArray34 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.parent("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.setShardId(shardId39);
        long long41 = deleteRequest38.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.versionType(versionType5);
        deleteRequest4.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest16.seqNo((-1L));
        java.lang.String str19 = deleteRequest16.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.consistencyLevel(writeConsistencyLevel20);
        java.lang.String str22 = deleteRequest21.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions25 = deleteRequest24.indicesOptions();
        java.lang.String str26 = deleteRequest24.getDescription();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str19, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(indicesOptions25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        long long34 = deleteRequest33.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest33.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest33.timeout();
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest33.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest33.consistencyLevel();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.routing("delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.versionType(versionType10);
        deleteRequest9.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.timeout(timeValue14);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest7.setShardId(shardId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "");
        java.lang.String str32 = deleteRequest31.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str38 = deleteRequest37.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest40.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest40.getParentTask();
        org.elasticsearch.tasks.Task task45 = deleteRequest31.createTask((long) (-1), "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", taskId44);
        org.elasticsearch.tasks.Task task46 = deleteRequest24.createTask((long) (short) 1, "", "", taskId44);
        deleteRequest19.setParentTask(taskId44);
        deleteRequest0.setParentTask(taskId44);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[hi!][null][null]}" + "'", str32, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(task46);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        long long3 = deleteRequest2.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.versionType(versionType7);
        deleteRequest6.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest1.timeout(timeValue15);
        long long17 = deleteRequest1.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest19.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId27);
        java.lang.String str29 = deleteRequest19.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest19.versionType(versionType32);
        java.lang.String str34 = deleteRequest33.toString();
        boolean boolean35 = deleteRequest33.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.routing("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest33.remoteAddress();
        java.lang.String str39 = deleteRequest33.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.setShardId(shardId44);
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest33.timeout(timeValue46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest1.timeout(timeValue46);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest48.writeTo(streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][null][null]}" + "'", str34, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "delete {[hi!][null][null]}" + "'", str39, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[hi!][null][null]}", "delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}");
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException24, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException24, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[][delete {[][hi!][hi!]}][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][delete {[null][null][null]}][null]}");
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        java.lang.String str20 = deleteRequest15.index();
        long long21 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest25.primaryTerm(10L);
        java.lang.String str28 = deleteRequest25.toString();
        java.lang.String str29 = deleteRequest25.toString();
        boolean boolean30 = deleteRequest25.refresh();
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest25.getParentTask();
        deleteRequest23.setParentTask(taskId31);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][null][null]}" + "'", str29, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(taskId31);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest1.versionType();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest9.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId17);
        java.lang.String str19 = deleteRequest9.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.versionType(versionType22);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest23.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException24, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException24, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException24, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        java.lang.Class<?> wildcardClass33 = actionRequestValidationException24.getClass();
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[hi!][null][null]}" + "'", str19, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.index("delete {[][null][null]}");
        java.lang.Class<?> wildcardClass18 = deleteRequest17.getClass();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.setShardId(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", "delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest7.primaryTerm(10L);
        java.lang.String str10 = deleteRequest7.toString();
        java.lang.String str11 = deleteRequest7.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest5.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest18.seqNo((-1L));
        java.lang.String str21 = deleteRequest18.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.setShardId(shardId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        long long25 = deleteRequest24.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("delete {[][hi!][hi!]}");
        deleteRequest27.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue30 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.timeout(timeValue30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.timeout(timeValue30);
        java.lang.String str34 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest14.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.consistencyLevel(writeConsistencyLevel37);
        deleteRequest36.setParentTask("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (long) (-1));
        java.lang.String str42 = deleteRequest36.routing();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest36.getParentTask();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest36.validate();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[hi!][null][null]}" + "'", str10, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str21, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[][hi!][hi!]}" + "'", str34, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[null][null][hi!]}" + "'", str42, "delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(actionRequestValidationException44);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str11 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        java.lang.String str14 = deleteRequest3.routing();
        java.lang.String str15 = deleteRequest3.id();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(taskId16);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[][delete {[null][null][hi!]}][]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest22.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException27, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException27, "delete {[null][null][null]}");
        java.lang.Throwable throwable38 = shardFailure37.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[][hi!][hi!]}", throwable38, "delete {[null][null][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable38, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable38, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[null][][null]}][delete {[][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable38, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", throwable38, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}", throwable38, "delete {[][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable38.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", "delete {[delete {[null][null][null]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][hi!]}", "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}", "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.consistencyLevel(writeConsistencyLevel11);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        java.lang.String str14 = deleteRequest12.parent();
        java.lang.String str15 = deleteRequest12.index();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.timeout(timeValue16);
        java.lang.String str18 = deleteRequest3.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest3.consistencyLevel();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        java.lang.String str19 = deleteRequest18.index();
        long long20 = deleteRequest18.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest24.primaryTerm(10L);
        java.lang.String str27 = deleteRequest24.toString();
        java.lang.String str28 = deleteRequest24.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest31.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType35 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.versionType(versionType35);
        deleteRequest34.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        long long41 = deleteRequest40.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.parent("delete {[][hi!][hi!]}");
        deleteRequest43.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest43.getParentTask();
        deleteRequest34.setParentTask(taskId46);
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest34.getParentTask();
        deleteRequest34.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.versionType(versionType52);
        deleteRequest51.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest59.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest59.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest59.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue66 = deleteRequest65.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest51.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest34.timeout(timeValue66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest31.timeout(timeValue66);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[hi!][null][null]}" + "'", str28, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.parent("hi!");
        long long11 = deleteRequest1.version();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.setShardId(shardId8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest7.indicesOptions();
        boolean boolean11 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str16 = deleteRequest15.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        boolean boolean19 = deleteRequest18.getShouldPersistResult();
        java.lang.String str20 = deleteRequest18.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        long long22 = deleteRequest21.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("delete {[][hi!][hi!]}");
        deleteRequest24.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest24.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.timeout(timeValue28);
        boolean boolean32 = deleteRequest3.getShouldPersistResult();
        long long33 = deleteRequest3.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.routing("delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][hi!][hi!]}" + "'", str16, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        java.lang.String str26 = deleteRequest25.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.index("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest30.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", (java.lang.Throwable) actionRequestValidationException31, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][hi!]}", (java.lang.Throwable) actionRequestValidationException31, "delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", (java.lang.Throwable) actionRequestValidationException31, "delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}", (java.lang.Throwable) actionRequestValidationException31, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][null][delete {[][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException31, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version((long) (byte) 0);
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.id("delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest3.remoteAddress(transportAddress5);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.index("");
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][]}", "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        deleteRequest3.seqNo((long) '#');
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertNotNull(indicesOptions6);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str8 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.consistencyLevel(writeConsistencyLevel13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest30.remoteAddress(transportAddress32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        long long35 = deleteRequest34.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("delete {[][hi!][hi!]}");
        deleteRequest37.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue40 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest37.timeout(timeValue40);
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.timeout(timeValue42);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest14.consistencyLevel(writeConsistencyLevel44);
        java.lang.String str46 = deleteRequest14.routing();
        long long47 = deleteRequest14.primaryTerm();
        org.junit.Assert.assertNotNull(versionType4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str2 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest4.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest7.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "hi!", "delete {[null][null][null]}");
        deleteRequest13.setParentTask("delete {[hi!][null][null]}", (long) 'a');
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest13.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.parent("delete {[][null][null]}");
        java.lang.String str21 = deleteRequest20.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest4.consistencyLevel(writeConsistencyLevel22);
        long long25 = deleteRequest4.seqNo();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[null][null][hi!]}");
        deleteRequest5.seqNo((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.parent("delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest9.versionType(versionType19);
        org.elasticsearch.common.unit.TimeValue timeValue22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest9.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest25.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("delete {[null][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest29.indicesOptions();
        java.lang.String[] strArray31 = deleteRequest29.indices();
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.timeout(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "hi!", "");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.versionType(versionType13);
        deleteRequest12.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (short) 0);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest7.timeout(timeValue21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        long long24 = deleteRequest23.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.parent("delete {[][hi!][hi!]}");
        deleteRequest26.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue29 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.timeout(timeValue29);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str34 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest45.getParentTask();
        org.elasticsearch.tasks.Task task47 = deleteRequest38.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId46);
        java.lang.String str48 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType51 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest38.versionType(versionType51);
        java.lang.String str53 = deleteRequest52.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.routing("hi!");
        java.lang.String str56 = deleteRequest55.index();
        long long57 = deleteRequest55.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest61.primaryTerm(10L);
        java.lang.String str64 = deleteRequest61.toString();
        java.lang.String str65 = deleteRequest61.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel66 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest59.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest55.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest33.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest7.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest3.consistencyLevel(writeConsistencyLevel66);
        org.elasticsearch.common.unit.TimeValue timeValue72 = deleteRequest3.timeout();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str34, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "delete {[hi!][null][null]}" + "'", str48, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[hi!][null][null]}" + "'", str53, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "delete {[hi!][null][null]}" + "'", str64, "delete {[hi!][null][null]}");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[hi!][null][null]}" + "'", str65, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel66 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel66.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(timeValue72);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}", "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", "");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.junit.Assert.assertNotNull(timeValue4);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        java.lang.String str33 = deleteRequest15.toString();
        boolean boolean34 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest15.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest15.index("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "delete {[hi!][null][null]}" + "'", str33, "delete {[hi!][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = shardFailure38.routing;
        java.lang.Throwable throwable40 = shardFailure38.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}", throwable40, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNull(shardRouting39);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable40.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException28, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[][][delete {[][hi!][hi!]}]}][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][delete {[null][][null]}]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}][hi!]}", "delete {[][hi!][delete {[][hi!][hi!]}]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][]}");
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        boolean boolean33 = deleteRequest15.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest15.remoteAddress();
        java.lang.String str35 = deleteRequest15.id();
        org.elasticsearch.index.shard.IndexShard indexShard36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete37 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest15, indexShard36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest3.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.refresh(false);
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.parent("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        deleteRequest13.seqNo((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.refresh(true);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        java.lang.String str8 = deleteRequest3.getDescription();
        java.lang.String str9 = deleteRequest3.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest3.indicesOptions();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}" + "'", str8, "delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str9, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions10);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.parent("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        boolean boolean7 = deleteRequest4.refresh();
        boolean boolean8 = deleteRequest4.refresh();
        deleteRequest4.setParentTask("hi!", 100L);
        long long12 = deleteRequest4.primaryTerm();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.parent("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        long long8 = deleteRequest6.seqNo();
        java.lang.String str9 = deleteRequest6.type();
        boolean boolean10 = deleteRequest6.refresh();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest6.remoteAddress(transportAddress11);
        boolean boolean13 = deleteRequest6.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str21 = deleteRequest20.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.consistencyLevel(writeConsistencyLevel22);
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        java.lang.String str25 = deleteRequest23.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        long long27 = deleteRequest26.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("delete {[][hi!][hi!]}");
        deleteRequest29.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest29.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest23.timeout(timeValue33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest6.createTask(0L, "delete {[null][null][delete {[null][][null]}]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[null][null][null]}]}", taskId35);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[][hi!][hi!]}" + "'", str21, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest13.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId21);
        java.lang.String str23 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType26 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest13.versionType(versionType26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}", (java.lang.Throwable) actionRequestValidationException28, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        java.lang.String str41 = shardFailure40.reason;
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[hi!][null][null]}" + "'", str23, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}" + "'", str41, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][]}", "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        java.lang.Throwable throwable19 = shardFailure18.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", throwable19, "delete {[null][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable19.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        long long13 = deleteRequest12.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.type("delete {[null][null][delete {[null][][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest15.consistencyLevel();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "hi!");
        org.elasticsearch.index.shard.ShardId shardId4 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.parent("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}");
        boolean boolean7 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest5.seqNo((-1L));
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        long long12 = deleteRequest11.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.parent("delete {[][hi!][hi!]}");
        deleteRequest14.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.id("delete {[delete {[null][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest10.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][delete {[][hi!][hi!]}][hi!]}" + "'", str8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        java.lang.String str9 = deleteRequest8.parent();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        java.lang.String[] strArray8 = deleteRequest0.indices();
        java.lang.Class<?> wildcardClass9 = deleteRequest0.getClass();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest15.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        deleteRequest32.setParentTask("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}", 1L);
        long long38 = deleteRequest32.seqNo();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest4.consistencyLevel();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][hi!][hi!]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", deleteRequest4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.index("delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version((long) (-1));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "delete {[][hi!][hi!]}", "");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.common.unit.TimeValue timeValue18 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest8.timeout(timeValue18);
        java.lang.String str20 = deleteRequest19.type();
        java.lang.String str21 = deleteRequest19.getDescription();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}" + "'", str20, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}" + "'", str21, "delete {[delete {[][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][null]}");
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("");
        boolean boolean6 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest5.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest5.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest5.getShouldPersistResult();
        java.lang.String str11 = deleteRequest5.toString();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][delete {[][hi!][hi!]}]}" + "'", str11, "delete {[][][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        java.lang.String str16 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.index("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest20.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String[] strArray28 = deleteRequest27.indices();
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.timeout(timeValue29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest20.timeout(timeValue29);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest20.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][null][delete {[delete {[null][null][hi!]}][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "hi!", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.Throwable throwable41 = shardFailure40.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", throwable41, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", throwable41, "delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", throwable41, "delete {[][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable41, "");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable41.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.setShardId(shardId5);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest3.shardId();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException4 = deleteRequest3.validate();
        org.elasticsearch.action.support.IndicesOptions indicesOptions5 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.index("");
        deleteRequest3.setParentTask("delete {[][][delete {[][hi!][hi!]}]}", 10L);
        java.lang.String str11 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest3.version(10L);
        long long16 = deleteRequest15.version();
        java.lang.String str17 = deleteRequest15.parent();
        org.junit.Assert.assertNull(actionRequestValidationException4);
        org.junit.Assert.assertNotNull(indicesOptions5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType1 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.versionType(versionType1);
        deleteRequest0.primaryTerm((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        deleteRequest8.seqNo((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.timeout(timeValue15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.setShardId(shardId17);
        boolean boolean19 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.parent("delete {[][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest0.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        long long14 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[][hi!][hi!]}");
        deleteRequest16.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest16.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest3.consistencyLevel(writeConsistencyLevel21);
        java.lang.String str23 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest3.parent("delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}");
        deleteRequest3.setParentTask("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", 0L);
        java.lang.String str29 = deleteRequest3.routing();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        long long11 = deleteRequest10.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException14, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][][null]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        java.lang.Throwable throwable23 = shardFailure22.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}][null]}", throwable23, "hi!");
        java.lang.Throwable throwable26 = shardFailure25.cause;
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable26.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        org.elasticsearch.tasks.Task task26 = deleteRequest17.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId25);
        java.lang.String str27 = deleteRequest17.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType30 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest17.versionType(versionType30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException32, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][null][null]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", (java.lang.Throwable) actionRequestValidationException32, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[hi!][null][null]}" + "'", str27, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task20 = deleteRequest11.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId19);
        java.lang.String str21 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException26, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException26, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable33 = shardFailure32.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable33, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", throwable33, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(task20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[hi!][null][null]}" + "'", str21, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable33.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.version((long) (byte) 10);
        long long3 = deleteRequest0.version();
        java.lang.String str4 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        java.lang.String[] strArray6 = deleteRequest0.indices();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        long long13 = deleteRequest12.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.setShardId(shardId16);
        org.elasticsearch.action.support.IndicesOptions indicesOptions18 = deleteRequest15.indicesOptions();
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str24 = deleteRequest23.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.consistencyLevel(writeConsistencyLevel25);
        boolean boolean27 = deleteRequest26.getShouldPersistResult();
        java.lang.String str28 = deleteRequest26.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        long long30 = deleteRequest29.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.parent("delete {[][hi!][hi!]}");
        deleteRequest32.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest26.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest15.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest11.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest0.timeout(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[][hi!][hi!]}" + "'", str24, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.index.VersionType versionType7 = deleteRequest5.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[hi!][null][null]}][null][null]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(versionType7);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        deleteRequest3.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.timeout(timeValue6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.setShardId(shardId8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        java.lang.String str13 = deleteRequest11.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.type("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][hi!]}");
        long long16 = deleteRequest11.primaryTerm();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        deleteRequest6.remoteAddress(transportAddress7);
        java.lang.String str9 = deleteRequest6.parent();
        deleteRequest6.primaryTerm((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][hi!][]}");
        java.lang.String str14 = deleteRequest6.getDescription();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[hi!][null][null]}][null][null]}" + "'", str14, "delete {[delete {[hi!][null][null]}][null][null]}");
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        boolean boolean2 = deleteRequest0.getShouldPersistResult();
        long long3 = deleteRequest0.primaryTerm();
        long long4 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("delete {[][hi!][hi!]}");
        deleteRequest8.seqNo((long) 100);
        org.elasticsearch.common.unit.TimeValue timeValue11 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.timeout(timeValue11);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.parent("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}");
        java.lang.String str18 = deleteRequest17.getDescription();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        long long5 = deleteRequest1.seqNo();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest1.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest1.version((long) 10);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[][hi!][hi!]}", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest3.remoteAddress(transportAddress10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest13.primaryTerm(10L);
        java.lang.String str16 = deleteRequest13.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.index("delete {[delete {[null][null][hi!]}][hi!][hi!]}");
        long long24 = deleteRequest23.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.setShardId(shardId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str31 = deleteRequest30.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.versionType(versionType33);
        deleteRequest32.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.timeout(timeValue37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest30.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        boolean boolean43 = deleteRequest42.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.routing("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        long long47 = deleteRequest46.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest42.timeout(timeValue50);
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest42.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest28.timeout(timeValue52);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[hi!][null][null]}" + "'", str16, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-3L) + "'", long24 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm(100L);
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][null]}", "delete {[null][null][null]}");
        java.lang.String str17 = deleteRequest16.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        long long19 = deleteRequest18.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.versionType(versionType23);
        deleteRequest22.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest18.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest40.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest45.getParentTask();
        deleteRequest40.setParentTask(taskId46);
        org.elasticsearch.tasks.Task task48 = deleteRequest35.createTask(10L, "", "delete {[hi!][null][null]}", taskId46);
        org.elasticsearch.tasks.Task task49 = deleteRequest28.createTask((long) '4', "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", "hi!", taskId46);
        deleteRequest16.setParentTask(taskId46);
        org.elasticsearch.tasks.Task task51 = deleteRequest0.createTask((long) (short) 10, "delete {[null][][null]}", "hi!", taskId46);
        boolean boolean52 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest0.routing("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}");
        deleteRequest54.setParentTask("delete {[null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][null]}", (long) (byte) 0);
        boolean boolean58 = deleteRequest54.refresh();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][null][null]}" + "'", str17, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(task48);
        org.junit.Assert.assertNotNull(task49);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        long long5 = deleteRequest4.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        java.lang.String str8 = deleteRequest4.routing();
        java.lang.String str9 = deleteRequest4.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest4.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest4.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest4.type("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[][hi!][hi!]}][hi!][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException14, "delete {[][delete {[hi!][null][null]}][]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(writeConsistencyLevel10);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest5.primaryTerm(10L);
        java.lang.String str8 = deleteRequest5.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest23.getParentTask();
        org.elasticsearch.tasks.Task task25 = deleteRequest16.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId24);
        java.lang.String str26 = deleteRequest16.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.routing("hi!");
        org.elasticsearch.index.VersionType versionType34 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest14.versionType(versionType34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[hi!][null][null]}][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (java.lang.Throwable) actionRequestValidationException36, "delete {[delete {[][hi!][hi!]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[hi!][null][null]}" + "'", str8, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(task25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[hi!][null][null]}" + "'", str31, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest17.parent("delete {[hi!][null][delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}]}");
        org.elasticsearch.index.VersionType versionType22 = deleteRequest17.versionType();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(versionType22);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str2 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest1.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest1.type("delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.type("delete {[null][][null]}");
        boolean boolean9 = deleteRequest6.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.id("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        java.lang.String str12 = deleteRequest6.type();
        java.lang.Class<?> wildcardClass13 = deleteRequest6.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][][null]}" + "'", str12, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.consistencyLevel(writeConsistencyLevel5);
        boolean boolean7 = deleteRequest6.getShouldPersistResult();
        java.lang.String str8 = deleteRequest6.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("delete {[][hi!][hi!]}");
        deleteRequest12.seqNo((long) 100);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.timeout(timeValue16);
        boolean boolean18 = deleteRequest6.refresh();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[][hi!][hi!]}" + "'", str4, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "");
        deleteRequest3.seqNo(0L);
        boolean boolean6 = deleteRequest3.getShouldPersistResult();
        java.lang.String str7 = deleteRequest3.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}" + "'", str7, "delete {[delete {[][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][]}");
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.setShardId(shardId2);
        org.junit.Assert.assertNotNull(deleteRequest3);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][delete {[][hi!][hi!]}][]}", "delete {[delete {[][hi!][hi!]}][delete {[][hi!][hi!]}][hi!]}", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest5.setShardId(shardId8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}", "", "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.version(0L);
        boolean boolean9 = deleteRequest6.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version((long) (byte) 10);
        long long13 = deleteRequest10.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType20 = deleteRequest19.versionType();
        boolean boolean21 = deleteRequest19.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        deleteRequest23.primaryTerm(10L);
        java.lang.String str26 = deleteRequest23.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType29 = deleteRequest28.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest34.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId42);
        java.lang.String str44 = deleteRequest34.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest34.versionType(versionType47);
        java.lang.String str49 = deleteRequest48.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.routing("hi!");
        org.elasticsearch.index.VersionType versionType52 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest32.versionType(versionType52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest19.versionType(versionType52);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest6.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest3.versionType(versionType55);
        java.lang.String str58 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest3.id("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[null][][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[hi!][null][null]}" + "'", str26, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[hi!][null][null]}" + "'", str44, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[hi!][null][null]}" + "'", str49, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(versionType52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}" + "'", str58, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[][hi!][hi!]}][hi!]}", "delete {[null][null][null]}", "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[null][null][hi!]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest3.remoteAddress(transportAddress4);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest3.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest3.getParentTask();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId7);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}", "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[null][null][null]}");
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        java.lang.String str12 = deleteRequest11.routing();
        boolean boolean13 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest11.routing("delete {[null][][null]}");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest11.versionType();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}][]}", "", "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}");
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[][hi!][hi!]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}][delete {[][delete {[null][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}]}]}", (java.lang.Throwable) actionRequestValidationException17, "delete {[delete {[hi!][delete {[][hi!][hi!]}][delete {[hi!][null][null]}]}][delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("delete {[hi!][null][null]}");
        java.lang.String str7 = deleteRequest6.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.index("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        deleteRequest9.seqNo((long) '#');
        deleteRequest9.setParentTask("delete {[null][null][delete {[hi!][delete {[][hi!][hi!]}][hi!]}]}", (long) (byte) 10);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest8.getParentTask();
        org.elasticsearch.tasks.Task task10 = deleteRequest1.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId9);
        java.lang.String str11 = deleteRequest1.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest1.versionType(versionType14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest1.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][hi!][hi!]}", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest20.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str25 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest20.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest1.consistencyLevel(writeConsistencyLevel30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        long long34 = deleteRequest33.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.versionType(versionType38);
        deleteRequest37.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest33.timeout(timeValue42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest1.timeout(timeValue42);
        org.elasticsearch.common.transport.TransportAddress transportAddress45 = null;
        deleteRequest1.remoteAddress(transportAddress45);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = deleteRequest1.remoteAddress();
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(transportAddress47);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        java.lang.String str9 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.parent("delete {[delete {[delete {[null][null][hi!]}][hi!][hi!]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest14.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest14.getParentTask();
        deleteRequest11.setParentTask(taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest11.routing("delete {[delete {[][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        java.lang.Throwable throwable21 = shardFailure20.cause;
        java.lang.Throwable throwable22 = shardFailure20.cause;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable21.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest6.getParentTask();
        deleteRequest1.setParentTask(taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest1.id("delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.id("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.refresh(false);
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.index("delete {[null][][null]}");
        deleteRequest10.primaryTerm((long) (byte) -1);
        org.elasticsearch.index.VersionType versionType22 = deleteRequest10.versionType();
        deleteRequest10.setParentTask("delete {[delete {[null][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][delete {[][][delete {[][hi!][hi!]}]}]}", (-1L));
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType22);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][null][null]}", "");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][null][null]}");
        deleteRequest3.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("delete {[][hi!][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        java.lang.String str23 = deleteRequest22.getDescription();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.consistencyLevel(writeConsistencyLevel24);
        long long26 = deleteRequest22.version();
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task28 = deleteRequest12.createTask(10L, "hi!", "", taskId27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId48 = deleteRequest47.getParentTask();
        deleteRequest42.setParentTask(taskId48);
        org.elasticsearch.tasks.Task task50 = deleteRequest35.createTask((long) (short) 0, "", "delete {[hi!][null][null]}", taskId48);
        org.elasticsearch.tasks.Task task51 = deleteRequest12.createTask((long) (short) 1, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}", "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", taskId48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task62 = deleteRequest53.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId61);
        long long63 = deleteRequest53.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        long long65 = deleteRequest64.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.versionType(versionType69);
        deleteRequest68.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest64.timeout(timeValue73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest53.timeout(timeValue73);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest12.timeout(timeValue73);
        boolean boolean77 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        java.lang.String str80 = deleteRequest79.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.index.VersionType versionType82 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest81.versionType(versionType82);
        deleteRequest81.primaryTerm((long) 1);
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest81.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest79.timeout(timeValue86);
        java.lang.String str88 = deleteRequest79.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest89.parent("delete {[hi!][null][null]}");
        org.elasticsearch.index.VersionType versionType92 = deleteRequest89.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel93 = deleteRequest89.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest79.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest12.consistencyLevel(writeConsistencyLevel93);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest3.consistencyLevel(writeConsistencyLevel93);
        java.lang.Class<?> wildcardClass97 = writeConsistencyLevel93.getClass();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[][hi!][hi!]}" + "'", str23, "delete {[][hi!][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-3L) + "'", long26 == (-3L));
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(task28);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(taskId48);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(versionType92);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel93 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel93.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.version(1L);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest0.versionType();
        deleteRequest0.setParentTask("delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", 97L);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException17, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "hi!", (java.lang.Throwable) actionRequestValidationException17, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = shardFailure23.routing;
        java.lang.Throwable throwable25 = shardFailure23.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][hi!][hi!]}][null][null]}", throwable25, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}", throwable25, "delete {[hi!][null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][hi!]}][]}", throwable25, "");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(shardRouting24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable25.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        long long9 = deleteRequest8.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.parent("delete {[][hi!][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][hi!][hi!]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][hi!][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[hi!][][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}]}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        long long5 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest0.indicesOptions();
        long long7 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest9.consistencyLevel();
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}", "delete {[hi!][hi!][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}", "delete {[delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}][delete {[][hi!][hi!]}][delete {[null][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][null]}]}");
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}", "delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}");
        long long4 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.refresh(false);
        java.lang.String str7 = deleteRequest6.getDescription();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-3L) + "'", long4 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}" + "'", str7, "delete {[delete {[][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest5.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.parent("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "", (java.lang.Throwable) actionRequestValidationException23, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[][][delete {[][hi!][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[null][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "delete {[][][delete {[][hi!][hi!]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[][hi!][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure35 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[hi!][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}][delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[hi!][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!]}][delete {[delete {[hi!][null][null]}][delete {[][hi!][hi!]}][]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[delete {[null][null][null]}][delete {[delete {[delete {[][hi!][hi!]}][null][null]}][hi!][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "hi!", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        org.elasticsearch.tasks.Task task24 = deleteRequest15.createTask((long) 10, "delete {[hi!][null][null]}", "delete {[][hi!][hi!]}", taskId23);
        java.lang.String str25 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.versionType(versionType28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", (java.lang.Throwable) actionRequestValidationException30, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "delete {[hi!][null][null]}", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][delete {[][hi!][hi!]}][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "hi!", (java.lang.Throwable) actionRequestValidationException30, "delete {[hi!][null][null]}");
        java.lang.Throwable throwable37 = shardFailure36.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure39 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}", throwable37, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable37, "delete {[hi!][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}]}", throwable37, "delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", throwable37, "delete {[null][delete {[][delete {[null][null][hi!]}][]}][null]}");
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[hi!][null][null]}" + "'", str25, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "Validation Failed: 1: type is missing;2: id is missing;");
        org.junit.Assert.assertEquals(throwable37.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: type is missing;2: id is missing;");
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType2 = deleteRequest1.versionType();
        long long3 = deleteRequest1.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.refresh(false);
        java.lang.String str6 = deleteRequest1.index();
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][hi!][hi!]}");
        java.lang.String str9 = deleteRequest6.getDescription();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest6.getParentTask();
        java.lang.String str11 = deleteRequest6.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.refresh(true);
        deleteRequest6.setParentTask("delete {[][delete {[delete {[delete {[null][null][hi!]}][delete {[null][null][hi!]}][]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[hi!][null][null]}][]}][delete {[null][][null]}]}][delete {[][null][null]}]}", (long) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[hi!][null][null]}" + "'", str9, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[hi!][null][null]}" + "'", str11, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.index.VersionType versionType3 = deleteRequest2.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.versionType(versionType3);
        deleteRequest0.seqNo((long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.version((long) (byte) 10);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest7.getParentTask();
        deleteRequest0.setParentTask(taskId10);
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest0.shardId();
        java.lang.String str13 = deleteRequest0.toString();
        deleteRequest0.seqNo((long) (short) 0);
        java.lang.String str16 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.id("delete {[delete {[hi!][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.setShardId(shardId19);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[][hi!][hi!]}");
        java.lang.String str4 = deleteRequest3.id();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][delete {[delete {[hi!][null][null]}][null][null]}][delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][hi!]}]}");
        java.lang.String str11 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        long long13 = deleteRequest12.seqNo();
        boolean boolean14 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.timeout(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        long long1 = deleteRequest0.seqNo();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.consistencyLevel(writeConsistencyLevel2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest3.indicesOptions();
        boolean boolean7 = deleteRequest3.refresh();
        java.lang.String[] strArray8 = deleteRequest3.indices();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.setShardId(shardId9);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][hi!][hi!]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[hi!][null][null]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][null][null]}][]}][][]}]}][hi!]}", "delete {[delete {[hi!][null][null]}][null][null]}", "delete {[delete {[null][null][delete {[delete {[][hi!][hi!]}][null][null]}]}][delete {[delete {[][hi!][hi!]}][][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[][hi!][hi!]}][hi!]}][delete {[][hi!][hi!]}]}][delete {[delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}][null][null]}][delete {[delete {[hi!][delete {[][hi!][hi!]}][hi!]}][hi!][null]}]}]}");
    }
}

